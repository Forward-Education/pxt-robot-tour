; Interface tables: 685/2292 (30%)
; Virtual methods: 14 / 162
; generated code sizes (bytes): 93008 (incl. 68972 user, 3928 helpers, 12636 vtables, 7472 lits); src size 0
; assembly: 61208 lines; density: 31.64 bytes/stmt; (2180 stmts)
; total bytes: 392016 (84.7% of 452.0k flash with 70832 free)
; peep hole pass: 1348 instructions removed and 2591 updated
; peep hole pass: 1033 instructions removed and 1 updated
; peep hole pass: 5 instructions removed and 5 updated
; peep hole pass: 0 instructions removed and 0 updated


; start
    .startaddr 0x49000
    .hex 708E3B92C615A841C49866C975EE5197 ; magic number
    .hex B335B646938CF32A ; hex template hash
    .hex 873266330af9dbdb ; replaced in binary by program hash
    .short 62   ; num. globals
    .short 0 ; patched with number of 64 bit words resulting from assembly
    .word _pxt_config_data
    .short 0 ; patched with comm section size
    .short 1 ; number of globals that are not pointers (they come first)
    .word _pxt_iface_member_names
    .word _pxt_lambda_trampoline@fn
    .word _pxt_perf_counters
    .word _pxt_restore_exception_state@fn
    .word _str154 ; name
    ;
; Function test.ts(1,1): <main>
    ;
    .object _main___P3883 "test.ts(1,1): <main>"
_main___P3883_pre:
    .section code
    .balign 4
_main___P3883_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word _main___P3883_args@fn
_main___P3883_args:
    .section code
_main___P3883:
_main___P3883_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
_main___P3883_locals:
    ldr r0, _ldlit_2 ; 65537      
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #4]
    @stackempty locals
    movs r0, #3
    ldr r7, [r6, #0]
    str r0, [r7, #32]
    @stackempty locals
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_3 ; _str21      
    movs r1, #216
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_4 ; _str22      
    movs r1, #220
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl settings_initScopes__P4080
_proccall155:
    @stackempty locals
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #1
    ldr r7, [r6, #0]
    str r0, [r7, #12]
    @stackempty locals
    movs r0, #10
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    movs r0, #10
    movs r1, #208
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl initPlatform__P3019
_proccall156:
    @stackempty locals
    ldr r0, _ldlit_5 ; _str39      
    movs r1, #164
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_6 ; _str41      
    movs r1, #168
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_7 ; _str64      
    ldr r7, [r6, #0]
    str r0, [r7, #116]
    @stackempty locals
    ldr r0, _ldlit_8 ; _str65      
    ldr r7, [r6, #0]
    str r0, [r7, #112]
    @stackempty locals
    ldr r0, _ldlit_7 ; _str64      
    ldr r7, [r6, #0]
    str r0, [r7, #104]
    @stackempty locals
    ldr r0, _ldlit_8 ; _str65      
    movs r1, #236
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_6 ; _str41      
    movs r1, #224
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_8 ; _str65      
    movs r1, #232
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_9 ; jacdac_LoggerServer__C3359_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_LoggerServer_constructor__P3361
_proccall157:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    movs r1, #180
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_5 ; _str39      
    movs r1, #244
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_10 ; _str66      
    ldr r7, [r6, #0]
    str r0, [r7, #84]
    @stackempty locals
    ldr r0, _ldlit_11 ; jacdac__rolemgr_RoleManagerServer__C3482_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_constructor__P3484
_proccall158:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    movs r1, #184
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_12 ; _str83      
    ldr r7, [r6, #0]
    str r0, [r7, #72]
    @stackempty locals
    ldr r0, _ldlit_13 ; _str84      
    ldr r7, [r6, #0]
    str r0, [r7, #80]
    @stackempty locals
    ldr r0, _ldlit_14 ; _str85      
    ldr r7, [r6, #0]
    str r0, [r7, #88]
    @stackempty locals
    ldr r0, _ldlit_15 ; _str86      
    ldr r7, [r6, #0]
    str r0, [r7, #48]
    @stackempty locals
    ldr r0, _ldlit_16 ; _str87      
    ldr r7, [r6, #0]
    str r0, [r7, #96]
    @stackempty locals
    ldr r0, _ldlit_17 ; _str88      
    movs r1, #192
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_18 ; _str89      
    ldr r7, [r6, #0]
    str r0, [r7, #76]
    @stackempty locals
    ldr r0, _ldlit_19 ; _str90      
    movs r1, #188
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_20 ; _str91      
    ldr r7, [r6, #0]
    str r0, [r7, #40]
    @stackempty locals
    ldr r0, _ldlit_21 ; _str92      
    ldr r7, [r6, #0]
    str r0, [r7, #64]
    @stackempty locals
    ldr r0, _ldlit_22 ; _str93      
    ldr r7, [r6, #0]
    str r0, [r7, #68]
    @stackempty locals
    ldr r0, _ldlit_23 ; _str94      
    ldr r7, [r6, #0]
    str r0, [r7, #44]
    @stackempty locals
    ldr r0, _ldlit_24 ; _str95      
    ldr r7, [r6, #0]
    str r0, [r7, #56]
    @stackempty locals
    ldr r0, _ldlit_25 ; _str96      
    ldr r7, [r6, #0]
    str r0, [r7, #60]
    @stackempty locals
    ldr r0, _ldlit_26 ; _str97      
    movs r1, #204
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_27 ; _str98      
    movs r1, #196
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_28 ; jacdac_Bus__C3607_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_Bus_constructor__P3613
_proccall159:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #16]
    @stackempty locals
    movs r0, #1
    ldr r7, [r6, #0]
    str r0, [r7, #100]
    @stackempty locals
    ldr r0, _ldlit_29 ; _str140      
    ldr r7, [r6, #0]
    str r0, [r7, #92]
    @stackempty locals
    ldr r0, _ldlit_30 ; _str141      
    movs r1, #200
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physStart
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl jacdac_setLed__P3765
_proccall160:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_1      
.jmpz161:
    ldr r7, [r6, #0]
    ldr r0, [r7, #20]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_1:
.afterif_1_1:
    bl jacdac_startProxy__P4321
_proccall163:
    @stackempty locals
    ldr r0, _ldlit_31 ; jacdac_inline__P4334_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2441
_proccall164:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_32 ; _str149      
    ldr r7, [r6, #0]
    str r0, [r7, #120]
    @stackempty locals
    ldr r0, _ldlit_33 ; _str150      
    movs r1, #128
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_5 ; _str39      
    movs r1, #132
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_33 ; _str150      
    movs r1, #136
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_33 ; _str150      
    movs r1, #140
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_34 ; _str40      
    movs r1, #144
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_33 ; _str150      
    movs r1, #148
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_34 ; _str40      
    movs r1, #152
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_35 ; _str151      
    movs r1, #156
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_35 ; _str151      
    movs r1, #160
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_33 ; _str150      
    ldr r7, [r6, #0]
    str r0, [r7, #124]
    @stackempty locals
    ldr r0, _ldlit_36 ; fwdBase_FwdServoClient__C3860_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, _ldlit_37 ; _str153      
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl fwdBase_FwdServoClient_constructor__P3861
_proccall165:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #28]
    @stackempty locals
    bl fwdMotors_createDrivingControls__P4353
_proccall166:
    ldr r7, [r6, #0]
    str r0, [r7, #24]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    bl fwdMotors_setupDriving__P3879
_proccall167:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    bl fwdMotors_conSetEnabled__P3873
_proccall168:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    bl fwdMotors_setSpeed__P3874
_proccall169:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    bl fwdMotors_conIsEnabled__P3876
_proccall171:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_1      
.jmpz170:
    movs r0, #101
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    bl fwdMotors_drive__P3880
_proccall172:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    bl fwdMotors_turn__P3882
_proccall173:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #28]
    push {r0} ; proc-arg
    bl fwdMotors_getSpeed__P3875
_proccall174:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl basic_showNumber__P2370
_proccall175:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    bl fwdMotors_stop__P3881
_proccall176:
    @stackempty locals
.else_2_1:
.afterif_3_1:
.ret.3883:
    @stackempty locals
    movs r0, #0
.final_4_1:
_main___P3883_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(2089,27): jacdac.inline
    ;
    .object jacdac_inline__P4334 "jacdac/routing.ts(2089,27): jacdac.inline"
jacdac_inline__P4334_pre:
    .section code
    .balign 4
jacdac_inline__P4334_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_inline__P4334_args@fn
jacdac_inline__P4334_args:
    .section code
jacdac_inline__P4334:
jacdac_inline__P4334_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_inline__P4334_locals:
    movs r0, #0
    push {r0} ; proc-arg
    bl jacdac_start__P3759
_proccall177:
    add sp, #4*1 ; pop locals 1
.ret.4334:
    @stackempty locals
    movs r0, #0
.final_0_2:
jacdac_inline__P4334_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(91,5): fwdMotors.stop
    ;
    .object fwdMotors_stop__P3881 "driving.ts(91,5): fwdMotors.stop"
fwdMotors_stop__P3881_pre:
    .section code
    .balign 4
    .section code
fwdMotors_stop__P3881:
fwdMotors_stop__P3881_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_stop__P3881_locals:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    push {r0} ; proc-arg
    movs r1, #84
    bl _ifacecall3__1
_proccall178:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3881:
    @stackempty locals
    movs r0, #0
.final_0_3:
fwdMotors_stop__P3881_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function blocks.ts(41,5): fwdMotors.getSpeed
    ;
    .object fwdMotors_getSpeed__P3875 "blocks.ts(41,5): fwdMotors.getSpeed"
fwdMotors_getSpeed__P3875_pre:
    .section code
    .balign 4
    .section code
fwdMotors_getSpeed__P3875:
fwdMotors_getSpeed__P3875_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_getSpeed__P3875_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl fwdBase_FwdServoClient_getSpeed__P3867
_proccall179:
    add sp, #4*1 ; pop locals 1
.ret.3875:
    @stackempty locals
.final_0_4:
fwdMotors_getSpeed__P3875_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function fwd-servo-base/client.ts(39,9): fwdBase.FwdServoClient.getSpeed
    ;
    .object fwdBase_FwdServoClient_getSpeed__P3867 "fwd-servo-base/client.ts(39,9): fwdBase.FwdServoClient.getSpeed"
fwdBase_FwdServoClient_getSpeed__P3867_pre:
    .section code
    .balign 4
fwdBase_FwdServoClient_getSpeed__P3867_args:
    cmp r4, #1
    bge fwdBase_FwdServoClient_getSpeed__P3867_nochk
    push {lr}
    bl _expand_args_1_2
    bl fwdBase_FwdServoClient_getSpeed__P3867_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
fwdBase_FwdServoClient_getSpeed__P3867:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_fwdBase_FwdServoClient__C3860_validate_3
    mov lr, r7
fwdBase_FwdServoClient_getSpeed__P3867_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdBase_FwdServoClient_getSpeed__P3867_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_angle__P3836_nochk
_proccall180:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_minAngle__P3844_nochk
_proccall181:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_maxAngle__P3847_nochk
_proccall182:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #199
    negs r0, r0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    push {r3}
    bl Math_map__P10
_proccall183:
    add sp, #4*5 ; pop locals 5
.ret.3867:
    @stackempty locals
    b .final_0_5      
.object PUSH
.balign 4
_ldlit_2:
 .word 65537
_ldlit_3:
 .word _str21
_ldlit_4:
 .word _str22
_ldlit_5:
 .word _str39
_ldlit_6:
 .word _str41
_ldlit_7:
 .word _str64
_ldlit_8:
 .word _str65
_ldlit_9:
 .word jacdac_LoggerServer__C3359_VT
_ldlit_10:
 .word _str66
_ldlit_11:
 .word jacdac__rolemgr_RoleManagerServer__C3482_VT
_ldlit_12:
 .word _str83
_ldlit_13:
 .word _str84
_ldlit_14:
 .word _str85
_ldlit_15:
 .word _str86
_ldlit_16:
 .word _str87
_ldlit_17:
 .word _str88
_ldlit_18:
 .word _str89
_ldlit_19:
 .word _str90
_ldlit_20:
 .word _str91
_ldlit_21:
 .word _str92
_ldlit_22:
 .word _str93
_ldlit_23:
 .word _str94
_ldlit_24:
 .word _str95
_ldlit_25:
 .word _str96
_ldlit_26:
 .word _str97
_ldlit_27:
 .word _str98
_ldlit_28:
 .word jacdac_Bus__C3607_VT
_ldlit_29:
 .word _str140
_ldlit_30:
 .word _str141
_ldlit_31:
 .word jacdac_inline__P4334_Lit
_ldlit_32:
 .word _str149
_ldlit_33:
 .word _str150
_ldlit_34:
 .word _str40
_ldlit_35:
 .word _str151
_ldlit_36:
 .word fwdBase_FwdServoClient__C3860_VT
_ldlit_37:
 .word _str153
.object POP
.final_0_5:
fwdBase_FwdServoClient_getSpeed__P3867_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(267,9): modules.ServoClient.maxAngle
    ;
    .object modules_ServoClient_maxAngle__P3847 "jacdac-servo/client.ts(267,9): modules.ServoClient.maxAngle"
modules_ServoClient_maxAngle__P3847_pre:
    .section code
    .balign 4
modules_ServoClient_maxAngle__P3847_args:
    cmp r4, #1
    bge modules_ServoClient_maxAngle__P3847_nochk
    push {lr}
    bl _expand_args_1_2
    bl modules_ServoClient_maxAngle__P3847_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ServoClient_maxAngle__P3847:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_maxAngle__P3847_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_maxAngle__P3847_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall184:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #116]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3682
_proccall185:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.3847:
    @stackempty locals
.final_0_6:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_maxAngle__P3847_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(942,9): jacdac.RegisterClient.pauseUntilValues
    ;
    .object jacdac_RegisterClient_pauseUntilValues__P3682 "jacdac/routing.ts(942,9): jacdac.RegisterClient.pauseUntilValues"
jacdac_RegisterClient_pauseUntilValues__P3682_pre:
    .section code
    .balign 4
jacdac_RegisterClient_pauseUntilValues__P3682_args:
    cmp r4, #2
    bge jacdac_RegisterClient_pauseUntilValues__P3682_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_RegisterClient_pauseUntilValues__P3682_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_RegisterClient_pauseUntilValues__P3682:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_pauseUntilValues__P3682_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_pauseUntilValues__P3682_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_7      
.jmpz186:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_query__P3681_nochk
_proccall187:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_7:
.afterif_1_7:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_hasValues__P3678_nochk
_proccall189:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_7      
.jmpz188:
    movs r0, #2
    ldr r1, _ldlit_39 ; jacdac_RegisterClient_pauseUntilValues_inline__P4411_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_7      
.jmpz190:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_7      
.lazySkip_4_7:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #5
    lsls r0, r0, #8
    adds r0, #221
.lazy_3_7:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl pauseUntil__P2811
_proccall191:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_7:
.afterif_5_7:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_values__P3683_nochk
_proccall192:
    add sp, #4*1 ; pop locals 1
.ret.3682:
    @stackempty locals
.final_6_7:
    add sp, #4*1 ; pop locals 1
jacdac_RegisterClient_pauseUntilValues__P3682_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(946,28): jacdac.RegisterClient.pauseUntilValues.inline
    ;
    .object jacdac_RegisterClient_pauseUntilValues_inline__P4411 "jacdac/routing.ts(946,28): jacdac.RegisterClient.pauseUntilValues.inline"
jacdac_RegisterClient_pauseUntilValues_inline__P4411_pre:
    .section code
    .balign 4
jacdac_RegisterClient_pauseUntilValues_inline__P4411_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_RegisterClient_pauseUntilValues_inline__P4411_args@fn
jacdac_RegisterClient_pauseUntilValues_inline__P4411_args:
    .section code
jacdac_RegisterClient_pauseUntilValues_inline__P4411:
jacdac_RegisterClient_pauseUntilValues_inline__P4411_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_pauseUntilValues_inline__P4411_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_hasValues__P3678_nochk
_proccall193:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_8      
.jmpz194:
    movs r0, #66
    b .ret.4411      
.else_0_8:
.afterif_1_8:
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_8      
.jmpz195:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_query__P3681_nochk
_proccall196:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_8:
.afterif_3_8:
    movs r0, #10
.ret.4411:
    @stackempty locals
.final_4_8:
    add sp, #4*1 ; pop locals 1
jacdac_RegisterClient_pauseUntilValues_inline__P4411_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(956,9): jacdac.RegisterClient.values
    ;
    .object jacdac_RegisterClient_values__P3683 "jacdac/routing.ts(956,9): jacdac.RegisterClient.values"
jacdac_RegisterClient_values__P3683_pre:
    .section code
    .balign 4
jacdac_RegisterClient_values__P3683_args:
    cmp r4, #1
    bge jacdac_RegisterClient_values__P3683_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_values__P3683_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_values__P3683:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_values__P3683_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_values__P3683_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl jacdac_Client_start__P3720
_proccall197:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_jdunpack__P3118
_proccall198:
    add sp, #4*2 ; pop locals 2
.ret.3683:
    @stackempty locals
.final_0_9:
jacdac_RegisterClient_values__P3683_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(218,5): jacdac.jdunpack
    ;
    .object jacdac_jdunpack__P3118 "jacdac/pack.ts(218,5): jacdac.jdunpack"
jacdac_jdunpack__P3118_pre:
    .section code
    .balign 4
    .section code
jacdac_jdunpack__P3118:
jacdac_jdunpack__P3118_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_jdunpack__P3118_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_10      
.jmpz199:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_10      
.lazySkip_2_10:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_10:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_10      
.jmpz200:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .ret.3118      
.else_0_10:
.afterif_3_10:
    ldr r0, _ldlit_40 ; _catch_4442      
    bl _pxt_save_exception_state
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdunpackCore__P4159
_proccall201:
    add sp, #4*3 ; pop locals 3
    b .ret.3118      
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_6_10      
_catch_4442:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl console_error__P2527
_proccall202:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .ret.3118      
.catchend_6_10:
    movs r0, #0
.ret.3118:
    @stackempty locals
.final_7_10:
    add sp, #4*1 ; pop locals 1
jacdac_jdunpack__P3118_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(46,5): console.error
    ;
    .object console_error__P2527 "core/console.ts(46,5): console.error"
console_error__P2527_pre:
    .section code
    .balign 4
    .section code
console_error__P2527:
console_error__P2527_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_error__P2527_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    bl console_add__P2524
_proccall203:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2527:
    @stackempty locals
    movs r0, #0
.final_0_11:
console_error__P2527_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(26,5): console.add
    ;
    .object console_add__P2524 "core/console.ts(26,5): console.add"
console_add__P2524_pre:
    .section code
    .balign 4
    .section code
console_add__P2524:
console_add__P2524_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_add__P2524_locals:
    ldr r0, [sp, args@0]
    ldr r7, [r6, #0]
    ldr r1, [r7, #32]
    bl _cmp_lt
    beq .else_0_12      
.jmpz204:
    b .ret.2524      
.else_0_12:
.afterif_1_12:
    movs r0, #41
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl console_inspect__P2530
_proccall205:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_41 ; _str7      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_8
    mov r7, sp
    str r7, [r6, #4]
    bl control::__log
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_12      
.jmpz206:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.4473:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.4473      
.jmpz207:
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    push {r3} ; the one arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.4473:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.4473      
.brk.4473:
.else_2_12:
.afterif_3_12:
.ret.2524:
    @stackempty locals
    movs r0, #0
.final_4_12:
    add sp, #4*2 ; pop locals 2
console_add__P2524_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(76,5): console.inspect
    ;
    .object console_inspect__P2530 "core/console.ts(76,5): console.inspect"
console_inspect__P2530_pre:
    .section code
    .balign 4
    .section code
console_inspect__P2530:
console_inspect__P2530_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
console_inspect__P2530_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_42 ; _str8      
    bl _cmp_eq
    beq .else_0_13      
.jmpz209:
    ldr r0, [sp, args@0]
    b .ret.2530      
    b .afterif_1_13      
.else_0_13:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_43 ; _str9      
    bl _cmp_eq
    beq .else_2_13      
.jmpz210:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    b .ret.2530      
.object PUSH
.balign 4
_ldlit_39:
 .word jacdac_RegisterClient_pauseUntilValues_inline__P4411_Lit
_ldlit_40:
 .word _catch_4442
_ldlit_41:
 .word _str7
_ldlit_42:
 .word _str8
_ldlit_43:
 .word _str9
.object POP
    b .afterif_3_13      
.else_2_13:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::isArray
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_13      
.jmpz211:
    ldr r0, [sp, args@0]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@1]
    bl _cmp_le
    beq .else_5_13      
.jmpz212:
    ldr r0, _ldlit_45 ; _str5      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arrayJoin__P2132
_proccall213:
    add sp, #4*2 ; pop locals 2
    b .ret.2530      
    b .afterif_6_13      
.else_5_13:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P2144
_proccall214:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, _ldlit_45 ; _str5      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayJoin__P2132
_proccall215:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_46 ; _str10      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.2530      
.afterif_6_13:
    b .afterif_7_13      
.else_4_13:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_47 ; _str11      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_13      
.jmpz216:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_13      
.lazySkip_10_13:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, _ldlit_48 ; _str12      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_9_13:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_13      
.jmpz217:
    ldr r0, [sp, locals@1]
    b .ret.2530      
.else_8_13:
.afterif_11_13:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::keysOf
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_13      
.jmpz218:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_arraySlice__P2144
_proccall219:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
.else_12_13:
.afterif_13_13:
    movs r0, #1
    ldr r1, _ldlit_49 ; console_inspect_inline__P4550_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_14_13      
.jmpz220:
    ldr r0, _ldlit_50 ; _str16      
    b .condexprfin_15_13      
.condexprz_14_13:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_15_13:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_arrayReduce__P2141
_proccall221:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_51 ; _str13      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_52 ; _str17      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .ret.2530      
.afterif_7_13:
.afterif_3_13:
.afterif_1_13:
    movs r0, #0
.ret.2530:
    @stackempty locals
.final_16_13:
    add sp, #4*4 ; pop locals 4
console_inspect__P2530_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(102,17): console.inspect.inline
    ;
    .object console_inspect_inline__P4550 "core/console.ts(102,17): console.inspect.inline"
console_inspect_inline__P4550_pre:
    .section code
    .balign 4
console_inspect_inline__P4550_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word console_inspect_inline__P4550_args@fn
console_inspect_inline__P4550_args:
    cmp r4, #2
    bge console_inspect_inline__P4550_nochk
    push {lr}
    bl _expand_args_2_5
    bl console_inspect_inline__P4550_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
console_inspect_inline__P4550:
console_inspect_inline__P4550_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_inspect_inline__P4550_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_53 ; _str14      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_54 ; _str15      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_12
    bl _pxt_map_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.4550:
    @stackempty locals
.final_0_14:
console_inspect_inline__P4550_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(281,5): helpers.arrayReduce
    ;
    .object helpers_arrayReduce__P2141 "core/pxt-helpers.ts(281,5): helpers.arrayReduce"
helpers_arrayReduce__P2141_pre:
    .section code
    .balign 4
    .section code
helpers_arrayReduce__P2141:
helpers_arrayReduce__P2141_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayReduce__P2141_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.4581:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.4581      
.jmpz222:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    ldr r0, [sp, #4*3] ; estack
    bl _lambda_call3_16
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@2]
    @stackempty locals
.cont.4581:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.4581      
.brk.4581:
    ldr r0, [sp, args@2]
.ret.2141:
    @stackempty locals
.final_0_15:
    add sp, #4*2 ; pop locals 2
helpers_arrayReduce__P2141_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(304,5): helpers.arraySlice
    ;
    .object helpers_arraySlice__P2144 "core/pxt-helpers.ts(304,5): helpers.arraySlice"
helpers_arraySlice__P2144_pre:
    .section code
    .balign 4
    .section code
helpers_arraySlice__P2144:
helpers_arraySlice__P2144_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySlice__P2144_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_16      
.jmpz224:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
    b .afterif_1_16      
.else_0_16:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_16      
.jmpz225:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P2159
_proccall226:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_2_16:
.afterif_3_16:
.afterif_1_16:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    bne .jmpz227
    b .else_4_16      
.object PUSH
.balign 4
_ldlit_45:
 .word _str5
_ldlit_46:
 .word _str10
_ldlit_47:
 .word _str11
_ldlit_48:
 .word _str12
_ldlit_49:
 .word console_inspect_inline__P4550_Lit
_ldlit_50:
 .word _str16
_ldlit_51:
 .word _str13
_ldlit_52:
 .word _str17
_ldlit_53:
 .word _str14
_ldlit_54:
 .word _str15
.object POP
.jmpz227:
    ldr r0, [sp, locals@0]
    b .ret.2144      
.else_4_16:
.afterif_5_16:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_16      
.jmpz228:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_7_16      
.else_6_16:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_8_16      
.jmpz229:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_8_16:
.afterif_9_16:
.afterif_7_16:
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_10_16      
.jmpz230:
    ldr r0, [sp, locals@1]
    str r0, [sp, args@2]
    @stackempty locals
.else_10_16:
.afterif_11_16:
    ldr r0, [sp, args@1]
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.4630:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.4630      
.jmpz231:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.4630:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.4630      
.brk.4630:
    ldr r0, [sp, locals@0]
.ret.2144:
    @stackempty locals
.final_12_16:
    add sp, #4*3 ; pop locals 3
helpers_arraySlice__P2144_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(559,5): Math.max
    ;
    .object Math_max__P2159 "core/pxt-helpers.ts(559,5): Math.max"
Math_max__P2159_pre:
    .section code
    .balign 4
    .section code
Math_max__P2159:
Math_max__P2159_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_max__P2159_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _cmp_ge
    beq .else_0_17      
.jmpz232:
    ldr r0, [sp, args@0]
    b .ret.2159      
.else_0_17:
.afterif_1_17:
    ldr r0, [sp, args@1]
.ret.2159:
    @stackempty locals
.final_2_17:
Math_max__P2159_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(158,5): helpers.arrayJoin
    ;
    .object helpers_arrayJoin__P2132 "core/pxt-helpers.ts(158,5): helpers.arrayJoin"
helpers_arrayJoin__P2132_pre:
    .section code
    .balign 4
    .section code
helpers_arrayJoin__P2132:
helpers_arrayJoin__P2132_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayJoin__P2132_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_18      
.jmpz233:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_18      
.lazySkip_2_18:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_1_18:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_18      
.jmpz234:
    ldr r0, _ldlit_56 ; _str5      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_18:
.afterif_3_18:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.4664:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.4664      
.jmpz235:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_18      
.jmpz236:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_18      
.lazySkip_6_18:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_5_18:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_18      
.jmpz237:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_4_18:
.afterif_7_18:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_18      
.jmpz238:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_18      
.lazySkip_11_18:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_10_18:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_8_18      
.jmpz239:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    b .condexprfin_9_18      
.condexprz_8_18:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.condexprfin_9_18:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
.cont.4664:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.4664      
.brk.4664:
    ldr r0, [sp, locals@0]
.ret.2132:
    @stackempty locals
.final_12_18:
    add sp, #4*3 ; pop locals 3
helpers_arrayJoin__P2132_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(142,5): jacdac.jdunpackCore
    ;
    .object jacdac_jdunpackCore__P4159 "jacdac/pack.ts(142,5): jacdac.jdunpackCore"
jacdac_jdunpackCore__P4159_pre:
    .section code
    .balign 4
    .section code
jacdac_jdunpackCore__P4159:
jacdac_jdunpackCore__P4159_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdunpackCore__P4159_locals:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_19      
.jmpz240:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .condexprfin_1_19      
.condexprz_0_19:
    movs r0, #6
.condexprfin_1_19:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, _ldlit_57 ; jacdac_TokenParser__C4156_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_TokenParser_constructor__P4158
_proccall241:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_19      
.jmpz242:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_19      
.lazySkip_4_19:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_3_19:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_19      
.jmpz243:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    b .ret.4159      
.else_2_19:
.afterif_5_19:
.cont.4723:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl jacdac_TokenParser_parse__P4157
_proccall245:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz244
    b .brk.4723      
.jmpz244:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_19      
.jmpz246:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_19      
.lazySkip_8_19:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_7_19:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_19      
.jmpz247:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_bufferSlice__P4155
_proccall248:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall249:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #3
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_jdunpackCore__P4159
_proccall250:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    b .ret.4159      
.else_6_19:
.afterif_9_19:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #16]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #8]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #4]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    movs r1, #245
    bl _cmp_eq
    bne .jmpz251
    b .else_10_19      
.object PUSH
.balign 4
_ldlit_56:
 .word _str5
_ldlit_57:
 .word jacdac_TokenParser__C4156_VT
.object POP
.jmpz251:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.4763:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_12_19      
.jmpz252:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_11_19      
.lazySkip_12_19:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_11_19:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.4763      
.jmpz253:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .cont.4763      
.brk.4763:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
    b .afterif_13_19      
.else_10_19:
    ldr r0, [sp, locals@5]
    movs r1, #1
    bl _cmp_lt
    beq .else_14_19      
.jmpz254:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@2]
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
.else_14_19:
.afterif_15_19:
.afterif_13_19:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_neqq
    beq .else_16_19      
.jmpz255:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_17_19      
.jmpz256:
    movs r0, #23
    b .condexprfin_18_19      
.condexprz_17_19:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
.condexprfin_18_19:
; jmp value (already in r0)
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_19      
.jmpz257:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r1, _ldlit_59 ; _dbl51      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_19_19:
.afterif_20_19:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #12]
    movs r1, #3
    bl _cmp_neq
    beq .else_21_19      
.jmpz258:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
.else_21_19:
.afterif_22_19:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    b .afterif_23_19      
.else_16_19:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@5]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_bufferSlice__P4155
_proccall259:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #245
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_26_19      
.jmpz260:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_25_19      
.lazySkip_26_19:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #231
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_25_19:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_24_19      
.jmpz261:
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
.cont.4850:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_19      
.jmpz262:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_19      
.lazySkip_28_19:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_27_19:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.4850      
.jmpz263:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .cont.4850      
.brk.4850:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl jacdac_bufferSlice__P4155
_proccall264:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_29_19      
.else_24_19:
    ldr r0, [sp, locals@6]
    movs r1, #197
    bl _cmp_eq
    beq .else_30_19      
.jmpz265:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_31_19      
.else_30_19:
    ldr r0, [sp, locals@6]
    movs r1, #241
    bl _cmp_eq
    beq .else_32_19      
.jmpz266:
    b .afterif_33_19      
.else_32_19:
    ldr r0, [sp, locals@6]
    movs r1, #229
    bl _cmp_eq
    beq .else_34_19      
.jmpz267:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall268:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #5
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_jdunpackCore__P4159
_proccall269:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.4723      
    b .afterif_35_19      
.else_34_19:
    ldr r0, _ldlit_60 ; _str52      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_35_19:
.afterif_33_19:
.afterif_31_19:
.afterif_29_19:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@6]
    movs r1, #245
    bl _cmp_eq
    beq .else_36_19      
.jmpz270:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.else_36_19:
.afterif_37_19:
.afterif_23_19:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_40_19      
.jmpz271:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_39_19      
.lazySkip_40_19:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_39_19:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_38_19      
.jmpz272:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _inst_jacdac_TokenParser__C4156_validate_20
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #5
    bl _cmp_eq
    beq .else_41_19      
.jmpz273:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_42_19      
.object PUSH
.balign 4
_ldlit_59:
 .word _dbl51
_ldlit_60:
 .word _str52
.object POP
.else_41_19:
.afterif_42_19:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_ge
    add sp, #4*2 ; pop locals 2
    beq .else_43_19      
.jmpz274:
    b .brk.4723      
.else_43_19:
.afterif_44_19:
.else_38_19:
.afterif_45_19:
    b .cont.4723      
.brk.4723:
    ldr r0, [sp, args@2]
    movs r1, #5
    bl _cmp_eq
    beq .else_46_19      
.jmpz275:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_47_19      
.jmpz276:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_47_19:
.afterif_48_19:
    ldr r0, [sp, locals@0]
    b .ret.4159      
    b .afterif_49_19      
.else_46_19:
    ldr r0, [sp, locals@1]
    b .ret.4159      
.afterif_49_19:
    movs r0, #0
.ret.4159:
    @stackempty locals
.final_50_19:
    add sp, #4*12 ; pop locals 12
jacdac_jdunpackCore__P4159_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(385,5): helpers.stringSlice
    ;
    .object helpers_stringSlice__P2148 "core/pxt-helpers.ts(385,5): helpers.stringSlice"
helpers_stringSlice__P2148_pre:
    .section code
    .balign 4
    .section code
helpers_stringSlice__P2148:
helpers_stringSlice__P2148_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_stringSlice__P2148_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_21      
.jmpz277:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl Math_max__P2159
_proccall278:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.else_0_21:
.afterif_1_21:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_2_21      
.jmpz279:
    ldr r0, [sp, locals@0]
    str r0, [sp, args@2]
    @stackempty locals
    b .afterif_3_21      
.else_2_21:
    ldr r0, [sp, args@2]
    movs r1, #6
    bl _cmp_eqq
    beq .else_4_21      
.jmpz280:
    movs r0, #1
    str r0, [sp, args@2]
    @stackempty locals
.else_4_21:
.afterif_5_21:
.afterif_3_21:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_6_21      
.jmpz281:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _numops_adds
    str r0, [sp, args@2]
    @stackempty locals
.else_6_21:
.afterif_7_21:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.2148:
    @stackempty locals
.final_8_21:
    add sp, #4*1 ; pop locals 1
helpers_stringSlice__P2148_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(52,5): jacdac.bufferSlice
    ;
    .object jacdac_bufferSlice__P4155 "jacdac/pack.ts(52,5): jacdac.bufferSlice"
jacdac_bufferSlice__P4155_pre:
    .section code
    .balign 4
    .section code
jacdac_bufferSlice__P4155:
jacdac_bufferSlice__P4155_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_bufferSlice__P4155_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*3 ; pop locals 3
.ret.4155:
    @stackempty locals
.final_0_22:
jacdac_bufferSlice__P4155_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(68,9): jacdac.TokenParser.parse
    ;
    .object jacdac_TokenParser_parse__P4157 "jacdac/pack.ts(68,9): jacdac.TokenParser.parse"
jacdac_TokenParser_parse__P4157_pre:
    .section code
    .balign 4
jacdac_TokenParser_parse__P4157_args:
    cmp r4, #1
    bge jacdac_TokenParser_parse__P4157_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_TokenParser_parse__P4157_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_TokenParser_parse__P4157:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    mov lr, r7
jacdac_TokenParser_parse__P4157_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_TokenParser_parse__P4157_locals:
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #32]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    str r0, [sp, locals@0]
    @stackempty locals
.cont.4984:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz282
    b .brk.4984      
.jmpz282:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@1]
    @stackempty locals
.cont.4992:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_23      
.jmpz283:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_23      
.lazySkip_1_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_0_23:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.4992      
.jmpz284:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .cont.4992      
.brk.4992:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2148
_proccall285:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_23      
.jmpz286:
    b .cont.4984      
.else_2_23:
.afterif_3_23:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_62 ; _str47      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #211
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_23      
.jmpz287:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_23      
.lazySkip_6_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #235
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_5_23:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_23      
.jmpz288:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_23      
.lazySkip_8_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_7_23:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_23      
.jmpz289:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall290:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl parseInt__P2126
_proccall291:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2148
_proccall292:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl parseInt__P2126
_proccall293:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    ldr r1, [sp, locals@6]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #3
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_23:
.afterif_9_23:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    movs r1, #183
    bl _cmp_eq
    beq .else_10_23      
.jmpz294:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall295:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl parseInt__P2126
_proccall296:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_11_23      
.else_10_23:
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #8]
    @stackempty locals
.afterif_11_23:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #187
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_23      
.jmpz297:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_23      
.lazySkip_14_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #5
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #183
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_13_23:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_23      
.jmpz298:
    movs r0, #3
    negs r0, r0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall299:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #32]
    @stackempty locals
.else_12_23:
.afterif_15_23:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #24]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_numberFormatOfType__P4152
_proccall300:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_eq
    beq .else_16_23      
.jmpz301:
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_63 ; _str48      
    bl _cmp_eq
    beq .else_17_23      
.jmpz302:
    ldr r0, [sp, args@0]
    movs r1, #23
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #24]
    @stackempty locals
    b .afterif_18_23      
.else_17_23:
    ldr r0, [sp, locals@2]
    ldr r1, _ldlit_64 ; _str49      
    bl _cmp_eq
    beq .else_19_23      
.jmpz303:
    ldr r0, [sp, args@0]
    movs r1, #11
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #24]
    @stackempty locals
.else_19_23:
.afterif_20_23:
.afterif_18_23:
.else_16_23:
.afterif_21_23:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@2]
    str r1, [r0, #28]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_eq
    bne .jmpz304
    b .else_22_23      
.jmpz304:
    ldr r0, [sp, locals@4]
    movs r1, #229
    bl _cmp_eq
    beq .else_23_23      
.jmpz305:
    ldr r0, [sp, locals@7]
    movs r1, #117
    bl _cmp_neq
    beq .else_24_23      
.jmpz306:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.else_24_23:
.afterif_25_23:
    b .afterif_26_23      
.else_23_23:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #231
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_29_23      
.jmpz307:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_28_23      
.object PUSH
.balign 4
_ldlit_62:
 .word _str47
_ldlit_63:
 .word _str48
_ldlit_64:
 .word _str49
.object POP
.lazySkip_29_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #197
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_28_23:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_31_23      
.jmpz308:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_30_23      
.lazySkip_31_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #241
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_30_23:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_23      
.jmpz309:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_23      
.jmpz310:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_23      
.lazySkip_34_23:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_33_23:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_23      
.jmpz311:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.else_32_23:
.afterif_35_23:
    b .afterif_36_23      
.else_27_23:
    ldr r0, [sp, locals@4]
    movs r1, #245
    bl _cmp_eq
    beq .else_37_23      
.jmpz312:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #3
    bl _cmp_neq
    beq .else_38_23      
.jmpz313:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.else_38_23:
.afterif_39_23:
    b .afterif_40_23      
.else_37_23:
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.afterif_40_23:
.afterif_36_23:
.afterif_26_23:
    ldr r0, [sp, locals@4]
    movs r1, #1
    bl _cmp_eq
    beq .else_41_23      
.jmpz314:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_66 ; _str50      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
    add sp, #4*1 ; pop locals 1
.else_41_23:
.afterif_42_23:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@4]
    str r1, [r0, #4]
    @stackempty locals
    b .afterif_43_23      
.else_22_23:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl Buffer_sizeOfNumberFormat__P2804
_proccall315:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    movs r1, #6
    bl _cmp_neq
    beq .else_44_23      
.jmpz316:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #8]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_44_23:
.afterif_45_23:
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #4]
    @stackempty locals
.afterif_43_23:
    movs r0, #66
    b .ret.4157      
    b .cont.4984      
.brk.4984:
    movs r0, #10
.ret.4157:
    @stackempty locals
.final_46_23:
    add sp, #4*8 ; pop locals 8
jacdac_TokenParser_parse__P4157_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(509,5): Buffer.sizeOfNumberFormat
    ;
    .object Buffer_sizeOfNumberFormat__P2804 "core/buffer.ts(509,5): Buffer.sizeOfNumberFormat"
Buffer_sizeOfNumberFormat__P2804_pre:
    .section code
    .balign 4
    .section code
Buffer_sizeOfNumberFormat__P2804:
Buffer_sizeOfNumberFormat__P2804_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Buffer_sizeOfNumberFormat__P2804_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz317
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_24      
.jmpz317:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz318
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_24      
.jmpz318:
    movs r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz319
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_24      
.jmpz319:
    movs r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz320
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_24      
.jmpz320:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz321
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_24      
.jmpz321:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz322
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_24      
.jmpz322:
    movs r0, #17
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz323
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_24      
.jmpz323:
    movs r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz324
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_24      
.jmpz324:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz325
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_24      
.jmpz325:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz326
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_24      
.jmpz326:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz327
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_10_24      
.jmpz327:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz328
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_11_24      
.jmpz328:
    movs r0, #31
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz329
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_24      
.jmpz329:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz330
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_24      
.jmpz330:
    movs r0, #33
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz331
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_24      
.jmpz331:
    movs r0, #29
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz332
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_24      
.jmpz332:
    pop {r0} ; tmpref @1
    b .brk.5202      
.switch_0_24:
.switch_1_24:
.switch_2_24:
.switch_3_24:
    movs r0, #3
    b .ret.2804      
.switch_4_24:
.switch_5_24:
.switch_6_24:
.switch_7_24:
    movs r0, #5
    b .ret.2804      
.switch_8_24:
.switch_9_24:
.switch_10_24:
.switch_11_24:
.switch_12_24:
.switch_13_24:
    movs r0, #9
    b .ret.2804      
.switch_14_24:
.switch_15_24:
    movs r0, #17
    b .ret.2804      
.brk.5202:
    movs r0, #1
.ret.2804:
    @stackempty locals
.final_16_24:
Buffer_sizeOfNumberFormat__P2804_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(19,5): jacdac.numberFormatOfType
    ;
    .object jacdac_numberFormatOfType__P4152 "jacdac/pack.ts(19,5): jacdac.numberFormatOfType"
jacdac_numberFormatOfType__P4152_pre:
    .section code
    .balign 4
    .section code
jacdac_numberFormatOfType__P4152:
jacdac_numberFormatOfType__P4152_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_numberFormatOfType__P4152_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_67 ; _str39      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz333
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_25      
.jmpz333:
    ldr r0, _ldlit_68 ; _str40      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz334
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_25      
.jmpz334:
    ldr r0, _ldlit_69 ; _str41      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz335
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_25      
.jmpz335:
    ldr r0, _ldlit_70 ; _str42      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz336
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_25      
.jmpz336:
    ldr r0, _ldlit_71 ; _str43      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz337
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_25      
.jmpz337:
    ldr r0, _ldlit_72 ; _str44      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz338
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_25      
.jmpz338:
    ldr r0, _ldlit_73 ; _str45      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz339
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_25      
.jmpz339:
    ldr r0, _ldlit_74 ; _str46      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz340
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_25      
.jmpz340:
    pop {r0} ; tmpref @1
    b .switch_8_25      
.switch_0_25:
    movs r0, #5
    b .ret.4152      
.switch_1_25:
    movs r0, #9
    b .ret.4152      
.switch_2_25:
    movs r0, #23
    b .ret.4152      
.switch_3_25:
    movs r0, #3
    b .ret.4152      
.switch_4_25:
    movs r0, #7
    b .ret.4152      
.switch_5_25:
    movs r0, #11
    b .ret.4152      
.switch_6_25:
    movs r0, #27
    b .ret.4152      
.switch_7_25:
    movs r0, #29
    b .ret.4152      
.switch_8_25:
    movs r0, #6
    b .ret.4152      
.brk.5221:
    movs r0, #0
.ret.4152:
    @stackempty locals
.final_9_25:
jacdac_numberFormatOfType__P4152_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(45,1): parseInt
    ;
    .object parseInt__P2126 "core/pxt-helpers.ts(45,1): parseInt"
parseInt__P2126_pre:
    .section code
    .balign 4
    .section code
parseInt__P2126:
parseInt__P2126_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
parseInt__P2126_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_26      
.jmpz341:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_26      
.object PUSH
.balign 4
_ldlit_66:
 .word _str50
_ldlit_67:
 .word _str39
_ldlit_68:
 .word _str40
_ldlit_69:
 .word _str41
_ldlit_70:
 .word _str42
_ldlit_71:
 .word _str43
_ldlit_72:
 .word _str44
_ldlit_73:
 .word _str45
_ldlit_74:
 .word _str46
.object POP
.lazySkip_2_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_26      
.jmpz342:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_26      
.lazySkip_4_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_26      
.jmpz343:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_26      
.lazySkip_6_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #73
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_5_26:
; jmp value (already in r0)
.lazy_3_26:
; jmp value (already in r0)
.lazy_1_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_26      
.jmpz344:
    movs r0, #14
    b .ret.2126      
.else_0_26:
.afterif_7_26:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.cont.5248:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_26      
.jmpz345:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_26      
.lazySkip_9_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl helpers_isWhitespace__P2153
_proccall346:
    add sp, #4*1 ; pop locals 1
.lazy_8_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.5248      
.jmpz347:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .cont.5248      
.brk.5248:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eqq
    add sp, #4*2 ; pop locals 2
    beq .else_10_26      
.jmpz348:
    movs r0, #14
    b .ret.2126      
.else_10_26:
.afterif_11_26:
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_76 ; _str0      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz349
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_12_26      
.jmpz349:
    ldr r0, _ldlit_77 ; _str1      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz350
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_26      
.jmpz350:
    pop {r0} ; tmpref @1
    b .brk.5277      
.switch_12_26:
    movs r0, #1
    negs r0, r0
    str r0, [sp, locals@1]
    @stackempty locals
.switch_13_26:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.brk.5277:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_26      
.jmpz351:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_26      
.lazySkip_16_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #33
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_26:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_18_26      
.jmpz352:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_17_26      
.lazySkip_18_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_78 ; _str2      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_17_26:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_20_26      
.jmpz353:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_19_26      
.lazySkip_20_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_79 ; _str3      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_22_26      
.jmpz354:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_21_26      
.lazySkip_22_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, _ldlit_80 ; _str4      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_21_26:
; jmp value (already in r0)
.lazy_19_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_26      
.jmpz355:
    movs r0, #33
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_23_26      
.else_14_26:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_24_26      
.jmpz356:
    movs r0, #21
    str r0, [sp, args@1]
    @stackempty locals
.else_24_26:
.afterif_25_26:
.afterif_23_26:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #10
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.5325:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz357
    b .brk.5325      
.jmpz357:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    movs r1, #65
    bl _numops_orrs
    str r0, [sp, locals@5]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #97
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_26      
.jmpz358:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_26      
.lazySkip_28_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #117
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_27_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_26      
.jmpz359:
    ldr r0, [sp, locals@5]
    movs r1, #97
    bl _numops_subs
    str r0, [sp, locals@6]
    @stackempty locals
    b .afterif_29_26      
.else_26_26:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #195
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_32_26      
.jmpz360:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_31_26      
.lazySkip_32_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    movs r1, #247
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_31_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_26      
.jmpz361:
    movs r0, #21
    ldr r1, [sp, locals@5]
    bl _numops_adds
    movs r1, #195
    bl _numops_subs
    str r0, [sp, locals@6]
    @stackempty locals
.else_30_26:
.afterif_33_26:
.afterif_29_26:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_36_26      
.jmpz362:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_35_26      
.lazySkip_36_26:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*2 ; pop locals 2
.lazy_35_26:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz363
    b .else_34_26      
.object PUSH
.balign 4
_ldlit_76:
 .word _str0
_ldlit_77:
 .word _str1
_ldlit_78:
 .word _str2
_ldlit_79:
 .word _str3
_ldlit_80:
 .word _str4
.object POP
.jmpz363:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_37_26      
.jmpz364:
    movs r0, #14
    b .ret.2126      
.else_37_26:
.afterif_38_26:
    b .brk.5325      
.else_34_26:
.afterif_39_26:
    movs r0, #66
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, locals@6]
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.cont.5325:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.5325      
.brk.5325:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
.ret.2126:
    @stackempty locals
.final_40_26:
    add sp, #4*7 ; pop locals 7
parseInt__P2126_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(504,5): helpers.isWhitespace
    ;
    .object helpers_isWhitespace__P2153 "core/pxt-helpers.ts(504,5): helpers.isWhitespace"
helpers_isWhitespace__P2153_pre:
    .section code
    .balign 4
    .section code
helpers_isWhitespace__P2153:
helpers_isWhitespace__P2153_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_isWhitespace__P2153_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #19
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz365
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_27      
.jmpz365:
    movs r0, #23
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz366
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_27      
.jmpz366:
    movs r0, #25
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz367
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_27      
.jmpz367:
    movs r0, #65
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz368
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_27      
.jmpz368:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #65
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz369
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_27      
.jmpz369:
    ldr r0, _ldlit_82 ; 130559      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz370
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_27      
.jmpz370:
    movs r0, #21
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz371
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_27      
.jmpz371:
    movs r0, #27
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz372
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_27      
.jmpz372:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #81
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz373
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_8_27      
.jmpz373:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #83
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz374
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_9_27      
.jmpz374:
    pop {r0} ; tmpref @1
    b .switch_10_27      
.switch_0_27:
.switch_1_27:
.switch_2_27:
.switch_3_27:
.switch_4_27:
.switch_5_27:
.switch_6_27:
.switch_7_27:
.switch_8_27:
.switch_9_27:
    movs r0, #66
    b .ret.2153      
.switch_10_27:
    movs r0, #10
    b .ret.2153      
.brk.5390:
    movs r0, #0
.ret.2153:
    @stackempty locals
.final_11_27:
helpers_isWhitespace__P2153_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(66,9): jacdac.TokenParser.constructor
    ;
    .object jacdac_TokenParser_constructor__P4158 "jacdac/pack.ts(66,9): jacdac.TokenParser.constructor"
jacdac_TokenParser_constructor__P4158_pre:
    .section code
    .balign 4
    .section code
jacdac_TokenParser_constructor__P4158:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    mov lr, r7
jacdac_TokenParser_constructor__P4158_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_TokenParser_constructor__P4158_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #16]
    movs r0, #0
.ret.4158:
    @stackempty locals
.final_0_28:
jacdac_TokenParser_constructor__P4158_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(74,1): pauseUntil
    ;
    .object pauseUntil__P2811 "core/poll.ts(74,1): pauseUntil"
pauseUntil__P2811_pre:
    .section code
    .balign 4
    .section code
pauseUntil__P2811:
pauseUntil__P2811_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pauseUntil__P2811_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_29      
.jmpz375:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_29      
.lazySkip_2_29:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
.lazy_1_29:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_29      
.jmpz377:
    b .ret.2811      
.else_0_29:
.afterif_3_29:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_29      
.jmpz378:
    movs r0, #1
    str r0, [sp, args@1]
    @stackempty locals
.else_4_29:
.afterif_5_29:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl control___queuePollEvent__P2810
_proccall379:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2811:
    @stackempty locals
    movs r0, #0
.final_6_29:
pauseUntil__P2811_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(40,5): control.__queuePollEvent
    ;
    .object control___queuePollEvent__P2810 "core/poll.ts(40,5): control.__queuePollEvent"
control___queuePollEvent__P2810_pre:
    .section code
    .balign 4
    .section code
control___queuePollEvent__P2810:
control___queuePollEvent__P2810_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
control___queuePollEvent__P2810_locals:
    ldr r0, _ldlit_83 ; control_PollEvent__C4026_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #255
    push {r0} ; proc-arg
    ldr r0, [sp, #4*11] ; tmpref @1
    push {r0} ; proc-arg
    bl control_PollEvent_constructor__P4027
_proccall380:
    add sp, #4*12 ; pop locals 12
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_30      
.jmpz381:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
    ldr r0, _ldlit_84 ; control_pollEvents__P4030_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2441
_proccall382:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_1_30      
.else_0_30:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_30:
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_30      
.jmpz383:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_26
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_3_30      
.else_2_30:
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_30:
.ret.2810:
    @stackempty locals
    movs r0, #0
.final_4_30:
    add sp, #4*1 ; pop locals 1
control___queuePollEvent__P2810_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(21,5): control.pollEvents
    ;
    .object control_pollEvents__P4030 "core/poll.ts(21,5): control.pollEvents"
control_pollEvents__P4030_pre:
    .section code
    .balign 4
control_pollEvents__P4030_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word control_pollEvents__P4030_args@fn
control_pollEvents__P4030_args:
    .section code
control_pollEvents__P4030:
control_pollEvents__P4030_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
control_pollEvents__P4030_locals:
.cont.5455:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz384
    b .brk.5455      
.jmpz384:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.5462:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz385
    b .brk.5462      
.jmpz385:
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #66
    bl _ifacecall1__28
_proccall387:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .jmpz386
    b .lazySkip_2_31      
.object PUSH
.balign 4
_ldlit_82:
 .word 130559
_ldlit_83:
 .word control_PollEvent__C4026_VT
_ldlit_84:
 .word control_pollEvents__P4030_Lit
.object POP
.jmpz386:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_31      
.lazySkip_2_31:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_31      
.jmpz388:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_31      
.lazySkip_4_31:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_3_31:
; jmp value (already in r0)
.lazy_1_31:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_31      
.jmpz389:
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_27
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_control_PollEvent__C4026_validate_24
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_31      
.jmpz390:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #8]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P2129
_proccall391:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
.else_5_31:
.afterif_6_31:
.else_0_31:
.afterif_7_31:
.cont.5462:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.5462      
.brk.5462:
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P2371
_proccall392:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.5455      
.brk.5455:
    movs r0, #0
    ldr r7, [r6, #0]
    str r0, [r7, #8]
    @stackempty locals
.ret.4030:
    @stackempty locals
    movs r0, #0
.final_8_31:
    add sp, #4*3 ; pop locals 3
control_pollEvents__P4030_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/basic.ts(24,1): pause
    ;
    .object pause__P2371 "core/basic.ts(24,1): pause"
pause__P2371_pre:
    .section code
    .balign 4
    .section code
pause__P2371:
pause__P2371_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pause__P2371_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P2122
_proccall394:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_32      
.jmpz393:
    movs r0, #41
    str r0, [sp, args@0]
    @stackempty locals
.else_0_32:
.afterif_1_32:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl basic::pause
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2371:
    @stackempty locals
    movs r0, #0
.final_2_32:
pause__P2371_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(13,1): isNaN
    ;
    .object isNaN__P2122 "core/pxt-helpers.ts(13,1): isNaN"
isNaN__P2122_pre:
    .section code
    .balign 4
    .section code
isNaN__P2122:
isNaN__P2122_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
isNaN__P2122_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_subs
    str r0, [sp, args@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*2 ; pop locals 2
.ret.2122:
    @stackempty locals
.final_0_33:
isNaN__P2122_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(138,5): helpers.arraySplice
    ;
    .object helpers_arraySplice__P2129 "core/pxt-helpers.ts(138,5): helpers.arraySplice"
helpers_arraySplice__P2129_pre:
    .section code
    .balign 4
    .section code
helpers_arraySplice__P2129:
helpers_arraySplice__P2129_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_arraySplice__P2129_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_34      
.jmpz395:
    b .ret.2129      
.else_0_34:
.afterif_1_34:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.5530:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_lt
    beq .brk.5530      
.jmpz396:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_30
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.5530:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.5530      
.brk.5530:
.ret.2129:
    @stackempty locals
    movs r0, #0
.final_2_34:
    add sp, #4*1 ; pop locals 1
helpers_arraySplice__P2129_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/poll.ts(9,9): control.PollEvent.constructor
    ;
    .object control_PollEvent_constructor__P4027 "core/poll.ts(9,9): control.PollEvent.constructor"
control_PollEvent_constructor__P4027_pre:
    .section code
    .balign 4
    .section code
control_PollEvent_constructor__P4027:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_control_PollEvent__C4026_validate_24
    mov lr, r7
control_PollEvent_constructor__P4027_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_PollEvent_constructor__P4027_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@4]
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@5]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@6]
    str r1, [r0, #24]
    @stackempty locals
    movs r0, #0
.ret.4027:
    @stackempty locals
.final_0_35:
control_PollEvent_constructor__P4027_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(910,9): jacdac.RegisterClient.hasValues
    ;
    .object jacdac_RegisterClient_hasValues__P3678 "jacdac/routing.ts(910,9): jacdac.RegisterClient.hasValues"
jacdac_RegisterClient_hasValues__P3678_pre:
    .section code
    .balign 4
jacdac_RegisterClient_hasValues__P3678_args:
    cmp r4, #1
    bge jacdac_RegisterClient_hasValues__P3678_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_hasValues__P3678_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_hasValues__P3678:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_hasValues__P3678_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_hasValues__P3678_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3678:
    @stackempty locals
.final_0_36:
jacdac_RegisterClient_hasValues__P3678_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(925,9): jacdac.RegisterClient.query
    ;
    .object jacdac_RegisterClient_query__P3681 "jacdac/routing.ts(925,9): jacdac.RegisterClient.query"
jacdac_RegisterClient_query__P3681_pre:
    .section code
    .balign 4
jacdac_RegisterClient_query__P3681_args:
    cmp r4, #1
    bge jacdac_RegisterClient_query__P3681_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_query__P3681_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_query__P3681:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_query__P3681_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_query__P3681_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_isConst__P3679_nochk
_proccall398:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_37      
.jmpz397:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_37      
.lazySkip_1_37:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_hasValues__P3678_nochk
_proccall399:
    add sp, #4*1 ; pop locals 1
.lazy_0_37:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r0, [r0, #8]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_37      
.jmpz400:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_37      
.lazySkip_4_37:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_37:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_37      
.jmpz401:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_isConst__P3679_nochk
_proccall403:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_37      
.jmpz402:
    movs r0, #6
    b .condexprfin_6_37      
.condexprz_5_37:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_isOptional__P3680_nochk
_proccall405:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_7_37      
.jmpz404:
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    b .condexprfin_8_37      
.condexprz_7_37:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #245
.condexprfin_8_37:
; jmp value (already in r0)
.condexprfin_6_37:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Device_query__P3741
_proccall406:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.else_2_37:
.afterif_9_37:
.ret.3681:
    @stackempty locals
    movs r0, #0
.final_10_37:
    add sp, #4*2 ; pop locals 2
jacdac_RegisterClient_query__P3681_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(918,9): jacdac.RegisterClient.isOptional
    ;
    .object jacdac_RegisterClient_isOptional__P3680 "jacdac/routing.ts(918,9): jacdac.RegisterClient.isOptional"
jacdac_RegisterClient_isOptional__P3680_pre:
    .section code
    .balign 4
jacdac_RegisterClient_isOptional__P3680_args:
    cmp r4, #1
    bge jacdac_RegisterClient_isOptional__P3680_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_isOptional__P3680_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_isOptional__P3680:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_isOptional__P3680_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_isOptional__P3680_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3680:
    @stackempty locals
.final_0_38:
jacdac_RegisterClient_isOptional__P3680_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1475,9): jacdac.Device.query
    ;
    .object jacdac_Device_query__P3741 "jacdac/routing.ts(1475,9): jacdac.Device.query"
jacdac_Device_query__P3741_pre:
    .section code
    .balign 4
jacdac_Device_query__P3741_args:
    cmp r4, #4
    bge jacdac_Device_query__P3741_nochk
    push {lr}
    bl _expand_args_4_32
    bl jacdac_Device_query__P3741_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Device_query__P3741:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_query__P3741_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_query__P3741_locals:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_lookupQuery__P4290_nochk
_proccall407:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_39      
.jmpz408:
    ldr r0, _ldlit_86 ; jacdac_RegQuery__C4287_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_RegQuery_constructor__P4288
_proccall409:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, #4*0] ; tmpref @1
    str r0, [sp, locals@0]
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_39:
.afterif_1_39:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_39      
.jmpz410:
    movs r0, #0
    b .ret.3741      
.else_2_39:
.afterif_3_39:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_39      
.jmpz411:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_39      
.lazySkip_6_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_8_39      
.jmpz412:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_39      
.lazySkip_8_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #3
    lsls r1, r1, #8
    adds r1, #233
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_7_39:
; jmp value (already in r0)
.lazy_5_39:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_39      
.jmpz413:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_39      
.lazySkip_10_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_12_39      
.jmpz414:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_11_39      
.lazySkip_12_39:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_11_39:
; jmp value (already in r0)
.lazy_9_39:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_39      
.jmpz415:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    str r1, [r0, #4]
    @stackempty locals
    movs r0, #32
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; the one arg
    bl jacdac_JDPacket_onlyHeader__P3069
_proccall416:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall417:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCmd__P3110
_proccall418:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_39:
.afterif_13_39:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #12]
.ret.3741:
    @stackempty locals
.final_14_39:
    add sp, #4*3 ; pop locals 3
jacdac_Device_query__P3741_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(306,9): jacdac.JDPacket._sendCmd
    ;
    .object jacdac_JDPacket__sendCmd__P3110 "jacdac/packet.ts(306,9): jacdac.JDPacket._sendCmd"
jacdac_JDPacket__sendCmd__P3110_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendCmd__P3110_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendCmd__P3110_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket__sendCmd__P3110_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendCmd__P3110:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket__sendCmd__P3110_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendCmd__P3110_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_40      
.jmpz419:
    b .ret.3110      
.else_0_40:
.afterif_1_40:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendCmdId__P3111_nochk
_proccall420:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3110:
    @stackempty locals
    movs r0, #0
.final_2_40:
jacdac_JDPacket__sendCmd__P3110_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(311,9): jacdac.JDPacket._sendCmdId
    ;
    .object jacdac_JDPacket__sendCmdId__P3111 "jacdac/packet.ts(311,9): jacdac.JDPacket._sendCmdId"
jacdac_JDPacket__sendCmdId__P3111_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendCmdId__P3111_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendCmdId__P3111_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket__sendCmdId__P3111_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendCmdId__P3111:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket__sendCmdId__P3111_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendCmdId__P3111_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_41      
.jmpz421:
    b .ret.3111      
.else_0_41:
.afterif_1_41:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P3077_nochk
_proccall422:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    movs r1, #3
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_36
    movs r1, #7
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCore__P3108_nochk
_proccall423:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3111:
    @stackempty locals
    movs r0, #0
.final_2_41:
jacdac_JDPacket__sendCmdId__P3111_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(293,9): jacdac.JDPacket._sendCore
    ;
    .object jacdac_JDPacket__sendCore__P3108 "jacdac/packet.ts(293,9): jacdac.JDPacket._sendCore"
jacdac_JDPacket__sendCore__P3108_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendCore__P3108_args:
    cmp r4, #1
    bge jacdac_JDPacket__sendCore__P3108_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket__sendCore__P3108_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_86:
 .word jacdac_RegQuery__C4287_VT
.object POP
    .section code
jacdac_JDPacket__sendCore__P3108:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket__sendCore__P3108_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendCore__P3108_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_42      
.jmpz424:
    ldr r0, _ldlit_88 ; _str37      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall425:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_42:
.afterif_1_42:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_37
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physSendPacket
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_processPacket__P3627
_proccall426:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3108:
    @stackempty locals
    movs r0, #0
.final_2_42:
jacdac_JDPacket__sendCore__P3108_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(256,9): jacdac.Bus.processPacket
    ;
    .object jacdac_Bus_processPacket__P3627 "jacdac/routing.ts(256,9): jacdac.Bus.processPacket"
jacdac_Bus_processPacket__P3627_pre:
    .section code
    .balign 4
jacdac_Bus_processPacket__P3627_args:
    cmp r4, #2
    bge jacdac_Bus_processPacket__P3627_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_processPacket__P3627_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_processPacket__P3627:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_processPacket__P3627_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_processPacket__P3627_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P3076
_proccall427:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_multicommandClass__P3079
_proccall428:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P3081
_proccall430:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_43      
.jmpz429:
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P3082
_proccall431:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P3076
_proccall433:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall434:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_1_43      
.jmpz432:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P3085
_proccall435:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_onlyHeader__P3069
_proccall436:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #127
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall437:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall438:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P3109
_proccall439:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_43:
.afterif_2_43:
.else_0_43:
.afterif_3_43:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall440:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_neq
    bne .jmpz441
    b .else_4_43      
.jmpz441:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isCommand__P3104
_proccall443:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_43      
.jmpz442:
    b .ret.3627      
.else_5_43:
.afterif_6_43:
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.5754:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.5754      
.jmpz444:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_43      
.jmpz445:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_43      
.lazySkip_9_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #32]
.lazy_8_43:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_43      
.jmpz446:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall447:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_deviceIdentifier__P3077
_proccall448:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall449:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_jacdac_Server__C3646_40
_proccall450:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_7_43:
.afterif_10_43:
.cont.5754:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.5754      
.brk.5754:
    movs r0, #0
    str r0, [sp, locals@5]
    b .afterif_11_43      
.else_4_43:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall452:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_43      
.jmpz451:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_43      
.lazySkip_14_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isCommand__P3104
_proccall453:
    add sp, #4*1 ; pop locals 1
.lazy_13_43:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_43      
.jmpz454:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083
_proccall455:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_17_43      
.jmpz456:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_43      
.lazySkip_17_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@7]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #32]
.lazy_16_43:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_43      
.jmpz457:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_jacdac_Server__C3646_40
_proccall458:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_15_43:
.afterif_18_43:
    b .afterif_19_43      
.object PUSH
.balign 4
_ldlit_88:
 .word _str37
.object POP
.else_12_43:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isCommand__P3104
_proccall460:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_20_43      
.jmpz459:
    b .ret.3627      
.else_20_43:
.afterif_21_43:
    movs r0, #1
    ldr r1, _ldlit_90 ; dev_inline__P5800_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2140
_proccall461:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083
_proccall463:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _cmp_eq
    bne .jmpz462
    b .else_22_43      
.jmpz462:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall465:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _cmp_eq
    bne .jmpz464
    b .else_23_43      
.jmpz464:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    bl _numops_ands
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_26_43      
.jmpz466:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_25_43      
.lazySkip_26_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_restartCounter__P3731
_proccall467:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_25_43:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_24_43      
.jmpz468:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735
_proccall469:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_91 ; _str106      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_92 ; _str107      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_restartCounter__P3731
_proccall470:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_93 ; _str108      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_94 ; _str109      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall471:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device__destroy__P3749
_proccall472:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #6
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall473:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_24_43:
.afterif_27_43:
    movs r0, #10
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_28_43      
.jmpz474:
    ldr r0, _ldlit_95 ; jacdac_Device__C3724_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P3076
_proccall475:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_Device_constructor__P3728
_proccall476:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall477:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_29_43      
.else_28_43:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_serviceMatches__P4301
_proccall478:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Device__C3724_validate_33
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_29_43:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall480:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_32_43      
.jmpz479:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_31_43      
.lazySkip_32_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall481:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_Device_isBrain__P3729
_proccall482:
    add sp, #4*1 ; pop locals 1
.lazy_31_43:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_34_43      
.jmpz483:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_33_43      
.lazySkip_34_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_isBrain__P3729
_proccall484:
    add sp, #4*1 ; pop locals 1
.lazy_33_43:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_36_43      
.jmpz485:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_35_43      
.lazySkip_36_43:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    bl jacdac_isSimulator__P3754
_proccall486:
.lazy_35_43:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_43      
.jmpz487:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735
_proccall488:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_91 ; _str106      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_96 ; _str110      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall489:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl jacdac_resetToProxy__P4322
_proccall490:
    @stackempty locals
.else_30_43:
.afterif_37_43:
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_38_43      
.jmpz491:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_reattach__P3626_nochk
_proccall492:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_38_43:
.afterif_39_43:
    b .afterif_40_43      
.object PUSH
.balign 4
_ldlit_90:
 .word dev_inline__P5800_Lit
_ldlit_91:
 .word _str106
_ldlit_92:
 .word _str107
_ldlit_93:
 .word _str108
_ldlit_94:
 .word _str109
_ldlit_95:
 .word jacdac_Device__C3724_VT
_ldlit_96:
 .word _str110
.object POP
.else_23_43:
.afterif_40_43:
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_41_43      
.jmpz493:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_processPacket__P3745
_proccall494:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_41_43:
.afterif_42_43:
    b .ret.3627      
    b .afterif_43_43      
.else_22_43:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083
_proccall496:
    add sp, #4*1 ; pop locals 1
    movs r1, #127
    bl _cmp_eq
    beq .else_44_43      
.jmpz495:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac__gotAck__P3114
_proccall497:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_44_43:
.afterif_45_43:
.afterif_43_43:
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_46_43      
.jmpz498:
    b .ret.3627      
.else_46_43:
.afterif_47_43:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Device_processPacket__P3745
_proccall499:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_19_43:
.afterif_11_43:
.ret.3627:
    @stackempty locals
    movs r0, #0
.final_48_43:
    add sp, #4*11 ; pop locals 11
jacdac_Bus_processPacket__P3627_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(294,45): dev.inline
    ;
    .object dev_inline__P5800 "jacdac/routing.ts(294,45): dev.inline"
dev_inline__P5800_pre:
    .section code
    .balign 4
dev_inline__P5800_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dev_inline__P5800_args@fn
dev_inline__P5800_args:
    cmp r4, #1
    bge dev_inline__P5800_nochk
    push {lr}
    bl _expand_args_1_2
    bl dev_inline__P5800_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
dev_inline__P5800:
dev_inline__P5800_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
dev_inline__P5800_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.5800:
    @stackempty locals
.final_0_44:
dev_inline__P5800_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(389,5): jacdac._gotAck
    ;
    .object jacdac__gotAck__P3114 "jacdac/packet.ts(389,5): jacdac._gotAck"
jacdac__gotAck__P3114_pre:
    .section code
    .balign 4
    .section code
jacdac__gotAck__P3114:
jacdac__gotAck__P3114_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__gotAck__P3114_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_45      
.jmpz500:
    b .ret.3114      
.else_0_45:
.afterif_1_45:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P3076
_proccall501:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall502:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    str r0, [sp, locals@4]
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.5929:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.5929      
.jmpz503:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_45      
.jmpz504:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_45      
.lazySkip_4_45:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_3_45:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_45      
.jmpz505:
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_42
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #255
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_45:
.afterif_5_45:
.cont.5929:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    b .fortop.5929      
.brk.5929:
    movs r0, #0
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_45      
.jmpz506:
    ldr r0, _ldlit_98 ; jacdac__gotAck_inline__P5957_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2139
_proccall507:
    add sp, #4*2 ; pop locals 2
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
.else_6_45:
.afterif_7_45:
.ret.3114:
    @stackempty locals
    movs r0, #0
.final_8_45:
    add sp, #4*6 ; pop locals 6
jacdac__gotAck__P3114_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(401,57): jacdac._gotAck.inline
    ;
    .object jacdac__gotAck_inline__P5957 "jacdac/packet.ts(401,57): jacdac._gotAck.inline"
jacdac__gotAck_inline__P5957_pre:
    .section code
    .balign 4
jacdac__gotAck_inline__P5957_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__gotAck_inline__P5957_args@fn
jacdac__gotAck_inline__P5957_args:
    cmp r4, #1
    bge jacdac__gotAck_inline__P5957_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__gotAck_inline__P5957_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__gotAck_inline__P5957:
jacdac__gotAck_inline__P5957_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__gotAck_inline__P5957_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neqq
    add sp, #4*1 ; pop locals 1
.ret.5957:
    @stackempty locals
.final_0_46:
jacdac__gotAck_inline__P5957_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(262,5): helpers.arrayFilter
    ;
    .object helpers_arrayFilter__P2139 "core/pxt-helpers.ts(262,5): helpers.arrayFilter"
helpers_arrayFilter__P2139_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFilter__P2139:
helpers_arrayFilter__P2139_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFilter__P2139_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.5970:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.5970      
.jmpz508:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_47      
.jmpz509:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_47:
.afterif_1_47:
.cont.5970:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.5970      
.brk.5970:
    ldr r0, [sp, locals@0]
.ret.2139:
    @stackempty locals
.final_2_47:
    add sp, #4*4 ; pop locals 4
helpers_arrayFilter__P2139_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1520,9): jacdac.Device.processPacket
    ;
    .object jacdac_Device_processPacket__P3745 "jacdac/routing.ts(1520,9): jacdac.Device.processPacket"
jacdac_Device_processPacket__P3745_pre:
    .section code
    .balign 4
jacdac_Device_processPacket__P3745_args:
    cmp r4, #2
    bge jacdac_Device_processPacket__P3745_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Device_processPacket__P3745_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Device_processPacket__P3745:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_processPacket__P3745_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_processPacket__P3745_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall511:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall513:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_48      
.jmpz512:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_48      
.lazySkip_2_48:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.lazy_1_48:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_48      
.jmpz514:
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_getNumber__P3102
_proccall515:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _cmp_eq
    beq .else_3_48      
.jmpz516:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083
_proccall517:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Device_lookupQuery__P4290_nochk
_proccall518:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_48      
.jmpz519:
    ldr r0, [sp, locals@1]
    movs r1, #66
    bl _inst_jacdac_RegQuery__C4287_validate_34
    str r1, [r0, #16]
    @stackempty locals
.else_4_48:
.afterif_5_48:
.else_3_48:
.afterif_6_48:
.else_0_48:
.afterif_7_48:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083
_proccall520:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P3092
_proccall522:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_48      
.jmpz521:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_48      
.lazySkip_10_48:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.lazy_9_48:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_48      
.jmpz523:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P3093
_proccall524:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_Device_lookupQuery__P4290_nochk
_proccall525:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_48      
.jmpz526:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_RegQuery__C4287_validate_34
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_RegQuery__C4287_validate_34
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_11_48:
.afterif_12_48:
.else_8_48:
.afterif_13_48:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3740_nochk
_proccall527:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_48      
.jmpz528:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_48      
.lazySkip_16_48:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r1, _ldlit_99 ; _dbl60      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    b .lazy_15_48      
.object PUSH
.balign 4
_ldlit_98:
 .word jacdac__gotAck_inline__P5957_Lit
_ldlit_99:
 .word _dbl60
.object POP
.lazy_15_48:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_48      
.jmpz529:
    b .ret.3745      
.else_14_48:
.afterif_17_48:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P3088
_proccall531:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz530
    b .else_18_48      
.jmpz530:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #0
    bl _cmp_eqq
    beq .else_19_48      
.jmpz532:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P3090
_proccall533:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@5]
    @stackempty locals
.else_19_48:
.afterif_20_48:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P3090
_proccall534:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@5]
    bl _numops_subs
    movs r1, #255
    bl _numops_ands
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P3090
_proccall535:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #255
    bl _numops_ands
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_23_48      
.jmpz536:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_22_48      
.lazySkip_23_48:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    movs r1, #121
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_25_48      
.jmpz537:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_48      
.lazySkip_25_48:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_24_48:
; jmp value (already in r0)
.lazy_22_48:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_48      
.jmpz538:
    b .ret.3745      
.else_21_48:
.afterif_26_48:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall539:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778
_proccall540:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCounter__P3090
_proccall541:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_18_48:
.afterif_27_48:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_28_48      
.jmpz542:
    b .ret.3745      
.else_28_48:
.afterif_29_48:
    movs r0, #2
    ldr r1, _ldlit_101 ; client_inline__P6113_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2140
_proccall543:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_30_48      
.jmpz544:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac_Client_handlePacketOuter__P3712
_proccall545:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_30_48:
.afterif_31_48:
.ret.3745:
    @stackempty locals
    movs r0, #0
.final_32_48:
    add sp, #4*9 ; pop locals 9
jacdac_Device_processPacket__P3745_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1572,46): client.inline
    ;
    .object client_inline__P6113 "jacdac/routing.ts(1572,46): client.inline"
client_inline__P6113_pre:
    .section code
    .balign 4
client_inline__P6113_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word client_inline__P6113_args@fn
client_inline__P6113_args:
    cmp r4, #1
    bge client_inline__P6113_nochk
    push {lr}
    bl _expand_args_1_2
    bl client_inline__P6113_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
client_inline__P6113:
client_inline__P6113_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
client_inline__P6113_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_49      
.jmpz546:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    b .condexprfin_1_49      
.condexprz_0_49:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.condexprfin_1_49:
; jmp value (already in r0)
.ret.6113:
    @stackempty locals
.final_2_49:
client_inline__P6113_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1153,9): jacdac.Client.handlePacketOuter
    ;
    .object jacdac_Client_handlePacketOuter__P3712 "jacdac/routing.ts(1153,9): jacdac.Client.handlePacketOuter"
jacdac_Client_handlePacketOuter__P3712_pre:
    .section code
    .balign 4
jacdac_Client_handlePacketOuter__P3712_args:
    cmp r4, #2
    bge jacdac_Client_handlePacketOuter__P3712_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Client_handlePacketOuter__P3712_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_handlePacketOuter__P3712:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_handlePacketOuter__P3712_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Client_handlePacketOuter__P3712_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_50      
.jmpz547:
    b .ret.3712      
.else_0_50:
.afterif_1_50:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall549:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    bl _cmp_eq
    beq .else_2_50      
.jmpz548:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_50:
.afterif_3_50:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P3088
_proccall551:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_50      
.jmpz550:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_eventCode__P3089
_proccall552:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _cmp_eq
    beq .else_5_50      
.jmpz553:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #36]
    @stackempty locals
    b .afterif_6_50      
.else_5_50:
    ldr r0, [sp, locals@0]
    movs r1, #5
    bl _cmp_eq
    beq .else_7_50      
.jmpz554:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    @stackempty locals
    b .afterif_8_50      
.else_7_50:
    ldr r0, [sp, locals@0]
    movs r1, #7
    bl _cmp_eq
    beq .else_9_50      
.jmpz555:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, _ldlit_102 ; jacdac_Client_handlePacketOuter_inline__P6165_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2138
_proccall556:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_50:
.afterif_10_50:
.afterif_8_50:
.afterif_6_50:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #60]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall557:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_raiseEvent__P4168_nochk
_proccall558:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_11_50      
.else_4_50:
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.6177:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.6177      
.jmpz559:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_handlePacket__P3687
_proccall560:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.6177:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.6177      
.brk.6177:
    movs r0, #0
    str r0, [sp, locals@2]
.afterif_11_50:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #36
    bl _classCall_jacdac_Client__C3696_this_43
_proccall561:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3712:
    @stackempty locals
    movs r0, #0
.final_12_50:
    add sp, #4*4 ; pop locals 4
jacdac_Client_handlePacketOuter__P3712_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1165,44): jacdac.Client.handlePacketOuter.inline
    ;
    .object jacdac_Client_handlePacketOuter_inline__P6165 "jacdac/routing.ts(1165,44): jacdac.Client.handlePacketOuter.inline"
jacdac_Client_handlePacketOuter_inline__P6165_pre:
    .section code
    .balign 4
jacdac_Client_handlePacketOuter_inline__P6165_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Client_handlePacketOuter_inline__P6165_args@fn
jacdac_Client_handlePacketOuter_inline__P6165_args:
    cmp r4, #1
    bge jacdac_Client_handlePacketOuter_inline__P6165_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_handlePacketOuter_inline__P6165_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_handlePacketOuter_inline__P6165:
jacdac_Client_handlePacketOuter_inline__P6165_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_handlePacketOuter_inline__P6165_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_reset__P3676
_proccall562:
    add sp, #4*1 ; pop locals 1
.ret.6165:
    @stackempty locals
    movs r0, #0
.final_0_51:
jacdac_Client_handlePacketOuter_inline__P6165_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1174,9): jacdac.Client.handlePacket
    ;
    .object jacdac_Client_handlePacket__P3713 "jacdac/routing.ts(1174,9): jacdac.Client.handlePacket"
jacdac_Client_handlePacket__P3713_pre:
    .section code
    .balign 4
jacdac_Client_handlePacket__P3713_args:
    cmp r4, #2
    bge jacdac_Client_handlePacket__P3713_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Client_handlePacket__P3713_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_handlePacket__P3713:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_handlePacket__P3713_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_handlePacket__P3713_locals:
.ret.3713:
    @stackempty locals
    movs r0, #0
.final_0_52:
jacdac_Client_handlePacket__P3713_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(981,9): jacdac.RegisterClient.handlePacket
    ;
    .object jacdac_RegisterClient_handlePacket__P3687 "jacdac/routing.ts(981,9): jacdac.RegisterClient.handlePacket"
jacdac_RegisterClient_handlePacket__P3687_pre:
    .section code
    .balign 4
jacdac_RegisterClient_handlePacket__P3687_args:
    cmp r4, #2
    bge jacdac_RegisterClient_handlePacket__P3687_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_RegisterClient_handlePacket__P3687_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_RegisterClient_handlePacket__P3687:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_handlePacket__P3687_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_handlePacket__P3687_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P3092
_proccall564:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_53      
.jmpz563:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_53      
.lazySkip_2_53:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P3093
_proccall565:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_53:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz566
    b .else_0_53      
.object PUSH
.balign 4
_ldlit_101:
 .word client_inline__P6113_Lit
_ldlit_102:
 .word jacdac_Client_handlePacketOuter_inline__P6165_Lit
.object POP
.jmpz566:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_53      
.jmpz567:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_53      
.lazySkip_4_53:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_53:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_53      
.jmpz568:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_53      
.lazySkip_6_53:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferEquals__P2776
_proccall569:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_5_53:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall570:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_53      
.jmpz571:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall572:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall573:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_7_53:
.afterif_8_53:
.else_0_53:
.afterif_9_53:
.ret.3687:
    @stackempty locals
    movs r0, #0
.final_10_53:
    add sp, #4*2 ; pop locals 2
jacdac_RegisterClient_handlePacket__P3687_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(140,5): helpers.bufferEquals
    ;
    .object helpers_bufferEquals__P2776 "core/buffer.ts(140,5): helpers.bufferEquals"
helpers_bufferEquals__P2776_pre:
    .section code
    .balign 4
    .section code
helpers_bufferEquals__P2776:
helpers_bufferEquals__P2776_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_bufferEquals__P2776_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_54      
.jmpz574:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_54      
.lazySkip_2_54:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_54:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_54      
.jmpz575:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    b .ret.2776      
.else_0_54:
.afterif_3_54:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_4_54      
.jmpz576:
    movs r0, #10
    b .ret.2776      
.else_4_54:
.afterif_5_54:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.6255:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.6255      
.jmpz577:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_6_54      
.jmpz578:
    movs r0, #10
    b .ret.2776      
.else_6_54:
.afterif_7_54:
.cont.6255:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.6255      
.brk.6255:
    movs r0, #66
.ret.2776:
    @stackempty locals
.final_8_54:
    add sp, #4*1 ; pop locals 1
helpers_bufferEquals__P2776_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1235,9): jacdac.Client.raiseEvent
    ;
    .object jacdac_Client_raiseEvent__P4168 "jacdac/routing.ts(1235,9): jacdac.Client.raiseEvent"
jacdac_Client_raiseEvent__P4168_pre:
    .section code
    .balign 4
jacdac_Client_raiseEvent__P4168_args:
    cmp r4, #2
    bge jacdac_Client_raiseEvent__P4168_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Client_raiseEvent__P4168_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_raiseEvent__P4168:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_raiseEvent__P4168_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_raiseEvent__P4168_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, _ldlit_104 ; 122881      
    ldr r1, [sp, args@1]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_27
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4168:
    @stackempty locals
    movs r0, #0
.final_0_55:
jacdac_Client_raiseEvent__P4168_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(901,9): jacdac.RegisterClient.reset
    ;
    .object jacdac_RegisterClient_reset__P3676 "jacdac/routing.ts(901,9): jacdac.RegisterClient.reset"
jacdac_RegisterClient_reset__P3676_pre:
    .section code
    .balign 4
jacdac_RegisterClient_reset__P3676_args:
    cmp r4, #1
    bge jacdac_RegisterClient_reset__P3676_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_reset__P3676_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_reset__P3676:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_reset__P3676_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_reset__P3676_locals:
    ldr r0, [sp, args@0]
    movs r1, #0
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3676:
    @stackempty locals
    movs r0, #0
.final_0_56:
jacdac_RegisterClient_reset__P3676_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(255,5): helpers.arrayForEach
    ;
    .object helpers_arrayForEach__P2138 "core/pxt-helpers.ts(255,5): helpers.arrayForEach"
helpers_arrayForEach__P2138_pre:
    .section code
    .balign 4
    .section code
helpers_arrayForEach__P2138:
helpers_arrayForEach__P2138_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayForEach__P2138_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.6291:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.6291      
.jmpz579:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.6291:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.6291      
.brk.6291:
.ret.2138:
    @stackempty locals
    movs r0, #0
.final_0_57:
    add sp, #4*2 ; pop locals 2
helpers_arrayForEach__P2138_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(172,9): jacdac.JDPacket.eventCode
    ;
    .object jacdac_JDPacket_eventCode__P3089 "jacdac/packet.ts(172,9): jacdac.JDPacket.eventCode"
jacdac_JDPacket_eventCode__P3089_pre:
    .section code
    .balign 4
jacdac_JDPacket_eventCode__P3089_args:
    cmp r4, #1
    bge jacdac_JDPacket_eventCode__P3089_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_eventCode__P3089_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_eventCode__P3089:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_eventCode__P3089_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_eventCode__P3089_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P3088_nochk
_proccall582:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_58      
.jmpz581:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall583:
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    b .condexprfin_1_58      
.condexprz_0_58:
    movs r0, #0
.condexprfin_1_58:
; jmp value (already in r0)
.ret.3089:
    @stackempty locals
.final_2_58:
jacdac_JDPacket_eventCode__P3089_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(178,9): jacdac.JDPacket.eventCounter
    ;
    .object jacdac_JDPacket_eventCounter__P3090 "jacdac/packet.ts(178,9): jacdac.JDPacket.eventCounter"
jacdac_JDPacket_eventCounter__P3090_pre:
    .section code
    .balign 4
jacdac_JDPacket_eventCounter__P3090_args:
    cmp r4, #1
    bge jacdac_JDPacket_eventCounter__P3090_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_eventCounter__P3090_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_eventCounter__P3090:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_eventCounter__P3090_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_eventCounter__P3090_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isEvent__P3088_nochk
_proccall585:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_59      
.jmpz584:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall586:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #255
    bl _numops_ands
    b .condexprfin_1_59      
.condexprz_0_59:
    movs r0, #0
.condexprfin_1_59:
; jmp value (already in r0)
.ret.3090:
    @stackempty locals
.final_2_59:
jacdac_JDPacket_eventCounter__P3090_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(164,9): jacdac.JDPacket.isEvent
    ;
    .object jacdac_JDPacket_isEvent__P3088 "jacdac/packet.ts(164,9): jacdac.JDPacket.isEvent"
jacdac_JDPacket_isEvent__P3088_pre:
    .section code
    .balign 4
jacdac_JDPacket_isEvent__P3088_args:
    cmp r4, #1
    bge jacdac_JDPacket_isEvent__P3088_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_isEvent__P3088_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isEvent__P3088:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_isEvent__P3088_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isEvent__P3088_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isReport__P3105_nochk
_proccall588:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_60      
.jmpz587:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_60      
.lazySkip_1_60:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083_nochk
_proccall589:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #97
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_0_60:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_60      
.jmpz590:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_60      
.lazySkip_3_60:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall591:
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_105 ; 65537      
    bl _numops_ands
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_2_60:
; jmp value (already in r0)
.ret.3088:
    @stackempty locals
.final_4_60:
jacdac_JDPacket_isEvent__P3088_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(268,9): jacdac.JDPacket.isReport
    ;
    .object jacdac_JDPacket_isReport__P3105 "jacdac/packet.ts(268,9): jacdac.JDPacket.isReport"
jacdac_JDPacket_isReport__P3105_pre:
    .section code
    .balign 4
jacdac_JDPacket_isReport__P3105_args:
    cmp r4, #1
    bge jacdac_JDPacket_isReport__P3105_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_isReport__P3105_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isReport__P3105:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_isReport__P3105_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isReport__P3105_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3105:
    @stackempty locals
.final_0_61:
jacdac_JDPacket_isReport__P3105_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(122,9): jacdac.JDPacket.packetFlags
    ;
    .object jacdac_JDPacket_packetFlags__P3078 "jacdac/packet.ts(122,9): jacdac.JDPacket.packetFlags"
jacdac_JDPacket_packetFlags__P3078_pre:
    .section code
    .balign 4
jacdac_JDPacket_packetFlags__P3078_args:
    cmp r4, #1
    bge jacdac_JDPacket_packetFlags__P3078_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_packetFlags__P3078_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_packetFlags__P3078:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_packetFlags__P3078_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_packetFlags__P3078_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
.ret.3078:
    @stackempty locals
.final_0_62:
jacdac_JDPacket_packetFlags__P3078_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1463,9): jacdac.Device.serviceClassAt
    ;
    .object jacdac_Device_serviceClassAt__P3740 "jacdac/routing.ts(1463,9): jacdac.Device.serviceClassAt"
jacdac_Device_serviceClassAt__P3740_pre:
    .section code
    .balign 4
jacdac_Device_serviceClassAt__P3740_args:
    cmp r4, #2
    bge jacdac_Device_serviceClassAt__P3740_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Device_serviceClassAt__P3740_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Device_serviceClassAt__P3740:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_serviceClassAt__P3740_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_serviceClassAt__P3740_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_eq
    beq .condexprz_0_63      
.jmpz592:
    movs r0, #1
    b .condexprfin_1_63      
.condexprz_0_63:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
.condexprfin_1_63:
; jmp value (already in r0)
.ret.3740:
    @stackempty locals
.final_2_63:
jacdac_Device_serviceClassAt__P3740_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(193,9): jacdac.JDPacket.regCode
    ;
    .object jacdac_JDPacket_regCode__P3093 "jacdac/packet.ts(193,9): jacdac.JDPacket.regCode"
jacdac_JDPacket_regCode__P3093_pre:
    .section code
    .balign 4
jacdac_JDPacket_regCode__P3093_args:
    cmp r4, #1
    bge jacdac_JDPacket_regCode__P3093_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_regCode__P3093_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_104:
 .word 122881
_ldlit_105:
 .word 65537
.object POP
    .section code
jacdac_JDPacket_regCode__P3093:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_regCode__P3093_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_regCode__P3093_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall593:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
.ret.3093:
    @stackempty locals
.final_0_64:
jacdac_JDPacket_regCode__P3093_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(189,9): jacdac.JDPacket.isRegGet
    ;
    .object jacdac_JDPacket_isRegGet__P3092 "jacdac/packet.ts(189,9): jacdac.JDPacket.isRegGet"
jacdac_JDPacket_isRegGet__P3092_pre:
    .section code
    .balign 4
jacdac_JDPacket_isRegGet__P3092_args:
    cmp r4, #1
    bge jacdac_JDPacket_isRegGet__P3092_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_isRegGet__P3092_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isRegGet__P3092:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_isRegGet__P3092_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isRegGet__P3092_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall594:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.3092:
    @stackempty locals
.final_0_65:
jacdac_JDPacket_isRegGet__P3092_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(256,9): jacdac.JDPacket.getNumber
    ;
    .object jacdac_JDPacket_getNumber__P3102 "jacdac/packet.ts(256,9): jacdac.JDPacket.getNumber"
jacdac_JDPacket_getNumber__P3102_pre:
    .section code
    .balign 4
jacdac_JDPacket_getNumber__P3102_args:
    cmp r4, #3
    bge jacdac_JDPacket_getNumber__P3102_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_JDPacket_getNumber__P3102_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_JDPacket_getNumber__P3102:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_getNumber__P3102_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_getNumber__P3102_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
.ret.3102:
    @stackempty locals
.final_0_66:
jacdac_JDPacket_getNumber__P3102_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(199,9): jacdac.Bus.reattach
    ;
    .object jacdac_Bus_reattach__P3626 "jacdac/routing.ts(199,9): jacdac.Bus.reattach"
jacdac_Bus_reattach__P3626_pre:
    .section code
    .balign 4
jacdac_Bus_reattach__P3626_args:
    cmp r4, #2
    bge jacdac_Bus_reattach__P3626_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_reattach__P3626_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_reattach__P3626:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_reattach__P3626_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_reattach__P3626_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Device__C3724_validate_33
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_Device_toString__P3736
_proccall595:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_107 ; _str100      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_108 ; _str101      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_109 ; _str71      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall596:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #12]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.6404:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz597
    b .brk.6404      
.jmpz597:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_67      
.jmpz598:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client__detach__P3715
_proccall599:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.6404      
.else_0_67:
.afterif_1_67:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Device_serviceClassAt__P3740
_proccall600:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_67      
.jmpz601:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_67      
.lazySkip_4_67:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3705
_proccall602:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl jacdac_Device_matchesRoleAt__P3737
_proccall603:
    add sp, #4*4 ; pop locals 4
.lazy_3_67:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_67      
.jmpz604:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client_roleName__P3704
_proccall605:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_110 ; _str102      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall606:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    movs r2, #1
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_5_67      
.else_2_67:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Client__detach__P3715
_proccall607:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_67:
.cont.6404:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.6404      
.brk.6404:
    movs r0, #0
    str r0, [sp, locals@3]
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _inst_jacdac_Device__C3724_validate_33
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall608:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_eq
    beq .else_6_67      
.jmpz609:
    ldr r0, _ldlit_111 ; _str103      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall610:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .ret.3626      
.else_6_67:
.afterif_7_67:
    movs r0, #9
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.6456:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz611
    b .brk.6456      
.jmpz611:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_67      
.jmpz612:
    b .cont.6456      
.else_8_67:
.afterif_9_67:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_44
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    str r0, [sp, locals@9]
    movs r0, #1
    str r0, [sp, locals@10]
    @stackempty locals
.fortop.6474:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz613
    b .brk.6474      
.object PUSH
.balign 4
_ldlit_107:
 .word _str100
_ldlit_108:
 .word _str101
_ldlit_109:
 .word _str71
_ldlit_110:
 .word _str102
_ldlit_111:
 .word _str103
.object POP
.jmpz613:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    ldr r0, [sp, locals@8]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    ldr r1, [sp, locals@7]
    bl _cmp_eq
    beq .else_10_67      
.jmpz614:
    ldr r0, [sp, locals@8]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_113 ; _str104      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_114 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735
_proccall615:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_115 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall616:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    push {r3}
    push {r4}
    bl jacdac_Client__attach__P3714
_proccall618:
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_11_67      
.jmpz617:
    ldr r0, _ldlit_116 ; _str105      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall619:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.6474      
.else_11_67:
.afterif_12_67:
.else_10_67:
.afterif_13_67:
.cont.6474:
    ldr r0, [sp, locals@10]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@10]
    b .fortop.6474      
.brk.6474:
    movs r0, #0
    str r0, [sp, locals@9]
.cont.6456:
    ldr r0, [sp, locals@6]
    movs r1, #9
    bl _numops_adds
    str r0, [sp, locals@6]
    @stackempty locals
    b .fortop.6456      
.brk.6456:
.ret.3626:
    @stackempty locals
    movs r0, #0
.final_14_67:
    add sp, #4*11 ; pop locals 11
jacdac_Bus_reattach__P3626_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1176,9): jacdac.Client._attach
    ;
    .object jacdac_Client__attach__P3714 "jacdac/routing.ts(1176,9): jacdac.Client._attach"
jacdac_Client__attach__P3714_pre:
    .section code
    .balign 4
jacdac_Client__attach__P3714_args:
    cmp r4, #4
    bge jacdac_Client__attach__P3714_nochk
    push {lr}
    bl _expand_args_4_32
    bl jacdac_Client__attach__P3714_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Client__attach__P3714:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client__attach__P3714_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client__attach__P3714_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_68      
.jmpz620:
    ldr r0, _ldlit_117 ; _str124      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall621:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_68:
.afterif_1_68:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_68      
.jmpz622:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3705_nochk
_proccall624:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_Device_matchesRoleAt__P3737
_proccall625:
    add sp, #4*4 ; pop locals 4
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_68      
.jmpz623:
    movs r0, #10
    b .ret.3714      
.else_3_68:
.afterif_4_68:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_device__P3707_nochk
_proccall626:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_attachClient__P3623
_proccall627:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_2_68:
.afterif_5_68:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_118 ; _str125      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_114 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_Device_toString__P3736
_proccall628:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_115 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall629:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_handleConnected__P4167_nochk
_proccall630:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
.ret.3714:
    @stackempty locals
.final_6_68:
jacdac_Client__attach__P3714_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1193,9): jacdac.Client.handleConnected
    ;
    .object jacdac_Client_handleConnected__P4167 "jacdac/routing.ts(1193,9): jacdac.Client.handleConnected"
jacdac_Client_handleConnected__P4167_pre:
    .section code
    .balign 4
jacdac_Client_handleConnected__P4167_args:
    cmp r4, #1
    bge jacdac_Client_handleConnected__P4167_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_handleConnected__P4167_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_handleConnected__P4167:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_handleConnected__P4167_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_handleConnected__P4167_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; the one arg
    bl jacdac_ClientPacketQueue_resend__P4280
_proccall631:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall632:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4167:
    @stackempty locals
    movs r0, #0
.final_0_69:
jacdac_Client_handleConnected__P4167_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(853,9): jacdac.ClientPacketQueue.resend
    ;
    .object jacdac_ClientPacketQueue_resend__P4280 "jacdac/routing.ts(853,9): jacdac.ClientPacketQueue.resend"
jacdac_ClientPacketQueue_resend__P4280_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_resend__P4280_args:
    cmp r4, #1
    bge jacdac_ClientPacketQueue_resend__P4280_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_ClientPacketQueue_resend__P4280_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_ClientPacketQueue_resend__P4280:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C4276_validate_46
    mov lr, r7
jacdac_ClientPacketQueue_resend__P4280_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ClientPacketQueue_resend__P4280_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_70      
.jmpz633:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_70      
.lazySkip_2_70:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_70:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_70      
.jmpz634:
    b .ret.4280      
    b .afterif_3_70      
.object PUSH
.balign 4
_ldlit_113:
 .word _str104
_ldlit_114:
 .word _str69
_ldlit_115:
 .word _str67
_ldlit_116:
 .word _str105
_ldlit_117:
 .word _str124
_ldlit_118:
 .word _str125
.object POP
.else_0_70:
.afterif_3_70:
    movs r0, #10
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.6580:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.6580      
.jmpz635:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _cmp_neq
    beq .else_4_70      
.jmpz636:
    movs r0, #66
    str r0, [sp, locals@1]
    @stackempty locals
.else_4_70:
.afterif_5_70:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_fromFrameless__P3070
_proccall637:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Client_sendCommand__P3716
_proccall638:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.6580:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.6580      
.brk.6580:
    movs r0, #0
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_70      
.jmpz639:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_120 ; jacdac_ClientPacketQueue_resend_inline__P6599_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2139
_proccall640:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_6_70:
.afterif_7_70:
.ret.4280:
    @stackempty locals
    movs r0, #0
.final_8_70:
    add sp, #4*5 ; pop locals 5
jacdac_ClientPacketQueue_resend__P4280_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(864,21): jacdac.ClientPacketQueue.resend.inline
    ;
    .object jacdac_ClientPacketQueue_resend_inline__P6599 "jacdac/routing.ts(864,21): jacdac.ClientPacketQueue.resend.inline"
jacdac_ClientPacketQueue_resend_inline__P6599_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_resend_inline__P6599_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_ClientPacketQueue_resend_inline__P6599_args@fn
jacdac_ClientPacketQueue_resend_inline__P6599_args:
    cmp r4, #1
    bge jacdac_ClientPacketQueue_resend_inline__P6599_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_ClientPacketQueue_resend_inline__P6599_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_ClientPacketQueue_resend_inline__P6599:
jacdac_ClientPacketQueue_resend_inline__P6599_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ClientPacketQueue_resend_inline__P6599_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.6599:
    @stackempty locals
.final_0_71:
jacdac_ClientPacketQueue_resend_inline__P6599_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(69,9): jacdac.JDPacket.fromFrameless
    ;
    .object jacdac_JDPacket_fromFrameless__P3070 "jacdac/packet.ts(69,9): jacdac.JDPacket.fromFrameless"
jacdac_JDPacket_fromFrameless__P3070_pre:
    .section code
    .balign 4
jacdac_JDPacket_fromFrameless__P3070_args:
    cmp r4, #1
    bge jacdac_JDPacket_fromFrameless__P3070_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_fromFrameless__P3070_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_fromFrameless__P3070:
jacdac_JDPacket_fromFrameless__P3070_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_fromFrameless__P3070_locals:
    ldr r0, _ldlit_121 ; jacdac_JDPacket__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_constructor__P4124
_proccall641:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C3062_validate_35
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_47
    movs r1, #12
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #4
    movs r2, #1
    negs r2, r2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C3062_validate_35
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3070:
    @stackempty locals
.final_0_72:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_fromFrameless__P3070_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(46,9): jacdac.JDPacket.constructor
    ;
    .object jacdac_JDPacket_constructor__P4124 "jacdac/packet.ts(46,9): jacdac.JDPacket.constructor"
jacdac_JDPacket_constructor__P4124_pre:
    .section code
    .balign 4
    .section code
jacdac_JDPacket_constructor__P4124:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_constructor__P4124_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_constructor__P4124_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4124:
    @stackempty locals
.final_0_73:
jacdac_JDPacket_constructor__P4124_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1209,9): jacdac.Client.sendCommand
    ;
    .object jacdac_Client_sendCommand__P3716 "jacdac/routing.ts(1209,9): jacdac.Client.sendCommand"
jacdac_Client_sendCommand__P3716_pre:
    .section code
    .balign 4
jacdac_Client_sendCommand__P3716_args:
    cmp r4, #2
    bge jacdac_Client_sendCommand__P3716_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Client_sendCommand__P3716_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_sendCommand__P3716:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_sendCommand__P3716_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_sendCommand__P3716_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall642:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_74      
.jmpz643:
    b .ret.3716      
.else_0_74:
.afterif_1_74:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall644:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendCmd__P3110
_proccall645:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3716:
    @stackempty locals
    movs r0, #0
.final_2_74:
jacdac_Client_sendCommand__P3716_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(183,9): jacdac.Bus.attachClient
    ;
    .object jacdac_Bus_attachClient__P3623 "jacdac/routing.ts(183,9): jacdac.Bus.attachClient"
jacdac_Bus_attachClient__P3623_pre:
    .section code
    .balign 4
jacdac_Bus_attachClient__P3623_args:
    cmp r4, #2
    bge jacdac_Bus_attachClient__P3623_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_attachClient__P3623_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_attachClient__P3623:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_attachClient__P3623_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_attachClient__P3623_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
.ret.3623:
    @stackempty locals
    movs r0, #0
.final_0_75:
jacdac_Bus_attachClient__P3623_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1085,9): jacdac.Client.device
    ;
    .object jacdac_Client_device__P3707 "jacdac/routing.ts(1085,9): jacdac.Client.device"
jacdac_Client_device__P3707_pre:
    .section code
    .balign 4
jacdac_Client_device__P3707_args:
    cmp r4, #2
    bge jacdac_Client_device__P3707_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Client_device__P3707_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Client_device__P3707:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_device__P3707_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_device__P3707_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_76      
.jmpz646:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, _ldlit_122 ; jacdac_Client_device_inline__P6665_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2138
_proccall647:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_76:
.afterif_1_76:
.ret.3707:
    @stackempty locals
    movs r0, #0
.final_2_76:
jacdac_Client_device__P3707_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1088,40): jacdac.Client.device.inline
    ;
    .object jacdac_Client_device_inline__P6665 "jacdac/routing.ts(1088,40): jacdac.Client.device.inline"
jacdac_Client_device_inline__P6665_pre:
    .section code
    .balign 4
jacdac_Client_device_inline__P6665_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Client_device_inline__P6665_args@fn
jacdac_Client_device_inline__P6665_args:
    cmp r4, #1
    bge jacdac_Client_device_inline__P6665_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_device_inline__P6665_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_device_inline__P6665:
jacdac_Client_device_inline__P6665_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_device_inline__P6665_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_reset__P3676
_proccall648:
    add sp, #4*1 ; pop locals 1
.ret.6665:
    @stackempty locals
    movs r0, #0
.final_0_77:
jacdac_Client_device_inline__P6665_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1063,9): jacdac.Client.role
    ;
    .object jacdac_Client_role__P3703 "jacdac/routing.ts(1063,9): jacdac.Client.role"
jacdac_Client_role__P3703_pre:
    .section code
    .balign 4
jacdac_Client_role__P3703_args:
    cmp r4, #1
    bge jacdac_Client_role__P3703_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_role__P3703_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_role__P3703:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_role__P3703_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_role__P3703_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
.ret.3703:
    @stackempty locals
.final_0_78:
jacdac_Client_role__P3703_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1067,9): jacdac.Client.roleName
    ;
    .object jacdac_Client_roleName__P3704 "jacdac/routing.ts(1067,9): jacdac.Client.roleName"
jacdac_Client_roleName__P3704_pre:
    .section code
    .balign 4
jacdac_Client_roleName__P3704_args:
    cmp r4, #1
    bge jacdac_Client_roleName__P3704_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_roleName__P3704_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_roleName__P3704:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_roleName__P3704_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Client_roleName__P3704_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_123 ; _str6      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_0_79      
.jmpz649:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSubstr__P2147
_proccall650:
    add sp, #4*3 ; pop locals 3
    b .ret.3704      
    b .afterif_1_79      
.else_0_79:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    b .ret.3704      
.afterif_1_79:
    movs r0, #0
.ret.3704:
    @stackempty locals
.final_2_79:
    add sp, #4*1 ; pop locals 1
jacdac_Client_roleName__P3704_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(380,5): helpers.stringSubstr
    ;
    .object helpers_stringSubstr__P2147 "core/pxt-helpers.ts(380,5): helpers.stringSubstr"
helpers_stringSubstr__P2147_pre:
    .section code
    .balign 4
    .section code
helpers_stringSubstr__P2147:
helpers_stringSubstr__P2147_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_stringSubstr__P2147_locals:
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .condexprz_0_80      
.jmpz651:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    b .condexprfin_1_80      
.condexprz_0_80:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .jmpz652
    b .lazySkip_3_80      
.object PUSH
.balign 4
_ldlit_120:
 .word jacdac_ClientPacketQueue_resend_inline__P6599_Lit
_ldlit_121:
 .word jacdac_JDPacket__C3062_VT
_ldlit_122:
 .word jacdac_Client_device_inline__P6665_Lit
_ldlit_123:
 .word _str6
.object POP
.jmpz652:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_80      
.lazySkip_3_80:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_2_80:
; jmp value (already in r0)
.condexprfin_1_80:
; jmp value (already in r0)
    str r0, [sp, args@2]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_22
    mov r7, sp
    str r7, [r6, #4]
    bl String_::substr
    add sp, #4*3 ; pop locals 3
.ret.2147:
    @stackempty locals
.final_4_80:
helpers_stringSubstr__P2147_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1073,9): jacdac.Client.roleQuery
    ;
    .object jacdac_Client_roleQuery__P3705 "jacdac/routing.ts(1073,9): jacdac.Client.roleQuery"
jacdac_Client_roleQuery__P3705_pre:
    .section code
    .balign 4
jacdac_Client_roleQuery__P3705_args:
    cmp r4, #1
    bge jacdac_Client_roleQuery__P3705_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_roleQuery__P3705_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_roleQuery__P3705:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_roleQuery__P3705_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Client_roleQuery__P3705_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_125 ; _str6      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_0_81      
.jmpz653:
    ldr r0, _ldlit_126 ; jacdac_ClientRoleQuery__C3688_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_ClientRoleQuery_constructor__P3689
_proccall654:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    b .ret.3705      
.else_0_81:
.afterif_1_81:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSubstr__P2147
_proccall655:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, _ldlit_126 ; jacdac_ClientRoleQuery__C3688_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_stringSubstr__P2147
_proccall656:
    add sp, #4*3 ; pop locals 3
    mov r3, r0
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_ClientRoleQuery_constructor__P3689
_proccall657:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
.ret.3705:
    @stackempty locals
.final_2_81:
    add sp, #4*3 ; pop locals 3
jacdac_Client_roleQuery__P3705_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(998,9): jacdac.ClientRoleQuery.constructor
    ;
    .object jacdac_ClientRoleQuery_constructor__P3689 "jacdac/routing.ts(998,9): jacdac.ClientRoleQuery.constructor"
jacdac_ClientRoleQuery_constructor__P3689_pre:
    .section code
    .balign 4
    .section code
jacdac_ClientRoleQuery_constructor__P3689:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    mov lr, r7
jacdac_ClientRoleQuery_constructor__P3689_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ClientRoleQuery_constructor__P3689_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz658
    b .else_0_82      
.jmpz658:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_127 ; _str118      
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_stringSplit__P2151
_proccall659:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.6745:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz660
    b .brk.6745      
.jmpz660:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_128 ; _str119      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #1
    bl _cmp_lt
    beq .else_1_82      
.jmpz661:
    b .cont.6745      
.else_1_82:
.afterif_2_82:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall662:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2148
_proccall663:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0}; tmpstore @1
    mov r1, r0
    ldr r0, _ldlit_129 ; _str120      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz664
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_82      
.jmpz664:
    ldr r0, _ldlit_130 ; _str121      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz665
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_82      
.jmpz665:
    ldr r0, _ldlit_131 ; _str122      
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz666
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_82      
.jmpz666:
    pop {r0} ; tmpref @1
    b .brk.6766      
.switch_3_82:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@5]
    str r1, [r0, #8]
    @stackempty locals
    b .brk.6766      
.switch_4_82:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl parseInt__P2126
_proccall667:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .brk.6766      
.switch_5_82:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl parseInt__P2126
_proccall668:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.brk.6766:
.cont.6745:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.6745      
.brk.6745:
    movs r0, #0
    str r0, [sp, locals@1]
.else_0_82:
.afterif_6_82:
    movs r0, #0
.ret.3689:
    @stackempty locals
.final_7_82:
    add sp, #4*6 ; pop locals 6
jacdac_ClientRoleQuery_constructor__P3689_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(435,5): helpers.stringSplit
    ;
    .object helpers_stringSplit__P2151 "core/pxt-helpers.ts(435,5): helpers.stringSplit"
helpers_stringSplit__P2151_pre:
    .section code
    .balign 4
    .section code
helpers_stringSplit__P2151:
helpers_stringSplit__P2151_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringSplit__P2151_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #0
    bl _cmp_eqq
    beq .else_0_83      
.jmpz669:
    ldr r0, _ldlit_132 ; 1073741825      
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_1_83      
.else_0_83:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_83      
.jmpz670:
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    b .afterif_3_83      
.else_2_83:
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_3_83:
.afterif_1_83:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@1]
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_4_83      
.jmpz671:
    ldr r0, [sp, locals@0]
    b .ret.2151      
.else_4_83:
.afterif_5_83:
    ldr r0, [sp, args@1]
    movs r1, #0
    bl _cmp_eqq
    beq .else_6_83      
.jmpz672:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.2151      
.else_6_83:
.afterif_7_83:
    ldr r0, [sp, locals@2]
    movs r1, #1
    bl _cmp_eq
    beq .else_8_83      
.jmpz673:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P3911
_proccall674:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    movs r1, #1
    negs r1, r1
    bl _cmp_gt
    beq .else_9_83      
.jmpz675:
    ldr r0, [sp, locals@0]
    b .ret.2151      
.else_9_83:
.afterif_10_83:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    b .ret.2151      
.object PUSH
.balign 4
_ldlit_125:
 .word _str6
_ldlit_126:
 .word jacdac_ClientRoleQuery__C3688_VT
_ldlit_127:
 .word _str118
_ldlit_128:
 .word _str119
_ldlit_129:
 .word _str120
_ldlit_130:
 .word _str121
_ldlit_131:
 .word _str122
_ldlit_132:
 .word 1073741825
.object POP
.else_8_83:
.afterif_11_83:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.cont.6830:
    ldr r0, [sp, locals@7]
    ldr r1, [sp, locals@2]
    bl _cmp_neq
    beq .brk.6830      
.jmpz676:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_splitMatch__P3911
_proccall677:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@8]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_83      
.jmpz678:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_13_83      
.else_12_83:
    ldr r0, [sp, locals@8]
    ldr r1, [sp, locals@3]
    bl _cmp_eq
    beq .else_14_83      
.jmpz679:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    @stackempty locals
    b .afterif_15_83      
.else_14_83:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall680:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@1]
    bl _cmp_eq
    beq .else_16_83      
.jmpz681:
    ldr r0, [sp, locals@0]
    b .ret.2151      
.else_16_83:
.afterif_17_83:
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@7]
    @stackempty locals
.afterif_15_83:
.afterif_13_83:
    b .cont.6830      
.brk.6830:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall682:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2151:
    @stackempty locals
.final_18_83:
    add sp, #4*9 ; pop locals 9
helpers_stringSplit__P2151_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(481,5): helpers.splitMatch
    ;
    .object helpers_splitMatch__P3911 "core/pxt-helpers.ts(481,5): helpers.splitMatch"
helpers_splitMatch__P3911_pre:
    .section code
    .balign 4
    .section code
helpers_splitMatch__P3911:
helpers_splitMatch__P3911_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_splitMatch__P3911_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
    ldr r1, [sp, locals@1]
    bl _cmp_gt
    beq .else_0_84      
.jmpz683:
    movs r0, #1
    negs r0, r0
    b .ret.3911      
.else_0_84:
.afterif_1_84:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.6888:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.6888      
.jmpz684:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_2_84      
.jmpz685:
    movs r0, #1
    negs r0, r0
    b .ret.3911      
.else_2_84:
.afterif_3_84:
.cont.6888:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.6888      
.brk.6888:
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@0]
    bl _numops_adds
.ret.3911:
    @stackempty locals
.final_4_84:
    add sp, #4*3 ; pop locals 3
helpers_splitMatch__P3911_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1364,9): jacdac.Device.matchesRoleAt
    ;
    .object jacdac_Device_matchesRoleAt__P3737 "jacdac/routing.ts(1364,9): jacdac.Device.matchesRoleAt"
jacdac_Device_matchesRoleAt__P3737_pre:
    .section code
    .balign 4
jacdac_Device_matchesRoleAt__P3737_args:
    cmp r4, #4
    bge jacdac_Device_matchesRoleAt__P3737_nochk
    push {lr}
    bl _expand_args_4_32
    bl jacdac_Device_matchesRoleAt__P3737_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Device_matchesRoleAt__P3737:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_matchesRoleAt__P3737_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_matchesRoleAt__P3737_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #4]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_85      
.jmpz686:
    movs r0, #66
    b .ret.3737      
.else_0_85:
.afterif_1_85:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_2_85      
.jmpz687:
    movs r0, #66
    b .ret.3737      
.else_2_85:
.afterif_3_85:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_134 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_4_85      
.jmpz688:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_135 ; _str128      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_136 ; _str129      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall689:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3737      
.else_4_85:
.afterif_5_85:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_134 ; _str67      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_ge
    beq .else_6_85      
.jmpz690:
    movs r0, #10
    b .ret.3737      
.else_6_85:
.afterif_7_85:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_85      
.jmpz691:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_85      
.lazySkip_10_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735_nochk
_proccall692:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_9_85:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_12_85      
.jmpz693:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_11_85      
.lazySkip_12_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r1, _ldlit_137 ; _str75      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_85      
.jmpz694:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_85      
.lazySkip_14_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617
_proccall695:
    add sp, #4*1 ; pop locals 1
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_13_85:
; jmp value (already in r0)
.lazy_11_85:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz696
    b .else_8_85      
.jmpz696:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_17_85      
.jmpz697:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_85      
.lazySkip_17_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_16_85:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_15_85      
.jmpz698:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_135 ; _str128      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_138 ; _str130      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall699:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3737      
.else_15_85:
.afterif_18_85:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_21_85      
.jmpz700:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_20_85      
.lazySkip_21_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceOffsetAt__P4291_nochk
_proccall701:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_20_85:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_85      
.jmpz702:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_135 ; _str128      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_139 ; _str131      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall703:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3737      
.else_19_85:
.afterif_22_85:
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_25_85      
.jmpz704:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_24_85      
.lazySkip_25_85:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_24_85:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz705
    b .else_23_85      
.object PUSH
.balign 4
_ldlit_134:
 .word _str67
_ldlit_135:
 .word _str128
_ldlit_136:
 .word _str129
_ldlit_137:
 .word _str75
_ldlit_138:
 .word _str130
_ldlit_139:
 .word _str131
.object POP
.jmpz705:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_141 ; _str128      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_142 ; _str132      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall706:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    b .ret.3737      
.else_23_85:
.afterif_26_85:
.else_8_85:
.afterif_27_85:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r3, r0
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac__rolemgr_getRole__P3480
_proccall707:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.3737:
    @stackempty locals
.final_28_85:
    add sp, #4*2 ; pop locals 2
jacdac_Device_matchesRoleAt__P3737_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(9,5): jacdac._rolemgr.getRole
    ;
    .object jacdac__rolemgr_getRole__P3480 "jacdac/rolemgr.ts(9,5): jacdac._rolemgr.getRole"
jacdac__rolemgr_getRole__P3480_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_getRole__P3480:
jacdac__rolemgr_getRole__P3480_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_getRole__P3480_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_143 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    bl settings_readString__P2978
_proccall708:
    add sp, #4*1 ; pop locals 1
.ret.3480:
    @stackempty locals
.final_0_86:
jacdac__rolemgr_getRole__P3480_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(111,5): settings.readString
    ;
    .object settings_readString__P2978 "settings/settings.ts(111,5): settings.readString"
settings_readString__P2978_pre:
    .section code
    .balign 4
    .section code
settings_readString__P2978:
settings_readString__P2978_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_readString__P2978_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_87      
.jmpz709:
    movs r0, #0
    b .ret.2978      
    b .afterif_1_87      
.else_0_87:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    b .ret.2978      
.afterif_1_87:
    movs r0, #0
.ret.2978:
    @stackempty locals
.final_2_87:
    add sp, #4*1 ; pop locals 1
settings_readString__P2978_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1448,9): jacdac.Device.serviceOffsetAt
    ;
    .object jacdac_Device_serviceOffsetAt__P4291 "jacdac/routing.ts(1448,9): jacdac.Device.serviceOffsetAt"
jacdac_Device_serviceOffsetAt__P4291_pre:
    .section code
    .balign 4
jacdac_Device_serviceOffsetAt__P4291_args:
    cmp r4, #3
    bge jacdac_Device_serviceOffsetAt__P4291_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_Device_serviceOffsetAt__P4291_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Device_serviceOffsetAt__P4291:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_serviceOffsetAt__P4291_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_serviceOffsetAt__P4291_locals:
    movs r0, #1
    negs r0, r0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3738_nochk
_proccall710:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7062:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.7062      
.jmpz711:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3740_nochk
_proccall713:
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_eq
    beq .else_0_89      
.jmpz712:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    ldr r1, [sp, locals@2]
    bl _cmp_eq
    beq .else_1_89      
.jmpz714:
    ldr r0, [sp, locals@0]
    b .ret.4291      
.else_1_89:
.afterif_2_89:
.else_0_89:
.afterif_3_89:
.cont.7062:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7062      
.brk.7062:
    movs r0, #1
    negs r0, r0
.ret.4291:
    @stackempty locals
.final_4_89:
    add sp, #4*3 ; pop locals 3
jacdac_Device_serviceOffsetAt__P4291_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1429,9): jacdac.Device.serviceClassLength
    ;
    .object jacdac_Device_serviceClassLength__P3738 "jacdac/routing.ts(1429,9): jacdac.Device.serviceClassLength"
jacdac_Device_serviceClassLength__P3738_pre:
    .section code
    .balign 4
jacdac_Device_serviceClassLength__P3738_args:
    cmp r4, #1
    bge jacdac_Device_serviceClassLength__P3738_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_serviceClassLength__P3738_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_serviceClassLength__P3738:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_serviceClassLength__P3738_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_serviceClassLength__P3738_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #5
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
.ret.3738:
    @stackempty locals
.final_0_90:
jacdac_Device_serviceClassLength__P3738_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1198,9): jacdac.Client._detach
    ;
    .object jacdac_Client__detach__P3715 "jacdac/routing.ts(1198,9): jacdac.Client._detach"
jacdac_Client__detach__P3715_pre:
    .section code
    .balign 4
jacdac_Client__detach__P3715_args:
    cmp r4, #1
    bge jacdac_Client__detach__P3715_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client__detach__P3715_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client__detach__P3715:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client__detach__P3715_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client__detach__P3715_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleName__P3704_nochk
_proccall715:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_144 ; _str126      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall716:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #20]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_91      
.jmpz717:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_91      
.jmpz718:
    ldr r0, _ldlit_145 ; _str127      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall719:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_1_91:
.afterif_2_91:
    movs r0, #6
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_device__P3707_nochk
_proccall720:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_detachClient__P3622
_proccall721:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_91:
.afterif_3_91:
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #88]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall722:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3715:
    @stackempty locals
    movs r0, #0
.final_4_91:
jacdac_Client__detach__P3715_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(176,9): jacdac.Bus.detachClient
    ;
    .object jacdac_Bus_detachClient__P3622 "jacdac/routing.ts(176,9): jacdac.Bus.detachClient"
jacdac_Bus_detachClient__P3622_pre:
    .section code
    .balign 4
jacdac_Bus_detachClient__P3622_args:
    cmp r4, #2
    bge jacdac_Bus_detachClient__P3622_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_detachClient__P3622_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_detachClient__P3622:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_detachClient__P3622_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_detachClient__P3622_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_lt
    beq .else_0_92      
.jmpz723:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3619_nochk
_proccall724:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_92:
.afterif_1_92:
.ret.3622:
    @stackempty locals
    movs r0, #0
    b .final_2_92      
.object PUSH
.balign 4
_ldlit_141:
 .word _str128
_ldlit_142:
 .word _str132
_ldlit_143:
 .word _str67
_ldlit_144:
 .word _str126
_ldlit_145:
 .word _str127
.object POP
.final_2_92:
jacdac_Bus_detachClient__P3622_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(127,9): jacdac.Bus.clearAttachCache
    ;
    .object jacdac_Bus_clearAttachCache__P3619 "jacdac/routing.ts(127,9): jacdac.Bus.clearAttachCache"
jacdac_Bus_clearAttachCache__P3619_pre:
    .section code
    .balign 4
jacdac_Bus_clearAttachCache__P3619_args:
    cmp r4, #1
    bge jacdac_Bus_clearAttachCache__P3619_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_clearAttachCache__P3619_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_clearAttachCache__P3619:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_clearAttachCache__P3619_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_clearAttachCache__P3619_locals:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7124:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7124      
.jmpz725:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #7
    bl _numops_ands
    movs r1, #1
    bl _cmp_eq
    beq .else_0_93      
.jmpz726:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferConcat__P2775
_proccall727:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Device__C3724_validate_33
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_93:
.afterif_1_93:
.cont.7124:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.7124      
.brk.7124:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.3619:
    @stackempty locals
    movs r0, #0
.final_2_93:
    add sp, #4*3 ; pop locals 3
jacdac_Bus_clearAttachCache__P3619_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(133,5): helpers.bufferConcat
    ;
    .object helpers_bufferConcat__P2775 "core/buffer.ts(133,5): helpers.bufferConcat"
helpers_bufferConcat__P2775_pre:
    .section code
    .balign 4
    .section code
helpers_bufferConcat__P2775:
helpers_bufferConcat__P2775_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_bufferConcat__P2775_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_47
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_49
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2775:
    @stackempty locals
.final_0_94:
    add sp, #4*1 ; pop locals 1
helpers_bufferConcat__P2775_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1360,9): jacdac.Device.toString
    ;
    .object jacdac_Device_toString__P3736 "jacdac/routing.ts(1360,9): jacdac.Device.toString"
jacdac_Device_toString__P3736_pre:
    .section code
    .balign 4
jacdac_Device_toString__P3736_args:
    cmp r4, #1
    bge jacdac_Device_toString__P3736_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_toString__P3736_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_toString__P3736:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_toString__P3736_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_toString__P3736_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735_nochk
_proccall728:
    add sp, #4*1 ; pop locals 1
.ret.3736:
    @stackempty locals
.final_0_95:
jacdac_Device_toString__P3736_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1902,5): jacdac.resetToProxy
    ;
    .object jacdac_resetToProxy__P4322 "jacdac/routing.ts(1902,5): jacdac.resetToProxy"
jacdac_resetToProxy__P4322_pre:
    .section code
    .balign 4
    .section code
jacdac_resetToProxy__P4322:
jacdac_resetToProxy__P4322_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_resetToProxy__P4322_locals:
    ldr r0, _ldlit_147 ; _str145      
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    @stackempty locals
    movs r0, #3
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2975
_proccall729:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::reset
    @stackempty locals
.ret.4322:
    @stackempty locals
    movs r0, #0
.final_0_96:
jacdac_resetToProxy__P4322_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(90,5): settings.writeNumber
    ;
    .object settings_writeNumber__P2975 "settings/settings.ts(90,5): settings.writeNumber"
settings_writeNumber__P2975_pre:
    .section code
    .balign 4
    .section code
settings_writeNumber__P2975:
settings_writeNumber__P2975_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeNumber__P2975_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl msgpack_packNumberArray__P2773
_proccall730:
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2972
_proccall731:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.2975:
    @stackempty locals
    movs r0, #0
.final_0_97:
settings_writeNumber__P2975_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(118,5): msgpack.packNumberArray
    ;
    .object msgpack_packNumberArray__P2773 "core/buffer.ts(118,5): msgpack.packNumberArray"
msgpack_packNumberArray__P2773_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberArray__P2773:
msgpack_packNumberArray__P2773_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberArray__P2773_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.7179:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7179      
.jmpz732:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4007
_proccall733:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.7179:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.7179      
.brk.7179:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, args@0]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.7195:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7195      
.jmpz734:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl msgpack_packNumberCore__P4007
_proccall735:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.cont.7195:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.7195      
.brk.7195:
    movs r0, #0
    str r0, [sp, locals@6]
    ldr r0, [sp, locals@4]
.ret.2773:
    @stackempty locals
.final_0_98:
    add sp, #4*8 ; pop locals 8
msgpack_packNumberArray__P2773_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(57,5): msgpack.packNumberCore
    ;
    .object msgpack_packNumberCore__P4007 "core/buffer.ts(57,5): msgpack.packNumberCore"
msgpack_packNumberCore__P4007_pre:
    .section code
    .balign 4
    .section code
msgpack_packNumberCore__P4007:
msgpack_packNumberCore__P4007_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_packNumberCore__P4007_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_99      
.jmpz736:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_99      
.lazySkip_2_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_99      
.jmpz737:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_99      
.jmpz738:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_99      
.lazySkip_5_99:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_4_99:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_99      
.jmpz739:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_99      
.jmpz740:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_50
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_6_99:
.afterif_7_99:
    movs r0, #3
    b .ret.4007      
    b .afterif_8_99      
.else_3_99:
    movs r0, #1
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_9_99      
.jmpz741:
    ldr r0, [sp, args@2]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_le
    beq .else_10_99      
.jmpz742:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_11_99      
.else_10_99:
    ldr r0, [sp, args@2]
    ldr r1, _ldlit_148 ; 131071      
    bl _cmp_le
    beq .else_12_99      
.jmpz743:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_13_99      
.else_12_99:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_13_99:
.afterif_11_99:
    b .afterif_14_99      
.else_9_99:
    movs r0, #253
    negs r0, r0
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_15_99      
.jmpz744:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_16_99      
.else_15_99:
    ldr r0, _ldlit_149 ; -65533      
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_17_99      
.jmpz745:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_18_99      
.else_17_99:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_18_99:
.afterif_16_99:
.afterif_14_99:
.afterif_8_99:
    b .afterif_19_99      
.object PUSH
.balign 4
_ldlit_147:
 .word _str145
_ldlit_148:
 .word 131071
_ldlit_149:
 .word -65533
.object POP
.else_0_99:
.afterif_19_99:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_tagFormat__P4006
_proccall746:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_20_99      
.jmpz747:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_50
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_51
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_20_99:
.afterif_21_99:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P2764
_proccall748:
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_adds
.ret.4007:
    @stackempty locals
.final_22_99:
    add sp, #4*2 ; pop locals 2
msgpack_packNumberCore__P4007_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(3,5): pins.sizeOf
    ;
    .object pins_sizeOf__P2764 "core/buffer.ts(3,5): pins.sizeOf"
pins_sizeOf__P2764_pre:
    .section code
    .balign 4
    .section code
pins_sizeOf__P2764:
pins_sizeOf__P2764_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
pins_sizeOf__P2764_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_sizeOfNumberFormat__P2804
_proccall749:
    add sp, #4*1 ; pop locals 1
.ret.2764:
    @stackempty locals
.final_0_100:
pins_sizeOf__P2764_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(43,5): msgpack.tagFormat
    ;
    .object msgpack_tagFormat__P4006 "core/buffer.ts(43,5): msgpack.tagFormat"
msgpack_tagFormat__P4006_pre:
    .section code
    .balign 4
    .section code
msgpack_tagFormat__P4006:
msgpack_tagFormat__P4006_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
msgpack_tagFormat__P4006_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #151
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz750
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_101      
.jmpz750:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #153
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz751
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_101      
.jmpz751:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #155
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz752
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_101      
.jmpz752:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #157
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz753
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_101      
.jmpz753:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #161
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz754
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_101      
.jmpz754:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #163
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz755
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_101      
.jmpz755:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #165
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz756
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_101      
.jmpz756:
    pop {r0} ; tmpref @1
    b .switch_7_101      
.switch_0_101:
    movs r0, #33
    b .ret.4006      
.switch_1_101:
    movs r0, #15
    b .ret.4006      
.switch_2_101:
    movs r0, #19
    b .ret.4006      
.switch_3_101:
    movs r0, #25
    b .ret.4006      
.switch_4_101:
    movs r0, #13
    b .ret.4006      
.switch_5_101:
    movs r0, #17
    b .ret.4006      
.switch_6_101:
    movs r0, #21
    b .ret.4006      
.switch_7_101:
    movs r0, #6
    b .ret.4006      
.brk.7270:
    movs r0, #0
.ret.4006:
    @stackempty locals
.final_8_101:
msgpack_tagFormat__P4006_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(64,5): settings.writeBuffer
    ;
    .object settings_writeBuffer__P2972 "settings/settings.ts(64,5): settings.writeBuffer"
settings_writeBuffer__P2972_pre:
    .section code
    .balign 4
    .section code
settings_writeBuffer__P2972:
settings_writeBuffer__P2972_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeBuffer__P2972_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_52
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_set
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_102      
.jmpz757:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    movs r0, #115
    lsls r0, r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_102:
.afterif_1_102:
.ret.2972:
    @stackempty locals
    movs r0, #0
.final_2_102:
settings_writeBuffer__P2972_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1824,5): jacdac.isSimulator
    ;
    .object jacdac_isSimulator__P3754 "jacdac/routing.ts(1824,5): jacdac.isSimulator"
jacdac_isSimulator__P3754_pre:
    .section code
    .balign 4
    .section code
jacdac_isSimulator__P3754:
jacdac_isSimulator__P3754_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_isSimulator__P3754_locals:
    bl control_deviceDalVersion__P3011
_proccall758:
    push {r0} ; proc-arg
    ldr r1, _ldlit_151 ; _str24      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3754:
    @stackempty locals
.final_0_103:
    add sp, #4*1 ; pop locals 1
jacdac_isSimulator__P3754_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(17,5): control.deviceDalVersion
    ;
    .object control_deviceDalVersion__P3011 "jacdac/mbcompat.ts(17,5): control.deviceDalVersion"
control_deviceDalVersion__P3011_pre:
    .section code
    .balign 4
    .section code
control_deviceDalVersion__P3011:
control_deviceDalVersion__P3011_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_deviceDalVersion__P3011_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::_ramSize
    bl _numops_fromInt
    ldr r1, _ldlit_152 ; 2097153      
    bl _cmp_gt
    beq .condexprz_0_104      
.jmpz759:
    ldr r0, _ldlit_151 ; _str24      
    b .condexprfin_1_104      
.condexprz_0_104:
    ldr r0, _ldlit_153 ; _str25      
.condexprfin_1_104:
; jmp value (already in r0)
.ret.3011:
    @stackempty locals
.final_2_104:
control_deviceDalVersion__P3011_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1328,9): jacdac.Device.isBrain
    ;
    .object jacdac_Device_isBrain__P3729 "jacdac/routing.ts(1328,9): jacdac.Device.isBrain"
jacdac_Device_isBrain__P3729_pre:
    .section code
    .balign 4
jacdac_Device_isBrain__P3729_args:
    cmp r4, #1
    bge jacdac_Device_isBrain__P3729_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_isBrain__P3729_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_isBrain__P3729:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_isBrain__P3729_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_isBrain__P3729_locals:
    ldr r0, _ldlit_154 ; 544775627      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_hasService__P3746_nochk
_proccall760:
    add sp, #4*2 ; pop locals 2
.ret.3729:
    @stackempty locals
.final_0_105:
jacdac_Device_isBrain__P3729_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1583,9): jacdac.Device.hasService
    ;
    .object jacdac_Device_hasService__P3746 "jacdac/routing.ts(1583,9): jacdac.Device.hasService"
jacdac_Device_hasService__P3746_pre:
    .section code
    .balign 4
jacdac_Device_hasService__P3746_args:
    cmp r4, #2
    bge jacdac_Device_hasService__P3746_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Device_hasService__P3746_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Device_hasService__P3746:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_hasService__P3746_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_hasService__P3746_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3738_nochk
_proccall761:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7312:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.7312      
.jmpz762:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3740_nochk
_proccall764:
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_106      
.jmpz763:
    movs r0, #66
    b .ret.3746      
.else_0_106:
.afterif_1_106:
.cont.7312:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7312      
.brk.7312:
    movs r0, #10
.ret.3746:
    @stackempty locals
.final_2_106:
    add sp, #4*2 ; pop locals 2
jacdac_Device_hasService__P3746_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1754,5): jacdac.serviceMatches
    ;
    .object jacdac_serviceMatches__P4301 "jacdac/routing.ts(1754,5): jacdac.serviceMatches"
jacdac_serviceMatches__P4301_pre:
    .section code
    .balign 4
    .section code
jacdac_serviceMatches__P4301:
jacdac_serviceMatches__P4301_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_serviceMatches__P4301_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #36]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_107      
.jmpz765:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_107      
.lazySkip_2_107:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_1_107:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_107      
.jmpz766:
    movs r0, #10
    b .ret.4301      
.else_0_107:
.afterif_3_107:
    movs r0, #9
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7335:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7335      
.jmpz767:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_4_107      
.jmpz768:
    movs r0, #10
    b .ret.4301      
.else_4_107:
.afterif_5_107:
.cont.7335:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7335      
.brk.7335:
    movs r0, #66
.ret.4301:
    @stackempty locals
.final_6_107:
    add sp, #4*2 ; pop locals 2
jacdac_serviceMatches__P4301_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1323,9): jacdac.Device.constructor
    ;
    .object jacdac_Device_constructor__P3728 "jacdac/routing.ts(1323,9): jacdac.Device.constructor"
jacdac_Device_constructor__P3728_pre:
    .section code
    .balign 4
    .section code
jacdac_Device_constructor__P3728:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_constructor__P3728_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_constructor__P3728_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #32]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3775
_proccall769:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3728:
    @stackempty locals
.final_0_108:
jacdac_Device_constructor__P3728_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(20,9): jacdac.EventSource.constructor
    ;
    .object jacdac_EventSource_constructor__P3775 "jacdac/eventsource.ts(20,9): jacdac.EventSource.constructor"
jacdac_EventSource_constructor__P3775_pre:
    .section code
    .balign 4
    .section code
jacdac_EventSource_constructor__P3775:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3774_validate_53
    mov lr, r7
jacdac_EventSource_constructor__P3775_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_EventSource_constructor__P3775_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    movs r0, #0
.ret.3775:
    @stackempty locals
.final_0_109:
jacdac_EventSource_constructor__P3775_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1605,9): jacdac.Device._destroy
    ;
    .object jacdac_Device__destroy__P3749 "jacdac/routing.ts(1605,9): jacdac.Device._destroy"
jacdac_Device__destroy__P3749_pre:
    .section code
    .balign 4
jacdac_Device__destroy__P3749_args:
    cmp r4, #1
    bge jacdac_Device__destroy__P3749_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device__destroy__P3749_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device__destroy__P3749:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device__destroy__P3749_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device__destroy__P3749_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735_nochk
_proccall770:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_155 ; _str133      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_log__P4275
_proccall771:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7367:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz772
    b .brk.7367      
.object PUSH
.balign 4
_ldlit_151:
 .word _str24
_ldlit_152:
 .word 2097153
_ldlit_153:
 .word _str25
_ldlit_154:
 .word 544775627
_ldlit_155:
 .word _str133
.object POP
.jmpz772:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_Client__detach__P3715
_proccall773:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.7367:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.7367      
.brk.7367:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #12]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #96]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall774:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #96]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778
_proccall775:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3749:
    @stackempty locals
    movs r0, #0
.final_0_110:
    add sp, #4*3 ; pop locals 3
jacdac_Device__destroy__P3749_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1354,9): jacdac.Device.shortId
    ;
    .object jacdac_Device_shortId__P3735 "jacdac/routing.ts(1354,9): jacdac.Device.shortId"
jacdac_Device_shortId__P3735_pre:
    .section code
    .balign 4
jacdac_Device_shortId__P3735_args:
    cmp r4, #1
    bge jacdac_Device_shortId__P3735_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_shortId__P3735_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_shortId__P3735:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_shortId__P3735_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_shortId__P3735_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_111      
.jmpz776:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl jacdac_shortDeviceId__P3723
_proccall777:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_111:
.afterif_1_111:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
.ret.3735:
    @stackempty locals
.final_2_111:
jacdac_Device_shortId__P3735_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1296,5): jacdac.shortDeviceId
    ;
    .object jacdac_shortDeviceId__P3723 "jacdac/routing.ts(1296,5): jacdac.shortDeviceId"
jacdac_shortDeviceId__P3723_pre:
    .section code
    .balign 4
    .section code
jacdac_shortDeviceId__P3723:
jacdac_shortDeviceId__P3723_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_shortDeviceId__P3723_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_fromHex__P2795
_proccall778:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #30
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::hash
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #53
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #131
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #26
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #53
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #131
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #169
    lsls r1, r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #97
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #26
    lsls r1, r1, #8
    adds r1, #104
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #21
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    movs r0, #97
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.3723:
    @stackempty locals
.final_0_112:
    add sp, #4*1 ; pop locals 1
jacdac_shortDeviceId__P3723_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(286,5): Buffer.fromHex
    ;
    .object Buffer_fromHex__P2795 "core/buffer.ts(286,5): Buffer.fromHex"
Buffer_fromHex__P2795_pre:
    .section code
    .balign 4
    .section code
Buffer_fromHex__P2795:
Buffer_fromHex__P2795_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Buffer_fromHex__P2795_locals:
    ldr r0, _ldlit_157 ; _str18      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringToLowerCase__P2150
_proccall779:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7467:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7467      
.jmpz780:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_113      
.jmpz781:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_113      
.lazySkip_2_113:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_1_113:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_113      
.jmpz782:
    ldr r0, _ldlit_158 ; _str19      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_0_113:
.afterif_3_113:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@4]
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_50
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.7467:
    ldr r0, [sp, locals@2]
    movs r1, #5
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7467      
.brk.7467:
    ldr r0, [sp, locals@1]
.ret.2795:
    @stackempty locals
.final_4_113:
    add sp, #4*5 ; pop locals 5
Buffer_fromHex__P2795_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(421,5): helpers.stringToLowerCase
    ;
    .object helpers_stringToLowerCase__P2150 "core/pxt-helpers.ts(421,5): helpers.stringToLowerCase"
helpers_stringToLowerCase__P2150_pre:
    .section code
    .balign 4
    .section code
helpers_stringToLowerCase__P2150:
helpers_stringToLowerCase__P2150_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_stringToLowerCase__P2150_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.7514:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.7514      
.jmpz783:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charCodeAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #131
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_114      
.jmpz784:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_114      
.lazySkip_2_114:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #181
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_1_114:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_114      
.jmpz785:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall786:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    movs r1, #65
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl String_::fromCharCode
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
.else_0_114:
.afterif_3_114:
.cont.7514:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.7514      
.brk.7514:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_stringSlice__P2148
_proccall787:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.2150:
    @stackempty locals
.final_4_114:
    add sp, #4*4 ; pop locals 4
helpers_stringToLowerCase__P2150_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(389,5): jacdac.log
    ;
    .object jacdac_log__P4275 "jacdac/routing.ts(389,5): jacdac.log"
jacdac_log__P4275_pre:
    .section code
    .balign 4
    .section code
jacdac_log__P4275:
jacdac_log__P4275_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_log__P4275_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_159 ; _str111      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2524
_proccall788:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4275:
    @stackempty locals
    movs r0, #0
.final_0_115:
jacdac_log__P4275_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1336,9): jacdac.Device.restartCounter
    ;
    .object jacdac_Device_restartCounter__P3731 "jacdac/routing.ts(1336,9): jacdac.Device.restartCounter"
jacdac_Device_restartCounter__P3731_pre:
    .section code
    .balign 4
jacdac_Device_restartCounter__P3731_args:
    cmp r4, #1
    bge jacdac_Device_restartCounter__P3731_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_restartCounter__P3731_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_restartCounter__P3731:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_restartCounter__P3731_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_restartCounter__P3731_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_announceflags__P3730_nochk
_proccall789:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    bl _numops_ands
.ret.3731:
    @stackempty locals
.final_0_116:
jacdac_Device_restartCounter__P3731_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1332,9): jacdac.Device.announceflags
    ;
    .object jacdac_Device_announceflags__P3730 "jacdac/routing.ts(1332,9): jacdac.Device.announceflags"
jacdac_Device_announceflags__P3730_pre:
    .section code
    .balign 4
jacdac_Device_announceflags__P3730_args:
    cmp r4, #1
    bge jacdac_Device_announceflags__P3730_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_announceflags__P3730_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_157:
 .word _str18
_ldlit_158:
 .word _str19
_ldlit_159:
 .word _str111
.object POP
    .section code
jacdac_Device_announceflags__P3730:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_announceflags__P3730_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_announceflags__P3730_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
.ret.3730:
    @stackempty locals
.final_0_117:
jacdac_Device_announceflags__P3730_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(197,9): jacdac.JDPacket.data
    ;
    .object jacdac_JDPacket_data__P3094 "jacdac/packet.ts(197,9): jacdac.JDPacket.data"
jacdac_JDPacket_data__P3094_pre:
    .section code
    .balign 4
jacdac_JDPacket_data__P3094_args:
    cmp r4, #1
    bge jacdac_JDPacket_data__P3094_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_data__P3094_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_data__P3094:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_data__P3094_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_data__P3094_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.3094:
    @stackempty locals
.final_0_118:
jacdac_JDPacket_data__P3094_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(157,9): jacdac.JDPacket.serviceCommand
    ;
    .object jacdac_JDPacket_serviceCommand__P3086 "jacdac/packet.ts(157,9): jacdac.JDPacket.serviceCommand"
jacdac_JDPacket_serviceCommand__P3086_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceCommand__P3086_args:
    cmp r4, #1
    bge jacdac_JDPacket_serviceCommand__P3086_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_serviceCommand__P3086:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_serviceCommand__P3086_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceCommand__P3086_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #4
    movs r2, #14
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
.ret.3086:
    @stackempty locals
.final_0_119:
jacdac_JDPacket_serviceCommand__P3086_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(272,5): helpers.arrayFind
    ;
    .object helpers_arrayFind__P2140 "core/pxt-helpers.ts(272,5): helpers.arrayFind"
helpers_arrayFind__P2140_pre:
    .section code
    .balign 4
    .section code
helpers_arrayFind__P2140:
helpers_arrayFind__P2140_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayFind__P2140_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.7597:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.7597      
.jmpz790:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_120      
.jmpz791:
    ldr r0, [sp, locals@2]
    b .ret.2140      
.else_0_120:
.afterif_1_120:
.cont.7597:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.7597      
.brk.7597:
    movs r0, #0
.ret.2140:
    @stackempty locals
.final_2_120:
    add sp, #4*3 ; pop locals 3
helpers_arrayFind__P2140_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(519,9): jacdac.Server.handlePacketOuter
    ;
    .object jacdac_Server_handlePacketOuter__P3661 "jacdac/routing.ts(519,9): jacdac.Server.handlePacketOuter"
jacdac_Server_handlePacketOuter__P3661_pre:
    .section code
    .balign 4
jacdac_Server_handlePacketOuter__P3661_args:
    cmp r4, #2
    bge jacdac_Server_handlePacketOuter__P3661_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handlePacketOuter__P3661_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handlePacketOuter__P3661:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handlePacketOuter__P3661_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handlePacketOuter__P3661_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall793:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #34
    lsls r0, r0, #8
    adds r0, #7
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz794
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_121      
.jmpz794:
    movs r0, #34
    lsls r0, r0, #8
    adds r0, #19
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz795
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_121      
.jmpz795:
    movs r0, #34
    lsls r0, r0, #8
    adds r0, #15
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz796
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_121      
.jmpz796:
    movs r0, #32
    lsls r0, r0, #8
    adds r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz797
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_121      
.jmpz797:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz798
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_121      
.jmpz798:
    movs r0, #32
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz799
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_5_121      
.jmpz799:
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz800
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_6_121      
.jmpz800:
    movs r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz801
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_7_121      
.jmpz801:
    pop {r0} ; tmpref @1
    b .brk.7616      
.switch_0_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleStatusCode__P4174_nochk
_proccall802:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3661      
.switch_1_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleInstanceName__P4175_nochk
_proccall803:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3661      
.switch_2_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleVariant__P4176_nochk
_proccall804:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3661      
.switch_3_121:
.switch_4_121:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_121      
.jmpz805:
    b .brk.7616      
.else_8_121:
.afterif_9_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleValue__P4177_nochk
_proccall806:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3661      
.switch_5_121:
.switch_6_121:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_121      
.jmpz807:
    b .brk.7616      
.else_10_121:
.afterif_11_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleIntensity__P4178_nochk
_proccall808:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3661      
.switch_7_121:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleCalibrateCommand__P4179_nochk
_proccall809:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .ret.3661      
.brk.7616:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_121      
.jmpz810:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P3092
_proccall811:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_121      
.jmpz812:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P3093
_proccall813:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_161 ; constant_inline__P7676_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2139
_proccall814:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_121      
.jmpz815:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #164
    bl _ifacecall1_get_54
_proccall816:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #245
    bl _ifacecall1_get_54
_proccall817:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r7, #0
    ldr r0, [sp, #4*0] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, #4*2] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*3] ; estack
    ldr r0, [sp, #4*4] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*5] ; estack
    ldr r0, [sp, #4*6] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*7] ; estack
    ldr r0, [sp, #4*8] ; estack
    push {r0} ; re-push
    str r7, [sp, #4*9] ; estack
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall818:
    add sp, #4*10 ; pop locals 10
    @stackempty locals
    b .ret.3661      
.else_14_121:
.afterif_15_121:
.else_13_121:
.afterif_16_121:
.else_12_121:
.afterif_17_121:
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #40
    bl _classCall_jacdac_Client__C3696_this_43
_proccall819:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3661:
    @stackempty locals
    movs r0, #0
.final_18_121:
    add sp, #4*4 ; pop locals 4
jacdac_Server_handlePacketOuter__P3661_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(553,25): constant.inline
    ;
    .object constant_inline__P7676 "jacdac/routing.ts(553,25): constant.inline"
constant_inline__P7676_pre:
    .section code
    .balign 4
constant_inline__P7676_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word constant_inline__P7676_args@fn
constant_inline__P7676_args:
    cmp r4, #1
    bge constant_inline__P7676_nochk
    push {lr}
    bl _expand_args_1_2
    bl constant_inline__P7676_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
constant_inline__P7676:
constant_inline__P7676_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
constant_inline__P7676_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #65
    bl _ifacecall1_get_54
_proccall820:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.7676:
    @stackempty locals
.final_0_122:
constant_inline__P7676_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(572,9): jacdac.Server.handlePacket
    ;
    .object jacdac_Server_handlePacket__P3662 "jacdac/routing.ts(572,9): jacdac.Server.handlePacket"
jacdac_Server_handlePacket__P3662_pre:
    .section code
    .balign 4
jacdac_Server_handlePacket__P3662_args:
    cmp r4, #2
    bge jacdac_Server_handlePacket__P3662_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handlePacket__P3662_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handlePacket__P3662:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handlePacket__P3662_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handlePacket__P3662_locals:
.ret.3662:
    @stackempty locals
    movs r0, #0
.final_0_123:
jacdac_Server_handlePacket__P3662_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(693,9): jacdac.Server.handleRegValue
    ;
    .object jacdac_Server_handleRegValue__P4182 "jacdac/routing.ts(693,9): jacdac.Server.handleRegValue"
jacdac_Server_handleRegValue__P4182_pre:
    .section code
    .balign 4
jacdac_Server_handleRegValue__P4182_args:
    cmp r4, #5
    bge jacdac_Server_handleRegValue__P4182_nochk
    push {lr}
    bl _expand_args_5_55
    bl jacdac_Server_handleRegValue__P4182_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
jacdac_Server_handleRegValue__P4182:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleRegValue__P4182_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleRegValue__P4182_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall821:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_124      
.jmpz822:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_124      
.lazySkip_2_124:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_124:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_124      
.jmpz823:
    ldr r0, [sp, args@4]
    b .ret.4182      
.else_0_124:
.afterif_3_124:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall824:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _cmp_neq
    beq .else_4_124      
.jmpz825:
    ldr r0, [sp, args@4]
    b .ret.4182      
.else_4_124:
.afterif_5_124:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall826:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_124      
.jmpz827:
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_124      
.jmpz828:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_124      
.lazySkip_9_124:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_8_124:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_7_124      
.jmpz829:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall830:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_jdpacked__P3071
_proccall831:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall832:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_7_124:
.afterif_10_124:
    b .afterif_11_124      
.else_6_124:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _cmp_eq
    beq .else_12_124      
.jmpz833:
    ldr r0, [sp, args@4]
    b .ret.4182      
.else_12_124:
.afterif_13_124:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P3099
_proccall834:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, args@4]
    bl _cmp_neqq
    beq .else_14_124      
.jmpz835:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, args@4]
    @stackempty locals
.else_14_124:
.afterif_15_124:
.afterif_11_124:
    ldr r0, [sp, args@4]
.ret.4182:
    @stackempty locals
.final_16_124:
    add sp, #4*3 ; pop locals 3
jacdac_Server_handleRegValue__P4182_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(221,9): jacdac.JDPacket.jdunpack
    ;
    .object jacdac_JDPacket_jdunpack__P3099 "jacdac/packet.ts(221,9): jacdac.JDPacket.jdunpack"
jacdac_JDPacket_jdunpack__P3099_pre:
    .section code
    .balign 4
jacdac_JDPacket_jdunpack__P3099_args:
    cmp r4, #2
    bge jacdac_JDPacket_jdunpack__P3099_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_jdunpack__P3099_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_161:
 .word constant_inline__P7676_Lit
.object POP
    .section code
jacdac_JDPacket_jdunpack__P3099:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_jdunpack__P3099_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_jdunpack__P3099_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_125      
.jmpz836:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_125      
.lazySkip_1_125:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
.lazy_0_125:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_125      
.jmpz837:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_125      
.lazySkip_3_125:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdunpack__P3118
_proccall838:
    add sp, #4*2 ; pop locals 2
.lazy_2_125:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_5_125      
.jmpz839:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_125      
.lazySkip_5_125:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
.lazy_4_125:
; jmp value (already in r0)
.ret.3099:
    @stackempty locals
.final_6_125:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_jdunpack__P3099_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(77,9): jacdac.JDPacket.jdpacked
    ;
    .object jacdac_JDPacket_jdpacked__P3071 "jacdac/packet.ts(77,9): jacdac.JDPacket.jdpacked"
jacdac_JDPacket_jdpacked__P3071_pre:
    .section code
    .balign 4
jacdac_JDPacket_jdpacked__P3071_args:
    cmp r4, #3
    bge jacdac_JDPacket_jdpacked__P3071_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_JDPacket_jdpacked__P3071_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_JDPacket_jdpacked__P3071:
jacdac_JDPacket_jdpacked__P3071_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_jdpacked__P3071_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall840:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P3068
_proccall841:
    add sp, #4*2 ; pop locals 2
.ret.3071:
    @stackempty locals
.final_0_126:
jacdac_JDPacket_jdpacked__P3071_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(366,5): jacdac.jdpack
    ;
    .object jacdac_jdpack__P3119 "jacdac/pack.ts(366,5): jacdac.jdpack"
jacdac_jdpack__P3119_pre:
    .section code
    .balign 4
    .section code
jacdac_jdpack__P3119:
jacdac_jdpack__P3119_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdpack__P3119_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_127      
.jmpz842:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_127      
.lazySkip_2_127:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_127:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_127      
.jmpz843:
    movs r0, #0
    b .ret.3119      
.else_0_127:
.afterif_3_127:
    ldr r0, _ldlit_163 ; _catch_7782      
    bl _pxt_save_exception_state
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #6
    push {r0} ; proc-arg
    bl jacdac_jdpackCore__P4160
_proccall844:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl jacdac_jdpackCore__P4160
_proccall845:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    ldr r0, [sp, locals@1]
    b .ret.3119      
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_6_127      
_catch_7782:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl console_error__P2527
_proccall846:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
    b .ret.3119      
.catchend_6_127:
    movs r0, #0
.ret.3119:
    @stackempty locals
.final_7_127:
    add sp, #4*3 ; pop locals 3
jacdac_jdpack__P3119_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(233,5): jacdac.jdpackCore
    ;
    .object jacdac_jdpackCore__P4160 "jacdac/pack.ts(233,5): jacdac.jdpackCore"
jacdac_jdpackCore__P4160_pre:
    .section code
    .balign 4
    .section code
jacdac_jdpackCore__P4160:
jacdac_jdpackCore__P4160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdpackCore__P4160_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_164 ; jacdac_TokenParser__C4156_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_TokenParser_constructor__P4158
_proccall847:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
.cont.7811:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl jacdac_TokenParser_parse__P4157
_proccall849:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz848
    b .brk.7811      
.jmpz848:
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #241
    bl _cmp_eq
    beq .else_0_128      
.jmpz850:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    b .cont.7811      
.else_0_128:
.afterif_1_128:
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #229
    bl _cmp_eq
    beq .else_2_128      
.jmpz851:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #0
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl helpers_stringSlice__P2148
_proccall852:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@6]
    movs r0, #1
    str r0, [sp, locals@7]
    @stackempty locals
.fortop.7841:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.7841      
.jmpz853:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@7]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdpackCore__P4160
_proccall854:
    add sp, #4*4 ; pop locals 4
    str r0, [sp, args@3]
    @stackempty locals
.cont.7841:
    ldr r0, [sp, locals@7]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@7]
    b .fortop.7841      
.brk.7841:
    movs r0, #0
    str r0, [sp, locals@6]
    b .brk.7811      
.else_2_128:
.afterif_3_128:
    movs r0, #0
    str r0, [sp, locals@8]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_128      
.jmpz855:
    ldr r0, [sp, locals@3]
    str r0, [sp, locals@8]
    @stackempty locals
    b .afterif_5_128      
.else_4_128:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@8]
    @stackempty locals
.afterif_5_128:
    movs r0, #0
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@10]
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.7858:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz856
    b .brk.7858      
.jmpz856:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    movs r1, #6
    bl _cmp_neqq
    bne .jmpz857
    b .else_6_128      
.jmpz857:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_165 ; _str9      
    bl _cmp_neq
    beq .else_7_128      
.jmpz858:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_166 ; _str53      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
    add sp, #4*1 ; pop locals 1
.else_7_128:
.afterif_8_128:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz859
    b .else_9_128      
.jmpz859:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz860
    b .else_10_128      
.object PUSH
.balign 4
_ldlit_163:
 .word _catch_7782
_ldlit_164:
 .word jacdac_TokenParser__C4156_VT
_ldlit_165:
 .word _str9
_ldlit_166:
 .word _str53
.object POP
.jmpz860:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r1, _ldlit_168 ; _dbl51      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::floor
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_51
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    movs r1, #9
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    bl _conv_51
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_11_128      
.else_10_128:
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_14_128      
.jmpz861:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_13_128      
.lazySkip_14_128:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #23
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_16_128      
.jmpz862:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_15_128      
.lazySkip_16_128:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_15_128:
; jmp value (already in r0)
.lazy_13_128:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_128      
.jmpz863:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    movs r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_51
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .afterif_17_128      
.else_12_128:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_clampWithNumberFormat__P4161
_proccall864:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_51
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.afterif_17_128:
.afterif_11_128:
.else_9_128:
.afterif_18_128:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@3]
    @stackempty locals
    b .afterif_19_128      
.else_6_128:
    movs r0, #0
    str r0, [sp, locals@14]
    @stackempty locals
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_169 ; _str8      
    bl _cmp_eq
    beq .else_20_128      
.jmpz865:
    ldr r0, [sp, locals@2]
    movs r1, #245
    bl _cmp_eq
    beq .else_21_128      
.jmpz866:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_170 ; _str54      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_22_128      
.else_21_128:
    ldr r0, [sp, locals@2]
    movs r1, #231
    bl _cmp_eq
    beq .else_23_128      
.jmpz867:
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_24_128      
.else_23_128:
    ldr r0, _ldlit_171 ; _str55      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_24_128:
.afterif_22_128:
    b .afterif_25_128      
.else_20_128:
    ldr r0, [sp, locals@9]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_28_128      
.jmpz868:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_27_128      
.lazySkip_28_128:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::typeOf
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, _ldlit_172 ; _str56      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_27_128:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_30_128      
.jmpz869:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_29_128      
.lazySkip_30_128:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.lazy_29_128:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_26_128      
.jmpz870:
    ldr r0, [sp, locals@2]
    movs r1, #197
    bl _cmp_eq
    beq .else_31_128      
.jmpz871:
    ldr r0, [sp, locals@9]
    str r0, [sp, locals@14]
    @stackempty locals
    b .afterif_32_128      
.else_31_128:
    ldr r0, _ldlit_173 ; _str57      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_32_128:
    b .afterif_33_128      
.else_26_128:
    ldr r0, _ldlit_174 ; _str58      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.afterif_33_128:
.afterif_25_128:
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_TokenParser__C4156_validate_20
    ldr r0, [r0, #8]
    str r0, [sp, locals@15]
    @stackempty locals
    ldr r0, [sp, locals@15]
    movs r1, #1
    bl _cmp_ge
    beq .else_34_128      
.jmpz872:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@15]
    bl _cmp_gt
    beq .else_35_128      
.jmpz873:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl jacdac_bufferSlice__P4155
_proccall874:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@14]
    @stackempty locals
.else_35_128:
.afterif_36_128:
    b .afterif_37_128      
.object PUSH
.balign 4
_ldlit_168:
 .word _dbl51
_ldlit_169:
 .word _str8
_ldlit_170:
 .word _str54
_ldlit_171:
 .word _str55
_ldlit_172:
 .word _str56
_ldlit_173:
 .word _str57
_ldlit_174:
 .word _str58
.object POP
.else_34_128:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@15]
    @stackempty locals
.afterif_37_128:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_38_128      
.jmpz875:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    bl _conv_49
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_38_128:
.afterif_39_128:
    ldr r0, [sp, args@3]
    ldr r1, [sp, locals@15]
    bl _numops_adds
    str r0, [sp, args@3]
    @stackempty locals
.afterif_19_128:
.cont.7858:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    b .fortop.7858      
.brk.7858:
    movs r0, #0
    str r0, [sp, locals@10]
    b .cont.7811      
.brk.7811:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, locals@0]
    bl _cmp_gt
    beq .else_40_128      
.jmpz876:
    ldr r0, _ldlit_176 ; _str59      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_40_128:
.afterif_41_128:
    ldr r0, [sp, args@3]
.ret.4160:
    @stackempty locals
.final_42_128:
    add sp, #4*16 ; pop locals 16
jacdac_jdpackCore__P4160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(315,5): jacdac.clampWithNumberFormat
    ;
    .object jacdac_clampWithNumberFormat__P4161 "jacdac/pack.ts(315,5): jacdac.clampWithNumberFormat"
jacdac_clampWithNumberFormat__P4161_pre:
    .section code
    .balign 4
    .section code
jacdac_clampWithNumberFormat__P4161:
jacdac_clampWithNumberFormat__P4161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_clampWithNumberFormat__P4161_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #27
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_130      
.jmpz877:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_130      
.lazySkip_2_130:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #29
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_130:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_130      
.jmpz878:
    ldr r0, [sp, args@0]
    b .ret.4161      
.else_0_130:
.afterif_3_130:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P2122
_proccall880:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_130      
.jmpz879:
    movs r0, #1
    b .ret.4161      
.else_4_130:
.afterif_5_130:
    ldr r0, [sp, args@1]
    movs r1, #23
    bl _cmp_eq
    beq .else_6_130      
.jmpz881:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_7_130      
.jmpz882:
    movs r0, #1
    b .ret.4161      
.else_7_130:
.afterif_8_130:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_177 ; _dbl60      
    bl _cmp_gt
    beq .else_9_130      
.jmpz883:
    ldr r0, _ldlit_177 ; _dbl60      
    b .ret.4161      
.else_9_130:
.afterif_10_130:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _numops_lsrs
    add sp, #4*1 ; pop locals 1
    b .ret.4161      
.else_6_130:
.afterif_11_130:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_12_130      
.jmpz884:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz885
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_130      
.jmpz885:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz886
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_130      
.jmpz886:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz887
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_130      
.jmpz887:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz888
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_16_130      
.jmpz888:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz889
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_17_130      
.jmpz889:
    pop {r0} ; tmpref @1
    b .brk.8019      
.switch_13_130:
.switch_14_130:
    movs r0, #1
    b .ret.4161      
.switch_15_130:
    ldr r0, [sp, args@0]
    movs r1, #255
    negs r1, r1
    bl _cmp_le
    beq .else_18_130      
.jmpz890:
    movs r0, #255
    negs r0, r0
    b .ret.4161      
.else_18_130:
.afterif_19_130:
    b .brk.8019      
.switch_16_130:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_178 ; -65535      
    bl _cmp_le
    beq .else_20_130      
.jmpz891:
    ldr r0, _ldlit_178 ; -65535      
    b .ret.4161      
.else_20_130:
.afterif_21_130:
    b .brk.8019      
.switch_17_130:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_179 ; _dbl61      
    bl _cmp_le
    beq .else_22_130      
.jmpz892:
    ldr r0, _ldlit_179 ; _dbl61      
    b .ret.4161      
.else_22_130:
.afterif_23_130:
.brk.8019:
    b .afterif_24_130      
.else_12_130:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #5
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz893
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_25_130      
.jmpz893:
    movs r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz894
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_26_130      
.jmpz894:
    movs r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz895
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_27_130      
.jmpz895:
    movs r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz896
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_28_130      
.jmpz896:
    movs r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz897
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_29_130      
.jmpz897:
    pop {r0} ; tmpref @1
    b .brk.8041      
.switch_25_130:
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_ge
    beq .else_30_130      
.jmpz898:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #255
    b .ret.4161      
.else_30_130:
.afterif_31_130:
    b .brk.8041      
.switch_26_130:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_180 ; 131071      
    bl _cmp_ge
    beq .else_32_130      
.jmpz899:
    ldr r0, _ldlit_180 ; 131071      
    b .ret.4161      
.else_32_130:
.afterif_33_130:
    b .brk.8041      
.switch_27_130:
    ldr r0, [sp, args@0]
    movs r1, #255
    bl _cmp_ge
    beq .else_34_130      
.jmpz900:
    movs r0, #255
    b .ret.4161      
.else_34_130:
.afterif_35_130:
    b .brk.8041      
.switch_28_130:
    ldr r0, [sp, args@0]
    movs r1, #255
    lsls r1, r1, #8
    adds r1, #255
    bl _cmp_ge
    beq .else_36_130      
.jmpz901:
    movs r0, #255
    lsls r0, r0, #8
    adds r0, #255
    b .ret.4161      
.else_36_130:
.afterif_37_130:
    b .brk.8041      
.switch_29_130:
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_181 ; _dbl23      
    bl _cmp_ge
    beq .else_38_130      
.jmpz902:
    ldr r0, _ldlit_181 ; _dbl23      
    b .ret.4161      
.else_38_130:
.afterif_39_130:
.brk.8041:
.afterif_24_130:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _numops_orrs
.ret.4161:
    @stackempty locals
.final_40_130:
jacdac_clampWithNumberFormat__P4161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(57,9): jacdac.JDPacket.from
    ;
    .object jacdac_JDPacket_from__P3068 "jacdac/packet.ts(57,9): jacdac.JDPacket.from"
jacdac_JDPacket_from__P3068_pre:
    .section code
    .balign 4
jacdac_JDPacket_from__P3068_args:
    cmp r4, #2
    bge jacdac_JDPacket_from__P3068_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_from__P3068_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_from__P3068:
jacdac_JDPacket_from__P3068_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_from__P3068_locals:
    ldr r0, _ldlit_182 ; jacdac_JDPacket__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_constructor__P4124
_proccall903:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #16
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C3062_validate_35
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_data__P3095
_proccall904:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3087
_proccall905:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3068:
    @stackempty locals
.final_0_131:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_from__P3068_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_176:
 .word _str59
_ldlit_177:
 .word _dbl60
_ldlit_178:
 .word -65535
_ldlit_179:
 .word _dbl61
_ldlit_180:
 .word 131071
_ldlit_181:
 .word _dbl23
_ldlit_182:
 .word jacdac_JDPacket__C3062_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(160,9): jacdac.JDPacket.serviceCommand
    ;
    .object jacdac_JDPacket_serviceCommand__P3087 "jacdac/packet.ts(160,9): jacdac.JDPacket.serviceCommand"
jacdac_JDPacket_serviceCommand__P3087_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceCommand__P3087_args:
    cmp r4, #2
    bge jacdac_JDPacket_serviceCommand__P3087_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_serviceCommand__P3087_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_serviceCommand__P3087:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_serviceCommand__P3087_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceCommand__P3087_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_56
    movs r1, #4
    movs r2, #14
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3087:
    @stackempty locals
    movs r0, #0
.final_0_132:
jacdac_JDPacket_serviceCommand__P3087_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(201,9): jacdac.JDPacket.data
    ;
    .object jacdac_JDPacket_data__P3095 "jacdac/packet.ts(201,9): jacdac.JDPacket.data"
jacdac_JDPacket_data__P3095_pre:
    .section code
    .balign 4
jacdac_JDPacket_data__P3095_args:
    cmp r4, #2
    bge jacdac_JDPacket_data__P3095_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_data__P3095_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_data__P3095:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_data__P3095_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_data__P3095_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_133      
.jmpz906:
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, args@1]
    @stackempty locals
.else_0_133:
.afterif_1_133:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #217
    bl _cmp_gt
    beq .else_2_133      
.jmpz907:
    ldr r0, _ldlit_184 ; _str30      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_2_133:
.afterif_3_133:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_36
    movs r1, #25
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    @stackempty locals
.ret.3095:
    @stackempty locals
    movs r0, #0
.final_4_133:
jacdac_JDPacket_data__P3095_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(578,9): jacdac.Server.sendReport
    ;
    .object jacdac_Server_sendReport__P4173 "jacdac/routing.ts(578,9): jacdac.Server.sendReport"
jacdac_Server_sendReport__P4173_pre:
    .section code
    .balign 4
jacdac_Server_sendReport__P4173_args:
    cmp r4, #2
    bge jacdac_Server_sendReport__P4173_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_sendReport__P4173_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_sendReport__P4173:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_sendReport__P4173_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_sendReport__P4173_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_134      
.jmpz908:
    b .ret.4173      
.else_0_134:
.afterif_1_134:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall909:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617
_proccall910:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P3109
_proccall911:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4173:
    @stackempty locals
    movs r0, #0
.final_2_134:
jacdac_Server_sendReport__P4173_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(93,9): jacdac.JDPacket.markHandled
    ;
    .object jacdac_JDPacket_markHandled__P3074 "jacdac/packet.ts(93,9): jacdac.JDPacket.markHandled"
jacdac_JDPacket_markHandled__P3074_pre:
    .section code
    .balign 4
jacdac_JDPacket_markHandled__P3074_args:
    cmp r4, #1
    bge jacdac_JDPacket_markHandled__P3074_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_markHandled__P3074_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_markHandled__P3074:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_markHandled__P3074_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_markHandled__P3074_locals:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #16]
    @stackempty locals
.ret.3074:
    @stackempty locals
    movs r0, #0
.final_0_135:
jacdac_JDPacket_markHandled__P3074_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(648,9): jacdac.Server.handleCalibrateCommand
    ;
    .object jacdac_Server_handleCalibrateCommand__P4179 "jacdac/routing.ts(648,9): jacdac.Server.handleCalibrateCommand"
jacdac_Server_handleCalibrateCommand__P4179_pre:
    .section code
    .balign 4
jacdac_Server_handleCalibrateCommand__P4179_args:
    cmp r4, #2
    bge jacdac_Server_handleCalibrateCommand__P4179_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handleCalibrateCommand__P4179_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleCalibrateCommand__P4179:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleCalibrateCommand__P4179_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleCalibrateCommand__P4179_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    movs r1, #5
    bl _cmp_eqq
    beq .else_0_136      
.jmpz912:
    b .ret.4179      
.else_0_136:
.afterif_1_136:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_136      
.jmpz913:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_setStatusCode__P3659_nochk
_proccall914:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_185 ; jacdac_Server_handleCalibrateCommand_inline__P8126_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInBackground__P2442
_proccall915:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_3_136      
.else_2_136:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall916:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_3_136:
.ret.4179:
    @stackempty locals
    movs r0, #0
.final_4_136:
jacdac_Server_handleCalibrateCommand__P4179_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(653,41): jacdac.Server.handleCalibrateCommand.inline
    ;
    .object jacdac_Server_handleCalibrateCommand_inline__P8126 "jacdac/routing.ts(653,41): jacdac.Server.handleCalibrateCommand.inline"
jacdac_Server_handleCalibrateCommand_inline__P8126_pre:
    .section code
    .balign 4
jacdac_Server_handleCalibrateCommand_inline__P8126_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Server_handleCalibrateCommand_inline__P8126_args@fn
jacdac_Server_handleCalibrateCommand_inline__P8126_args:
    .section code
jacdac_Server_handleCalibrateCommand_inline__P8126:
jacdac_Server_handleCalibrateCommand_inline__P8126_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleCalibrateCommand_inline__P8126_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_Server_doCalibrate__P4180_nochk
_proccall917:
    add sp, #4*1 ; pop locals 1
.ret.8126:
    @stackempty locals
    movs r0, #0
.final_0_137:
jacdac_Server_handleCalibrateCommand_inline__P8126_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(97,9): jacdac.JDPacket.possiblyNotImplemented
    ;
    .object jacdac_JDPacket_possiblyNotImplemented__P3075 "jacdac/packet.ts(97,9): jacdac.JDPacket.possiblyNotImplemented"
jacdac_JDPacket_possiblyNotImplemented__P3075_pre:
    .section code
    .balign 4
jacdac_JDPacket_possiblyNotImplemented__P3075_args:
    cmp r4, #1
    bge jacdac_JDPacket_possiblyNotImplemented__P3075_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_possiblyNotImplemented__P3075_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_possiblyNotImplemented__P3075:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_possiblyNotImplemented__P3075_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_possiblyNotImplemented__P3075_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_handled__P3073_nochk
_proccall919:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_138      
.jmpz918:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_138      
.lazySkip_2_138:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_ands
.lazy_1_138:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_138      
.jmpz920:
    b .ret.3075      
.else_0_138:
.afterif_3_138:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074_nochk
_proccall921:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall922:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P3085_nochk
_proccall923:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #104]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdpacked__P3071
_proccall924:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083_nochk
_proccall925:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall926:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617
_proccall927:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P3109
_proccall928:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3075:
    @stackempty locals
    movs r0, #0
.final_4_138:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_possiblyNotImplemented__P3075_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(89,9): jacdac.JDPacket.handled
    ;
    .object jacdac_JDPacket_handled__P3073 "jacdac/packet.ts(89,9): jacdac.JDPacket.handled"
jacdac_JDPacket_handled__P3073_pre:
    .section code
    .balign 4
jacdac_JDPacket_handled__P3073_args:
    cmp r4, #1
    bge jacdac_JDPacket_handled__P3073_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_handled__P3073_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_handled__P3073:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_handled__P3073_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_handled__P3073_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3073:
    @stackempty locals
.final_0_139:
jacdac_JDPacket_handled__P3073_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(657,9): jacdac.Server.doCalibrate
    ;
    .object jacdac_Server_doCalibrate__P4180 "jacdac/routing.ts(657,9): jacdac.Server.doCalibrate"
jacdac_Server_doCalibrate__P4180_pre:
    .section code
    .balign 4
jacdac_Server_doCalibrate__P4180_args:
    cmp r4, #1
    bge jacdac_Server_doCalibrate__P4180_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_doCalibrate__P4180_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_doCalibrate__P4180:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_doCalibrate__P4180_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_doCalibrate__P4180_locals:
    ldr r0, _ldlit_186 ; _catch_8159      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #59
    bl _ifacecall1__28
_proccall929:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_setStatusCode__P3659_nochk
_proccall930:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_2_140      
.object PUSH
.balign 4
_ldlit_184:
 .word _str30
_ldlit_185:
 .word jacdac_Server_handleCalibrateCommand_inline__P8126_Lit
_ldlit_186:
 .word _catch_8159
.object POP
_catch_8159:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@0]
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_setStatusCode__P3659_nochk
_proccall931:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.catchend_2_140:
.ret.4180:
    @stackempty locals
    movs r0, #0
.final_3_140:
    add sp, #4*1 ; pop locals 1
jacdac_Server_doCalibrate__P4180_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/control.ts(16,5): control.runInBackground
    ;
    .object control_runInBackground__P2442 "core/control.ts(16,5): control.runInBackground"
control_runInBackground__P2442_pre:
    .section code
    .balign 4
    .section code
control_runInBackground__P2442:
control_runInBackground__P2442_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_runInBackground__P2442_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_57
    mov r7, sp
    str r7, [r6, #4]
    bl control::inBackground
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2442:
    @stackempty locals
    movs r0, #0
.final_0_141:
control_runInBackground__P2442_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(503,9): jacdac.Server.setStatusCode
    ;
    .object jacdac_Server_setStatusCode__P3659 "jacdac/routing.ts(503,9): jacdac.Server.setStatusCode"
jacdac_Server_setStatusCode__P3659_pre:
    .section code
    .balign 4
jacdac_Server_setStatusCode__P3659_args:
    cmp r4, #2
    bge jacdac_Server_setStatusCode__P3659_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_setStatusCode__P3659_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_setStatusCode__P3659:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_setStatusCode__P3659_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_setStatusCode__P3659_locals:
    ldr r0, [sp, args@1]
    ldr r1, _ldlit_188 ; 131071      
    bl _numops_ands
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_142      
.jmpz932:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendChangeEvent__P3665_nochk
_proccall933:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_142:
.afterif_1_142:
.ret.3659:
    @stackempty locals
    movs r0, #0
.final_2_142:
    add sp, #4*1 ; pop locals 1
jacdac_Server_setStatusCode__P3659_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(596,9): jacdac.Server.sendChangeEvent
    ;
    .object jacdac_Server_sendChangeEvent__P3665 "jacdac/routing.ts(596,9): jacdac.Server.sendChangeEvent"
jacdac_Server_sendChangeEvent__P3665_pre:
    .section code
    .balign 4
jacdac_Server_sendChangeEvent__P3665_args:
    cmp r4, #1
    bge jacdac_Server_sendChangeEvent__P3665_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_sendChangeEvent__P3665_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_sendChangeEvent__P3665:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_sendChangeEvent__P3665_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_sendChangeEvent__P3665_locals:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendEvent__P3664_nochk
_proccall934:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall935:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3665:
    @stackempty locals
    movs r0, #0
.final_0_143:
jacdac_Server_sendChangeEvent__P3665_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(584,9): jacdac.Server.sendEvent
    ;
    .object jacdac_Server_sendEvent__P3664 "jacdac/routing.ts(584,9): jacdac.Server.sendEvent"
jacdac_Server_sendEvent__P3664_pre:
    .section code
    .balign 4
jacdac_Server_sendEvent__P3664_args:
    cmp r4, #3
    bge jacdac_Server_sendEvent__P3664_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_Server_sendEvent__P3664_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Server_sendEvent__P3664:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_sendEvent__P3664_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_sendEvent__P3664_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_144      
.jmpz936:
    b .ret.3664      
.else_0_144:
.afterif_1_144:
    ldr r0, [sp, args@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_144      
.jmpz937:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_144      
.lazySkip_3_144:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
.lazy_2_144:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_mkEventCmd__P3618
_proccall938:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P3068
_proccall939:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendReport__P4173_nochk
_proccall940:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #41
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_delayedSend__P3160
_proccall941:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    movs r1, #201
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_delayedSend__P3160
_proccall942:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3664:
    @stackempty locals
    movs r0, #0
.final_4_144:
    add sp, #4*2 ; pop locals 2
jacdac_Server_sendEvent__P3664_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventqueue.ts(14,5): jacdac.delayedSend
    ;
    .object jacdac_delayedSend__P3160 "jacdac/eventqueue.ts(14,5): jacdac.delayedSend"
jacdac_delayedSend__P3160_pre:
    .section code
    .balign 4
    .section code
jacdac_delayedSend__P3160:
jacdac_delayedSend__P3160_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_delayedSend__P3160_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_145      
.jmpz943:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #108]
    @stackempty locals
    ldr r0, _ldlit_189 ; jacdac_processDelayedPackets__P4204_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2441
_proccall944:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_145:
.afterif_1_145:
    ldr r0, _ldlit_190 ; jacdac_DelayedPacket__C4202_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_DelayedPacket_constructor__P4203
_proccall945:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8236:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8236      
.jmpz946:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac_DelayedPacket__C4202_validate_58
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_gt
    beq .else_2_145      
.jmpz947:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_59
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::insertAt
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .ret.3160      
.else_2_145:
.afterif_3_145:
.cont.8236:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8236      
.brk.8236:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3160:
    @stackempty locals
    movs r0, #0
.final_4_145:
    add sp, #4*2 ; pop locals 2
jacdac_delayedSend__P3160_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventqueue.ts(8,9): jacdac.DelayedPacket.constructor
    ;
    .object jacdac_DelayedPacket_constructor__P4203 "jacdac/eventqueue.ts(8,9): jacdac.DelayedPacket.constructor"
jacdac_DelayedPacket_constructor__P4203_pre:
    .section code
    .balign 4
    .section code
jacdac_DelayedPacket_constructor__P4203:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_DelayedPacket__C4202_validate_58
    mov lr, r7
jacdac_DelayedPacket_constructor__P4203_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_DelayedPacket_constructor__P4203_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.4203:
    @stackempty locals
.final_0_146:
jacdac_DelayedPacket_constructor__P4203_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventqueue.ts(29,5): jacdac.processDelayedPackets
    ;
    .object jacdac_processDelayedPackets__P4204 "jacdac/eventqueue.ts(29,5): jacdac.processDelayedPackets"
jacdac_processDelayedPackets__P4204_pre:
    .section code
    .balign 4
jacdac_processDelayedPackets__P4204_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_processDelayedPackets__P4204_args@fn
jacdac_processDelayedPackets__P4204_args:
    .section code
jacdac_processDelayedPackets__P4204:
jacdac_processDelayedPackets__P4204_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_processDelayedPackets__P4204_locals:
.cont.8260:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.8260      
.jmpz948:
    movs r0, #21
    push {r0} ; proc-arg
    bl pause__P2371
_proccall949:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.8265:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_147      
.jmpz950:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_147      
.lazySkip_2_147:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_DelayedPacket__C4202_validate_58
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_1_147:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_147      
.jmpz951:
    b .brk.8265      
    b .afterif_3_147      
.object PUSH
.balign 4
_ldlit_188:
 .word 131071
_ldlit_189:
 .word jacdac_processDelayedPackets__P4204_Lit
_ldlit_190:
 .word jacdac_DelayedPacket__C4202_VT
.object POP
.else_0_147:
.afterif_3_147:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    bl helpers_arrayShift__P2131
_proccall952:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_DelayedPacket__C4202_validate_58
    ldr r0, [r0, #8]
    push {r0} ; the one arg
    bl jacdac_JDPacket__sendCore__P3108
_proccall953:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.8265:
    b .fortop.8265      
.brk.8265:
    ldr r7, [r6, #0]
    ldr r0, [r7, #108]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_147      
.jmpz954:
    movs r0, #6
    ldr r7, [r6, #0]
    str r0, [r7, #108]
    @stackempty locals
    b .ret.4204      
.else_4_147:
.afterif_5_147:
    b .cont.8260      
.brk.8260:
.ret.4204:
    @stackempty locals
    movs r0, #0
.final_6_147:
    add sp, #4*2 ; pop locals 2
jacdac_processDelayedPackets__P4204_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(154,5): helpers.arrayShift
    ;
    .object helpers_arrayShift__P2131 "core/pxt-helpers.ts(154,5): helpers.arrayShift"
helpers_arrayShift__P2131_pre:
    .section code
    .balign 4
    .section code
helpers_arrayShift__P2131:
helpers_arrayShift__P2131_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arrayShift__P2131_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeAt
    add sp, #4*1 ; pop locals 1
.ret.2131:
    @stackempty locals
.final_0_148:
helpers_arrayShift__P2131_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(115,9): jacdac.Bus.mkEventCmd
    ;
    .object jacdac_Bus_mkEventCmd__P3618 "jacdac/routing.ts(115,9): jacdac.Bus.mkEventCmd"
jacdac_Bus_mkEventCmd__P3618_pre:
    .section code
    .balign 4
jacdac_Bus_mkEventCmd__P3618_args:
    cmp r4, #2
    bge jacdac_Bus_mkEventCmd__P3618_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_mkEventCmd__P3618_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_mkEventCmd__P3618:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_mkEventCmd__P3618_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_mkEventCmd__P3618_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_149      
.jmpz955:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #32]
    @stackempty locals
.else_0_149:
.afterif_1_149:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    movs r1, #3
    bl _numops_adds
    movs r1, #255
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #32]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_149      
.jmpz956:
    ldr r0, _ldlit_192 ; _str99      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall957:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_149:
.afterif_3_149:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    mov r1, r0
    ldr r0, _ldlit_193 ; 65537      
    bl _numops_orrs
    ldr r1, [sp, args@1]
    bl _numops_orrs
.ret.3618:
    @stackempty locals
.final_4_149:
jacdac_Bus_mkEventCmd__P3618_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(453,9): jacdac.Server.statusCode
    ;
    .object jacdac_Server_statusCode__P3651 "jacdac/routing.ts(453,9): jacdac.Server.statusCode"
jacdac_Server_statusCode__P3651_pre:
    .section code
    .balign 4
jacdac_Server_statusCode__P3651_args:
    cmp r4, #1
    bge jacdac_Server_statusCode__P3651_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_statusCode__P3651_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_statusCode__P3651:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_statusCode__P3651_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_statusCode__P3651_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
.ret.3651:
    @stackempty locals
.final_0_150:
jacdac_Server_statusCode__P3651_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(637,9): jacdac.Server.handleIntensity
    ;
    .object jacdac_Server_handleIntensity__P4178 "jacdac/routing.ts(637,9): jacdac.Server.handleIntensity"
jacdac_Server_handleIntensity__P4178_pre:
    .section code
    .balign 4
jacdac_Server_handleIntensity__P4178_args:
    cmp r4, #2
    bge jacdac_Server_handleIntensity__P4178_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handleIntensity__P4178_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleIntensity__P4178:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleIntensity__P4178_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleIntensity__P4178_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    movs r0, #3
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall958:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_intensity__P3656_nochk
_proccall959:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4178:
    @stackempty locals
    movs r0, #0
.final_0_151:
    add sp, #4*1 ; pop locals 1
jacdac_Server_handleIntensity__P4178_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(483,9): jacdac.Server.intensity
    ;
    .object jacdac_Server_intensity__P3656 "jacdac/routing.ts(483,9): jacdac.Server.intensity"
jacdac_Server_intensity__P3656_pre:
    .section code
    .balign 4
jacdac_Server_intensity__P3656_args:
    cmp r4, #2
    bge jacdac_Server_intensity__P3656_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_intensity__P3656_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_intensity__P3656:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_intensity__P3656_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_intensity__P3656_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_152      
.jmpz960:
    ldr r0, _ldlit_194 ; _str112      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall961:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_152:
.afterif_1_152:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_2_152      
.jmpz962:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #56]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall963:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_152:
.afterif_3_152:
.ret.3656:
    @stackempty locals
    movs r0, #0
.final_4_152:
jacdac_Server_intensity__P3656_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(479,9): jacdac.Server.intensity
    ;
    .object jacdac_Server_intensity__P3655 "jacdac/routing.ts(479,9): jacdac.Server.intensity"
jacdac_Server_intensity__P3655_pre:
    .section code
    .balign 4
jacdac_Server_intensity__P3655_args:
    cmp r4, #1
    bge jacdac_Server_intensity__P3655_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_intensity__P3655_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_intensity__P3655:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_intensity__P3655_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_intensity__P3655_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #56]
.ret.3655:
    @stackempty locals
.final_0_153:
jacdac_Server_intensity__P3655_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(627,9): jacdac.Server.handleValue
    ;
    .object jacdac_Server_handleValue__P4177 "jacdac/routing.ts(627,9): jacdac.Server.handleValue"
jacdac_Server_handleValue__P4177_pre:
    .section code
    .balign 4
jacdac_Server_handleValue__P4177_args:
    cmp r4, #2
    bge jacdac_Server_handleValue__P4177_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handleValue__P4177_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleValue__P4177:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleValue__P4177_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleValue__P4177_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    movs r0, #5
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall964:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_value__P3658_nochk
_proccall965:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4177:
    @stackempty locals
    movs r0, #0
.final_0_154:
    add sp, #4*1 ; pop locals 1
jacdac_Server_handleValue__P4177_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(495,9): jacdac.Server.value
    ;
    .object jacdac_Server_value__P3658 "jacdac/routing.ts(495,9): jacdac.Server.value"
jacdac_Server_value__P3658_pre:
    .section code
    .balign 4
jacdac_Server_value__P3658_args:
    cmp r4, #2
    bge jacdac_Server_value__P3658_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_value__P3658_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_value__P3658:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_value__P3658_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_value__P3658_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_155      
.jmpz966:
    ldr r0, _ldlit_195 ; _str113      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall967:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_155:
.afterif_1_155:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_2_155      
.jmpz968:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #52]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall969:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_155:
.afterif_3_155:
.ret.3658:
    @stackempty locals
    movs r0, #0
.final_4_155:
jacdac_Server_value__P3658_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(491,9): jacdac.Server.value
    ;
    .object jacdac_Server_value__P3657 "jacdac/routing.ts(491,9): jacdac.Server.value"
jacdac_Server_value__P3657_pre:
    .section code
    .balign 4
jacdac_Server_value__P3657_args:
    cmp r4, #1
    bge jacdac_Server_value__P3657_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_value__P3657_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_value__P3657:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_value__P3657_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_value__P3657_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
.ret.3657:
    @stackempty locals
.final_0_156:
jacdac_Server_value__P3657_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(621,9): jacdac.Server.handleVariant
    ;
    .object jacdac_Server_handleVariant__P4176 "jacdac/routing.ts(621,9): jacdac.Server.handleVariant"
jacdac_Server_handleVariant__P4176_pre:
    .section code
    .balign 4
jacdac_Server_handleVariant__P4176_args:
    cmp r4, #2
    bge jacdac_Server_handleVariant__P4176_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handleVariant__P4176_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleVariant__P4176:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleVariant__P4176_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleVariant__P4176_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    movs r1, #0
    bl _cmp_neq
    beq .else_0_157      
.jmpz970:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    ldr r0, _ldlit_196 ; _str39      
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #15
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall971:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    b .afterif_1_157      
.else_0_157:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall972:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_157:
.ret.4176:
    @stackempty locals
    movs r0, #0
.final_2_157:
jacdac_Server_handleVariant__P4176_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(610,9): jacdac.Server.handleInstanceName
    ;
    .object jacdac_Server_handleInstanceName__P4175 "jacdac/routing.ts(610,9): jacdac.Server.handleInstanceName"
jacdac_Server_handleInstanceName__P4175_pre:
    .section code
    .balign 4
jacdac_Server_handleInstanceName__P4175_args:
    cmp r4, #2
    bge jacdac_Server_handleInstanceName__P4175_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handleInstanceName__P4175_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleInstanceName__P4175:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleInstanceName__P4175_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleInstanceName__P4175_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_158      
.jmpz973:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #112]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3, r4}
    push {r1}
    push {r2}
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #19
    push {r0} ; proc-arg
    push {r3}
    push {r4}
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall974:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    b .afterif_1_158      
.else_0_158:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall975:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_1_158:
.ret.4175:
    @stackempty locals
    movs r0, #0
.final_2_158:
jacdac_Server_handleInstanceName__P4175_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_192:
 .word _str99
_ldlit_193:
 .word 65537
_ldlit_194:
 .word _str112
_ldlit_195:
 .word _str113
_ldlit_196:
 .word _str39
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(601,9): jacdac.Server.handleStatusCode
    ;
    .object jacdac_Server_handleStatusCode__P4174 "jacdac/routing.ts(601,9): jacdac.Server.handleStatusCode"
jacdac_Server_handleStatusCode__P4174_pre:
    .section code
    .balign 4
jacdac_Server_handleStatusCode__P4174_args:
    cmp r4, #2
    bge jacdac_Server_handleStatusCode__P4174_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_handleStatusCode__P4174_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_handleStatusCode__P4174:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleStatusCode__P4174_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_handleStatusCode__P4174_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #116]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleRegFormat__P4181_nochk
_proccall976:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
.ret.4174:
    @stackempty locals
    movs r0, #0
.final_0_159:
jacdac_Server_handleStatusCode__P4174_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(666,9): jacdac.Server.handleRegFormat
    ;
    .object jacdac_Server_handleRegFormat__P4181 "jacdac/routing.ts(666,9): jacdac.Server.handleRegFormat"
jacdac_Server_handleRegFormat__P4181_pre:
    .section code
    .balign 4
jacdac_Server_handleRegFormat__P4181_args:
    cmp r4, #5
    bge jacdac_Server_handleRegFormat__P4181_nochk
    push {lr}
    bl _expand_args_5_55
    bl jacdac_Server_handleRegFormat__P4181_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
jacdac_Server_handleRegFormat__P4181:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleRegFormat__P4181_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleRegFormat__P4181_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall977:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_160      
.jmpz978:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_160      
.lazySkip_2_160:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_160:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_160      
.jmpz979:
    ldr r0, [sp, args@4]
    b .ret.4181      
.else_0_160:
.afterif_3_160:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall980:
    add sp, #4*1 ; pop locals 1
    movs r1, #31
    lsls r1, r1, #8
    adds r1, #255
    bl _numops_ands
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, args@2]
    bl _cmp_neq
    beq .else_4_160      
.jmpz981:
    ldr r0, [sp, args@4]
    b .ret.4181      
.else_4_160:
.afterif_5_160:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall982:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _cmp_eq
    beq .else_6_160      
.jmpz983:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall984:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_jdpacked__P3071
_proccall985:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall986:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_7_160      
.else_6_160:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _cmp_eq
    beq .else_8_160      
.jmpz987:
    ldr r0, [sp, args@4]
    b .ret.4181      
.else_8_160:
.afterif_9_160:
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P3099
_proccall988:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    bl jacdac_jdpackEqual__P3120
_proccall990:
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_160      
.jmpz989:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #40]
    @stackempty locals
    ldr r0, [sp, locals@2]
    str r0, [sp, args@4]
    @stackempty locals
.else_10_160:
.afterif_11_160:
.afterif_7_160:
    ldr r0, [sp, args@4]
.ret.4181:
    @stackempty locals
.final_12_160:
    add sp, #4*3 ; pop locals 3
jacdac_Server_handleRegFormat__P4181_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pack.ts(388,5): jacdac.jdpackEqual
    ;
    .object jacdac_jdpackEqual__P3120 "jacdac/pack.ts(388,5): jacdac.jdpackEqual"
jacdac_jdpackEqual__P3120_pre:
    .section code
    .balign 4
    .section code
jacdac_jdpackEqual__P3120:
jacdac_jdpackEqual__P3120_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_jdpackEqual__P3120_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_161      
.jmpz991:
    movs r0, #10
    b .ret.3120      
.else_0_161:
.afterif_1_161:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_161      
.jmpz992:
    movs r0, #66
    b .ret.3120      
.else_2_161:
.afterif_3_161:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall993:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall994:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl helpers_bufferEquals__P2776
_proccall995:
    add sp, #4*2 ; pop locals 2
.ret.3120:
    @stackempty locals
.final_4_161:
    add sp, #4*2 ; pop locals 2
jacdac_jdpackEqual__P3120_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(264,9): jacdac.JDPacket.isCommand
    ;
    .object jacdac_JDPacket_isCommand__P3104 "jacdac/packet.ts(264,9): jacdac.JDPacket.isCommand"
jacdac_JDPacket_isCommand__P3104_pre:
    .section code
    .balign 4
jacdac_JDPacket_isCommand__P3104_args:
    cmp r4, #1
    bge jacdac_JDPacket_isCommand__P3104_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_isCommand__P3104_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isCommand__P3104:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_isCommand__P3104_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isCommand__P3104_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #3
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3104:
    @stackempty locals
.final_0_162:
jacdac_JDPacket_isCommand__P3104_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(76,9): jacdac.EventSource.emit
    ;
    .object jacdac_EventSource_emit__P3778 "jacdac/eventsource.ts(76,9): jacdac.EventSource.emit"
jacdac_EventSource_emit__P3778_pre:
    .section code
    .balign 4
jacdac_EventSource_emit__P3778_args:
    cmp r4, #3
    bge jacdac_EventSource_emit__P3778_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_EventSource_emit__P3778_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_emit__P3778:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3774_validate_53
    mov lr, r7
jacdac_EventSource_emit__P3778_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_emit__P3778_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_163      
.jmpz996:
    movs r0, #10
    b .ret.3778      
.else_0_163:
.afterif_1_163:
    movs r0, #10
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.8513:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8513      
.jmpz997:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    bl _inst_jacdac_EventListener__C3771_validate_60
    ldr r0, [r0, #4]
    ldr r7, [r6, #0]
    ldr r1, [r7, #120]
    bl _cmp_eq
    beq .else_2_163      
.jmpz998:
    movs r0, #66
    str r0, [sp, locals@0]
    @stackempty locals
.else_2_163:
.afterif_3_163:
.cont.8513:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.8513      
.brk.8513:
    movs r0, #0
    str r0, [sp, locals@2]
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.8523:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.8523      
.jmpz999:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_EventListener__C3771_validate_60
    ldr r0, [r0, #4]
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_4_163      
.jmpz1000:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_EventListener__C3771_validate_60
    ldr r0, [r0, #8]
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_163      
.jmpz1001:
    ldr r0, _ldlit_198 ; _catch_8532      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_61
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_8_163      
_catch_8532:
    movs r0, #0
    str r0, [sp, locals@8]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@8]
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #120]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall1003:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.catchend_8_163:
    b .afterif_9_163      
.else_5_163:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_61
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_9_163:
.else_4_163:
.afterif_10_163:
.cont.8523:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.8523      
.brk.8523:
    movs r0, #0
    str r0, [sp, locals@5]
    movs r0, #66
.ret.3778:
    @stackempty locals
.final_11_163:
    add sp, #4*9 ; pop locals 9
jacdac_EventSource_emit__P3778_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(300,9): jacdac.JDPacket._sendReport
    ;
    .object jacdac_JDPacket__sendReport__P3109 "jacdac/packet.ts(300,9): jacdac.JDPacket._sendReport"
jacdac_JDPacket__sendReport__P3109_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendReport__P3109_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendReport__P3109_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket__sendReport__P3109_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendReport__P3109:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket__sendReport__P3109_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendReport__P3109_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_164      
.jmpz1005:
    b .ret.3109      
.else_0_164:
.afterif_1_164:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_deviceIdentifier__P3077_nochk
_proccall1006:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCore__P3108_nochk
_proccall1007:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3109:
    @stackempty locals
    movs r0, #0
.final_2_164:
jacdac_JDPacket__sendReport__P3109_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(153,9): jacdac.JDPacket.crc
    ;
    .object jacdac_JDPacket_crc__P3085 "jacdac/packet.ts(153,9): jacdac.JDPacket.crc"
jacdac_JDPacket_crc__P3085_pre:
    .section code
    .balign 4
jacdac_JDPacket_crc__P3085_args:
    cmp r4, #1
    bge jacdac_JDPacket_crc__P3085_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_crc__P3085_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_crc__P3085:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_crc__P3085_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_crc__P3085_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #4
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
.ret.3085:
    @stackempty locals
.final_0_165:
jacdac_JDPacket_crc__P3085_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(105,9): jacdac.Bus.selfDevice
    ;
    .object jacdac_Bus_selfDevice__P3617 "jacdac/routing.ts(105,9): jacdac.Bus.selfDevice"
jacdac_Bus_selfDevice__P3617_pre:
    .section code
    .balign 4
jacdac_Bus_selfDevice__P3617_args:
    cmp r4, #1
    bge jacdac_Bus_selfDevice__P3617_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_selfDevice__P3617_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_selfDevice__P3617:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_selfDevice__P3617_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_selfDevice__P3617_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_166      
.jmpz1008:
    ldr r0, _ldlit_199 ; jacdac_Device__C3724_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceLongSerialNumber
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_Device_constructor__P3728
_proccall1009:
    add sp, #4*3 ; pop locals 3
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #16]
    @stackempty locals
.else_0_166:
.afterif_1_166:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
.ret.3617:
    @stackempty locals
.final_2_166:
jacdac_Bus_selfDevice__P3617_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(139,9): jacdac.JDPacket.requiresAck
    ;
    .object jacdac_JDPacket_requiresAck__P3082 "jacdac/packet.ts(139,9): jacdac.JDPacket.requiresAck"
jacdac_JDPacket_requiresAck__P3082_pre:
    .section code
    .balign 4
jacdac_JDPacket_requiresAck__P3082_args:
    cmp r4, #2
    bge jacdac_JDPacket_requiresAck__P3082_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_requiresAck__P3082_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_requiresAck__P3082:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_requiresAck__P3082_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_requiresAck__P3082_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P3081_nochk
_proccall1011:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_0_167      
.jmpz1010:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    movs r1, #5
    bl _numops_eors
    push {r0} ; proc-arg
    bl _conv_36
    movs r1, #7
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_167:
.afterif_1_167:
.ret.3082:
    @stackempty locals
    movs r0, #0
.final_2_167:
jacdac_JDPacket_requiresAck__P3082_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(136,9): jacdac.JDPacket.requiresAck
    ;
    .object jacdac_JDPacket_requiresAck__P3081 "jacdac/packet.ts(136,9): jacdac.JDPacket.requiresAck"
jacdac_JDPacket_requiresAck__P3081_pre:
    .section code
    .balign 4
jacdac_JDPacket_requiresAck__P3081_args:
    cmp r4, #1
    bge jacdac_JDPacket_requiresAck__P3081_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_requiresAck__P3081_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_requiresAck__P3081:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_requiresAck__P3081_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_requiresAck__P3081_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_168      
.jmpz1012:
    movs r0, #66
    b .condexprfin_1_168      
.condexprz_0_168:
    movs r0, #10
.condexprfin_1_168:
; jmp value (already in r0)
.ret.3081:
    @stackempty locals
.final_2_168:
jacdac_JDPacket_requiresAck__P3081_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(126,9): jacdac.JDPacket.multicommandClass
    ;
    .object jacdac_JDPacket_multicommandClass__P3079 "jacdac/packet.ts(126,9): jacdac.JDPacket.multicommandClass"
jacdac_JDPacket_multicommandClass__P3079_pre:
    .section code
    .balign 4
jacdac_JDPacket_multicommandClass__P3079_args:
    cmp r4, #1
    bge jacdac_JDPacket_multicommandClass__P3079_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_multicommandClass__P3079_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_multicommandClass__P3079:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_multicommandClass__P3079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_multicommandClass__P3079_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #9
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_169      
.jmpz1013:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #11
    movs r2, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    b .ret.3079      
.else_0_169:
.afterif_1_169:
    movs r0, #0
.ret.3079:
    @stackempty locals
.final_2_169:
jacdac_JDPacket_multicommandClass__P3079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(384,5): jacdac.panic
    ;
    .object jacdac_panic__P3631 "jacdac/routing.ts(384,5): jacdac.panic"
jacdac_panic__P3631_pre:
    .section code
    .balign 4
    .section code
jacdac_panic__P3631:
jacdac_panic__P3631_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_panic__P3631_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl console_error__P2527
_proccall1014:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
    add sp, #4*1 ; pop locals 1
.ret.3631:
    @stackempty locals
    movs r0, #0
.final_0_170:
jacdac_panic__P3631_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(117,9): jacdac.JDPacket.deviceIdentifier
    ;
    .object jacdac_JDPacket_deviceIdentifier__P3077 "jacdac/packet.ts(117,9): jacdac.JDPacket.deviceIdentifier"
jacdac_JDPacket_deviceIdentifier__P3077_pre:
    .section code
    .balign 4
jacdac_JDPacket_deviceIdentifier__P3077_args:
    cmp r4, #2
    bge jacdac_JDPacket_deviceIdentifier__P3077_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_deviceIdentifier__P3077_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
.object PUSH
.balign 4
_ldlit_198:
 .word _catch_8532
_ldlit_199:
 .word jacdac_Device__C3724_VT
.object POP
    .section code
jacdac_JDPacket_deviceIdentifier__P3077:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_deviceIdentifier__P3077_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_deviceIdentifier__P3077_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl Buffer_fromHex__P2795
_proccall1015:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #17
    bl _cmp_eq
    beq .else_0_171      
.jmpz1016:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_47
    movs r1, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::write
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_171:
.afterif_1_171:
.ret.3077:
    @stackempty locals
    movs r0, #0
.final_2_171:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_deviceIdentifier__P3077_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(113,9): jacdac.JDPacket.deviceIdentifier
    ;
    .object jacdac_JDPacket_deviceIdentifier__P3076 "jacdac/packet.ts(113,9): jacdac.JDPacket.deviceIdentifier"
jacdac_JDPacket_deviceIdentifier__P3076_pre:
    .section code
    .balign 4
jacdac_JDPacket_deviceIdentifier__P3076_args:
    cmp r4, #1
    bge jacdac_JDPacket_deviceIdentifier__P3076_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_deviceIdentifier__P3076_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_deviceIdentifier__P3076:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_deviceIdentifier__P3076_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_deviceIdentifier__P3076_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #4
    movs r2, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
.ret.3076:
    @stackempty locals
.final_0_172:
jacdac_JDPacket_deviceIdentifier__P3076_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(147,9): jacdac.JDPacket.serviceIndex
    ;
    .object jacdac_JDPacket_serviceIndex__P3084 "jacdac/packet.ts(147,9): jacdac.JDPacket.serviceIndex"
jacdac_JDPacket_serviceIndex__P3084_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceIndex__P3084_args:
    cmp r4, #2
    bge jacdac_JDPacket_serviceIndex__P3084_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_serviceIndex__P3084_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_serviceIndex__P3084:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_serviceIndex__P3084_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceIndex__P3084_locals:
    ldr r0, [sp, args@1]
    movs r1, #6
    bl _cmp_eq
    beq .else_0_173      
.jmpz1017:
    ldr r0, _ldlit_201 ; _str29      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall1018:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_173:
.afterif_1_173:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #27
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #129
    bl _numops_ands
    ldr r1, [sp, args@1]
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_36
    movs r1, #27
    bl _pxt_buffer_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3084:
    @stackempty locals
    movs r0, #0
.final_2_173:
jacdac_JDPacket_serviceIndex__P3084_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(144,9): jacdac.JDPacket.serviceIndex
    ;
    .object jacdac_JDPacket_serviceIndex__P3083 "jacdac/packet.ts(144,9): jacdac.JDPacket.serviceIndex"
jacdac_JDPacket_serviceIndex__P3083_pre:
    .section code
    .balign 4
jacdac_JDPacket_serviceIndex__P3083_args:
    cmp r4, #1
    bge jacdac_JDPacket_serviceIndex__P3083_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_serviceIndex__P3083_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_serviceIndex__P3083:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_serviceIndex__P3083_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_serviceIndex__P3083_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #27
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #127
    bl _numops_ands
.ret.3083:
    @stackempty locals
.final_0_174:
jacdac_JDPacket_serviceIndex__P3083_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(65,9): jacdac.JDPacket.onlyHeader
    ;
    .object jacdac_JDPacket_onlyHeader__P3069 "jacdac/packet.ts(65,9): jacdac.JDPacket.onlyHeader"
jacdac_JDPacket_onlyHeader__P3069_pre:
    .section code
    .balign 4
jacdac_JDPacket_onlyHeader__P3069_args:
    cmp r4, #1
    bge jacdac_JDPacket_onlyHeader__P3069_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_onlyHeader__P3069_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_onlyHeader__P3069:
jacdac_JDPacket_onlyHeader__P3069_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_onlyHeader__P3069_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P3068
_proccall1019:
    add sp, #4*2 ; pop locals 2
.ret.3069:
    @stackempty locals
.final_0_175:
jacdac_JDPacket_onlyHeader__P3069_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1311,9): jacdac.RegQuery.constructor
    ;
    .object jacdac_RegQuery_constructor__P4288 "jacdac/routing.ts(1311,9): jacdac.RegQuery.constructor"
jacdac_RegQuery_constructor__P4288_pre:
    .section code
    .balign 4
    .section code
jacdac_RegQuery_constructor__P4288:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    mov lr, r7
jacdac_RegQuery_constructor__P4288_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegQuery_constructor__P4288_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #8]
    movs r0, #0
.ret.4288:
    @stackempty locals
.final_0_176:
jacdac_RegQuery_constructor__P4288_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1424,9): jacdac.Device.lookupQuery
    ;
    .object jacdac_Device_lookupQuery__P4290 "jacdac/routing.ts(1424,9): jacdac.Device.lookupQuery"
jacdac_Device_lookupQuery__P4290_pre:
    .section code
    .balign 4
jacdac_Device_lookupQuery__P4290_args:
    cmp r4, #3
    bge jacdac_Device_lookupQuery__P4290_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_Device_lookupQuery__P4290_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Device_lookupQuery__P4290:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_lookupQuery__P4290_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_lookupQuery__P4290_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_177      
.jmpz1020:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_177:
.afterif_1_177:
    movs r0, #2
    ldr r1, _ldlit_202 ; jacdac_Device_lookupQuery_inline__P8664_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2140
_proccall1021:
    add sp, #4*2 ; pop locals 2
.ret.4290:
    @stackempty locals
.final_2_177:
jacdac_Device_lookupQuery__P4290_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1426,38): jacdac.Device.lookupQuery.inline
    ;
    .object jacdac_Device_lookupQuery_inline__P8664 "jacdac/routing.ts(1426,38): jacdac.Device.lookupQuery.inline"
jacdac_Device_lookupQuery_inline__P8664_pre:
    .section code
    .balign 4
jacdac_Device_lookupQuery_inline__P8664_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_Device_lookupQuery_inline__P8664_args@fn
jacdac_Device_lookupQuery_inline__P8664_args:
    cmp r4, #1
    bge jacdac_Device_lookupQuery_inline__P8664_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Device_lookupQuery_inline__P8664_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Device_lookupQuery_inline__P8664:
jacdac_Device_lookupQuery_inline__P8664_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Device_lookupQuery_inline__P8664_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_178      
.jmpz1022:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_178      
.lazySkip_1_178:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_jacdac_RegQuery__C4287_validate_34
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_0_178:
; jmp value (already in r0)
.ret.8664:
    @stackempty locals
.final_2_178:
jacdac_Device_lookupQuery_inline__P8664_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1081,9): jacdac.Client.device
    ;
    .object jacdac_Client_device__P3706 "jacdac/routing.ts(1081,9): jacdac.Client.device"
jacdac_Client_device__P3706_pre:
    .section code
    .balign 4
jacdac_Client_device__P3706_args:
    cmp r4, #1
    bge jacdac_Client_device__P3706_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_device__P3706_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_device__P3706:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_device__P3706_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_device__P3706_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
.ret.3706:
    @stackempty locals
.final_0_179:
jacdac_Client_device__P3706_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(914,9): jacdac.RegisterClient.isConst
    ;
    .object jacdac_RegisterClient_isConst__P3679 "jacdac/routing.ts(914,9): jacdac.RegisterClient.isConst"
jacdac_RegisterClient_isConst__P3679_pre:
    .section code
    .balign 4
jacdac_RegisterClient_isConst__P3679_args:
    cmp r4, #1
    bge jacdac_RegisterClient_isConst__P3679_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_isConst__P3679_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_isConst__P3679:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_isConst__P3679_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_isConst__P3679_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    movs r1, #5
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3679:
    @stackempty locals
.final_0_180:
jacdac_RegisterClient_isConst__P3679_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1265,9): jacdac.Client.start
    ;
    .object jacdac_Client_start__P3720 "jacdac/routing.ts(1265,9): jacdac.Client.start"
jacdac_Client_start__P3720_pre:
    .section code
    .balign 4
jacdac_Client_start__P3720_args:
    cmp r4, #1
    bge jacdac_Client_start__P3720_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_start__P3720_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_start__P3720:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_start__P3720_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_start__P3720_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_181      
.jmpz1023:
    b .ret.3720      
.else_0_181:
.afterif_1_181:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    bl jacdac_start__P3759
_proccall1024:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_startClient__P3624
_proccall1025:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3720:
    @stackempty locals
    movs r0, #0
.final_2_181:
jacdac_Client_start__P3720_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(187,9): jacdac.Bus.startClient
    ;
    .object jacdac_Bus_startClient__P3624 "jacdac/routing.ts(187,9): jacdac.Bus.startClient"
jacdac_Bus_startClient__P3624_pre:
    .section code
    .balign 4
jacdac_Bus_startClient__P3624_args:
    cmp r4, #2
    bge jacdac_Bus_startClient__P3624_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_startClient__P3624_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_startClient__P3624:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_startClient__P3624_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_startClient__P3624_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3619_nochk
_proccall1026:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3624:
    @stackempty locals
    movs r0, #0
.final_0_182:
jacdac_Bus_startClient__P3624_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_201:
 .word _str29
_ldlit_202:
 .word jacdac_Device_lookupQuery_inline__P8664_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(226,9): modules.ServoClient.minAngle
    ;
    .object modules_ServoClient_minAngle__P3844 "jacdac-servo/client.ts(226,9): modules.ServoClient.minAngle"
modules_ServoClient_minAngle__P3844_pre:
    .section code
    .balign 4
modules_ServoClient_minAngle__P3844_args:
    cmp r4, #1
    bge modules_ServoClient_minAngle__P3844_nochk
    push {lr}
    bl _expand_args_1_2
    bl modules_ServoClient_minAngle__P3844_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ServoClient_minAngle__P3844:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_minAngle__P3844_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_minAngle__P3844_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1027:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #108]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3682
_proccall1028:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.3844:
    @stackempty locals
.final_0_183:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_minAngle__P3844_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(83,9): modules.ServoClient.angle
    ;
    .object modules_ServoClient_angle__P3836 "jacdac-servo/client.ts(83,9): modules.ServoClient.angle"
modules_ServoClient_angle__P3836_pre:
    .section code
    .balign 4
modules_ServoClient_angle__P3836_args:
    cmp r4, #1
    bge modules_ServoClient_angle__P3836_nochk
    push {lr}
    bl _expand_args_1_2
    bl modules_ServoClient_angle__P3836_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ServoClient_angle__P3836:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_angle__P3836_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_angle__P3836_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1029:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3682
_proccall1030:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
.ret.3836:
    @stackempty locals
.final_0_184:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_angle__P3836_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/math.ts(38,5): Math.map
    ;
    .object Math_map__P10 "core/math.ts(38,5): Math.map"
Math_map__P10_pre:
    .section code
    .balign 4
    .section code
Math_map__P10:
Math_map__P10_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_map__P10_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    ldr r1, [sp, args@3]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    ldr r1, [sp, args@1]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@3]
    bl _numops_adds
.ret.10:
    @stackempty locals
.final_0_185:
Math_map__P10_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/basic.ts(12,5): basic.showNumber
    ;
    .object basic_showNumber__P2370 "core/basic.ts(12,5): basic.showNumber"
basic_showNumber__P2370_pre:
    .section code
    .balign 4
    .section code
basic_showNumber__P2370:
basic_showNumber__P2370_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
basic_showNumber__P2370_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl isNaN__P2122
_proccall1032:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_186      
.jmpz1031:
    ldr r0, _ldlit_204 ; _str6      
    movs r1, #150
    mov r7, sp
    str r7, [r6, #4]
    bl basic::showString
    @stackempty locals
    b .afterif_1_186      
.else_0_186:
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_roundWithPrecision__P2161
_proccall1033:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl basic::showString
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_186:
.ret.2370:
    @stackempty locals
    movs r0, #0
.final_2_186:
basic_showNumber__P2370_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(580,5): Math.roundWithPrecision
    ;
    .object Math_roundWithPrecision__P2161 "core/pxt-helpers.ts(580,5): Math.roundWithPrecision"
Math_roundWithPrecision__P2161_pre:
    .section code
    .balign 4
    .section code
Math_roundWithPrecision__P2161:
Math_roundWithPrecision__P2161_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Math_roundWithPrecision__P2161_locals:
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _numops_orrs
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #1
    bl _cmp_le
    beq .else_0_187      
.jmpz1034:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    b .ret.2161      
.else_0_187:
.afterif_1_187:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_eq
    beq .else_2_187      
.jmpz1035:
    movs r0, #1
    b .ret.2161      
.else_2_187:
.afterif_3_187:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.cont.8777:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #21
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::pow
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::round
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_187      
.jmpz1036:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_187      
.lazySkip_5_187:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #43
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_4_187:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.8777      
.jmpz1037:
    b .cont.8777      
.brk.8777:
    ldr r0, [sp, locals@0]
.ret.2161:
    @stackempty locals
.final_6_187:
    add sp, #4*2 ; pop locals 2
Math_roundWithPrecision__P2161_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(103,5): fwdMotors.turn
    ;
    .object fwdMotors_turn__P3882 "driving.ts(103,5): fwdMotors.turn"
fwdMotors_turn__P3882_pre:
    .section code
    .balign 4
    .section code
fwdMotors_turn__P3882:
fwdMotors_turn__P3882_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_turn__P3882_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    push {r0} ; proc-arg
    movs r1, #241
    bl _ifacecall2__62
_proccall1038:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3882:
    @stackempty locals
    movs r0, #0
.final_0_188:
fwdMotors_turn__P3882_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(81,5): fwdMotors.drive
    ;
    .object fwdMotors_drive__P3880 "driving.ts(81,5): fwdMotors.drive"
fwdMotors_drive__P3880_pre:
    .section code
    .balign 4
    .section code
fwdMotors_drive__P3880:
fwdMotors_drive__P3880_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_drive__P3880_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    push {r0} ; proc-arg
    movs r1, #84
    bl _ifacecall3__1
_proccall1039:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3880:
    @stackempty locals
    movs r0, #0
.final_0_189:
fwdMotors_drive__P3880_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function blocks.ts(52,5): fwdMotors.conIsEnabled
    ;
    .object fwdMotors_conIsEnabled__P3876 "blocks.ts(52,5): fwdMotors.conIsEnabled"
fwdMotors_conIsEnabled__P3876_pre:
    .section code
    .balign 4
    .section code
fwdMotors_conIsEnabled__P3876:
fwdMotors_conIsEnabled__P3876_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_conIsEnabled__P3876_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_enabled__P3840
_proccall1040:
    add sp, #4*1 ; pop locals 1
.ret.3876:
    @stackempty locals
.final_0_190:
fwdMotors_conIsEnabled__P3876_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(172,9): modules.ServoClient.enabled
    ;
    .object modules_ServoClient_enabled__P3840 "jacdac-servo/client.ts(172,9): modules.ServoClient.enabled"
modules_ServoClient_enabled__P3840_pre:
    .section code
    .balign 4
modules_ServoClient_enabled__P3840_args:
    cmp r4, #1
    bge modules_ServoClient_enabled__P3840_nochk
    push {lr}
    bl _expand_args_1_2
    bl modules_ServoClient_enabled__P3840_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
modules_ServoClient_enabled__P3840:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_enabled__P3840_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_enabled__P3840_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1041:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    movs r0, #0
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_pauseUntilValues__P3682
_proccall1042:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3840:
    @stackempty locals
.final_0_191:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_enabled__P3840_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function blocks.ts(27,5): fwdMotors.setSpeed
    ;
    .object fwdMotors_setSpeed__P3874 "blocks.ts(27,5): fwdMotors.setSpeed"
fwdMotors_setSpeed__P3874_pre:
    .section code
    .balign 4
    .section code
fwdMotors_setSpeed__P3874:
fwdMotors_setSpeed__P3874_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_setSpeed__P3874_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1043:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3874:
    @stackempty locals
    movs r0, #0
.final_0_192:
fwdMotors_setSpeed__P3874_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function fwd-servo-base/client.ts(50,9): fwdBase.FwdServoClient.setSpeed
    ;
    .object fwdBase_FwdServoClient_setSpeed__P3868 "fwd-servo-base/client.ts(50,9): fwdBase.FwdServoClient.setSpeed"
fwdBase_FwdServoClient_setSpeed__P3868_pre:
    .section code
    .balign 4
fwdBase_FwdServoClient_setSpeed__P3868_args:
    cmp r4, #2
    bge fwdBase_FwdServoClient_setSpeed__P3868_nochk
    push {lr}
    bl _expand_args_2_5
    bl fwdBase_FwdServoClient_setSpeed__P3868_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
fwdBase_FwdServoClient_setSpeed__P3868:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_fwdBase_FwdServoClient__C3860_validate_3
    mov lr, r7
fwdBase_FwdServoClient_setSpeed__P3868_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdBase_FwdServoClient_setSpeed__P3868_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_minAngle__P3844_nochk
_proccall1044:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_maxAngle__P3847_nochk
_proccall1045:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    movs r0, #201
    push {r0} ; proc-arg
    movs r0, #199
    negs r0, r0
    push {r0} ; proc-arg
    push {r3}
    bl Math_map__P10
_proccall1046:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1047:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3868:
    @stackempty locals
    movs r0, #0
.final_0_193:
fwdBase_FwdServoClient_setSpeed__P3868_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function fwd-servo-base/client.ts(25,9): fwdBase.FwdServoClient.setAngle
    ;
    .object fwdBase_FwdServoClient_setAngle__P3865 "fwd-servo-base/client.ts(25,9): fwdBase.FwdServoClient.setAngle"
fwdBase_FwdServoClient_setAngle__P3865_pre:
    .section code
    .balign 4
fwdBase_FwdServoClient_setAngle__P3865_args:
    cmp r4, #2
    bge fwdBase_FwdServoClient_setAngle__P3865_nochk
    push {lr}
    bl _expand_args_2_5
    bl fwdBase_FwdServoClient_setAngle__P3865_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
fwdBase_FwdServoClient_setAngle__P3865:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_fwdBase_FwdServoClient__C3860_validate_3
    mov lr, r7
fwdBase_FwdServoClient_setAngle__P3865_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdBase_FwdServoClient_setAngle__P3865_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_enabled__P3840_nochk
_proccall1049:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_194      
.jmpz1048:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #48
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1050:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_194:
.afterif_1_194:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_setAngle__P3837
_proccall1051:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3865:
    @stackempty locals
    movs r0, #0
.final_2_194:
fwdBase_FwdServoClient_setAngle__P3865_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(98,9): modules.ServoClient.setAngle
    ;
    .object modules_ServoClient_setAngle__P3837 "jacdac-servo/client.ts(98,9): modules.ServoClient.setAngle"
modules_ServoClient_setAngle__P3837_pre:
    .section code
    .balign 4
modules_ServoClient_setAngle__P3837_args:
    cmp r4, #2
    bge modules_ServoClient_setAngle__P3837_nochk
    push {lr}
    bl _expand_args_2_5
    bl modules_ServoClient_setAngle__P3837_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_setAngle__P3837:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_setAngle__P3837_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_setAngle__P3837_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_internalSetAngle__P4343_nochk
_proccall1052:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_internalSetContinuous__P4344_nochk
_proccall1053:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3837:
    @stackempty locals
    movs r0, #0
    b .final_0_195      
.object PUSH
.balign 4
_ldlit_204:
 .word _str6
.object POP
.final_0_195:
modules_ServoClient_setAngle__P3837_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(113,9): modules.ServoClient.internalSetContinuous
    ;
    .object modules_ServoClient_internalSetContinuous__P4344 "jacdac-servo/client.ts(113,9): modules.ServoClient.internalSetContinuous"
modules_ServoClient_internalSetContinuous__P4344_pre:
    .section code
    .balign 4
modules_ServoClient_internalSetContinuous__P4344_args:
    cmp r4, #2
    bge modules_ServoClient_internalSetContinuous__P4344_nochk
    push {lr}
    bl _expand_args_2_5
    bl modules_ServoClient_internalSetContinuous__P4344_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_internalSetContinuous__P4344:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_internalSetContinuous__P4344_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_internalSetContinuous__P4344_locals:
    ldr r0, [sp, args@0]
    movs r3, #132
    ldr r0, [r0, r3]
    ldr r1, [sp, args@1]
    bl _cmp_neqq
    beq .else_0_196      
.jmpz1054:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    movs r3, #132
    str r1, [r0, r3]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_196      
.jmpz1055:
    ldr r0, _ldlit_206 ; _str152      
    b .condexprfin_2_196      
.condexprz_1_196:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_2_196:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, _ldlit_207 ; _str65      
    push {r0} ; proc-arg
    movs r0, #19
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_setReg__P3718_nochk
_proccall1056:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.else_0_196:
.afterif_3_196:
.ret.4344:
    @stackempty locals
    movs r0, #0
.final_4_196:
modules_ServoClient_internalSetContinuous__P4344_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1224,9): jacdac.Client.setReg
    ;
    .object jacdac_Client_setReg__P3718 "jacdac/routing.ts(1224,9): jacdac.Client.setReg"
jacdac_Client_setReg__P3718_pre:
    .section code
    .balign 4
jacdac_Client_setReg__P3718_args:
    cmp r4, #4
    bge jacdac_Client_setReg__P3718_nochk
    push {lr}
    bl _expand_args_4_32
    bl jacdac_Client_setReg__P3718_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Client_setReg__P3718:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_setReg__P3718_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Client_setReg__P3718_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1057:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    mov r3, r0
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_jdpacked__P3071
_proccall1058:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_ClientPacketQueue_send__P4279
_proccall1059:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3718:
    @stackempty locals
    movs r0, #0
.final_0_197:
    add sp, #4*1 ; pop locals 1
jacdac_Client_setReg__P3718_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(847,9): jacdac.ClientPacketQueue.send
    ;
    .object jacdac_ClientPacketQueue_send__P4279 "jacdac/routing.ts(847,9): jacdac.ClientPacketQueue.send"
jacdac_ClientPacketQueue_send__P4279_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_send__P4279_args:
    cmp r4, #2
    bge jacdac_ClientPacketQueue_send__P4279_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_ClientPacketQueue_send__P4279_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ClientPacketQueue_send__P4279:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C4276_validate_46
    mov lr, r7
jacdac_ClientPacketQueue_send__P4279_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ClientPacketQueue_send__P4279_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegSet__P3091
_proccall1061:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_198      
.jmpz1060:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_198      
.lazySkip_2_198:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.lazy_1_198:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_198      
.jmpz1062:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_ClientPacketQueue_updateQueue__P4277_nochk
_proccall1063:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_198:
.afterif_3_198:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_Client_sendCommand__P3716
_proccall1064:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4279:
    @stackempty locals
    movs r0, #0
.final_4_198:
jacdac_ClientPacketQueue_send__P4279_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(832,9): jacdac.ClientPacketQueue.updateQueue
    ;
    .object jacdac_ClientPacketQueue_updateQueue__P4277 "jacdac/routing.ts(832,9): jacdac.ClientPacketQueue.updateQueue"
jacdac_ClientPacketQueue_updateQueue__P4277_pre:
    .section code
    .balign 4
jacdac_ClientPacketQueue_updateQueue__P4277_args:
    cmp r4, #2
    bge jacdac_ClientPacketQueue_updateQueue__P4277_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_ClientPacketQueue_updateQueue__P4277_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ClientPacketQueue_updateQueue__P4277:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C4276_validate_46
    mov lr, r7
jacdac_ClientPacketQueue_updateQueue__P4277_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ClientPacketQueue_updateQueue__P4277_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1065:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.8910:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.8910      
.jmpz1066:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #4
    movs r2, #2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_0_199      
.jmpz1067:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_withFrameStripped__P3101
_proccall1068:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .ret.4277      
.else_0_199:
.afterif_1_199:
.cont.8910:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.8910      
.brk.8910:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_withFrameStripped__P3101
_proccall1069:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4277:
    @stackempty locals
    movs r0, #0
.final_2_199:
    add sp, #4*2 ; pop locals 2
jacdac_ClientPacketQueue_updateQueue__P4277_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(252,9): jacdac.JDPacket.withFrameStripped
    ;
    .object jacdac_JDPacket_withFrameStripped__P3101 "jacdac/packet.ts(252,9): jacdac.JDPacket.withFrameStripped"
jacdac_JDPacket_withFrameStripped__P3101_pre:
    .section code
    .balign 4
jacdac_JDPacket_withFrameStripped__P3101_args:
    cmp r4, #1
    bge jacdac_JDPacket_withFrameStripped__P3101_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_withFrameStripped__P3101_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_withFrameStripped__P3101:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_withFrameStripped__P3101_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_withFrameStripped__P3101_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #12
    movs r2, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferConcat__P2775
_proccall1070:
    add sp, #4*2 ; pop locals 2
.ret.3101:
    @stackempty locals
.final_0_200:
jacdac_JDPacket_withFrameStripped__P3101_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(185,9): jacdac.JDPacket.isRegSet
    ;
    .object jacdac_JDPacket_isRegSet__P3091 "jacdac/packet.ts(185,9): jacdac.JDPacket.isRegSet"
jacdac_JDPacket_isRegSet__P3091_pre:
    .section code
    .balign 4
jacdac_JDPacket_isRegSet__P3091_args:
    cmp r4, #1
    bge jacdac_JDPacket_isRegSet__P3091_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_isRegSet__P3091_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_isRegSet__P3091:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_isRegSet__P3091_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_isRegSet__P3091_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall1071:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #25
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.3091:
    @stackempty locals
.final_0_201:
jacdac_JDPacket_isRegSet__P3091_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(103,9): modules.ServoClient.internalSetAngle
    ;
    .object modules_ServoClient_internalSetAngle__P4343 "jacdac-servo/client.ts(103,9): modules.ServoClient.internalSetAngle"
modules_ServoClient_internalSetAngle__P4343_pre:
    .section code
    .balign 4
modules_ServoClient_internalSetAngle__P4343_args:
    cmp r4, #2
    bge modules_ServoClient_internalSetAngle__P4343_nochk
    push {lr}
    bl _expand_args_2_5
    bl modules_ServoClient_internalSetAngle__P4343_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_internalSetAngle__P4343:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_internalSetAngle__P4343_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_internalSetAngle__P4343_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1072:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #48
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1073:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3683
_proccall1074:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    bne .jmpz1075
    b .else_0_202      
.object PUSH
.balign 4
_ldlit_206:
 .word _str152
_ldlit_207:
 .word _str65
.object POP
.jmpz1075:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #96]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3684
_proccall1076:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_202:
.afterif_1_202:
.ret.4343:
    @stackempty locals
    movs r0, #0
.final_2_202:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_internalSetAngle__P4343_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(961,9): jacdac.RegisterClient.values
    ;
    .object jacdac_RegisterClient_values__P3684 "jacdac/routing.ts(961,9): jacdac.RegisterClient.values"
jacdac_RegisterClient_values__P3684_pre:
    .section code
    .balign 4
jacdac_RegisterClient_values__P3684_args:
    cmp r4, #2
    bge jacdac_RegisterClient_values__P3684_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_RegisterClient_values__P3684_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_RegisterClient_values__P3684:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_values__P3684_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_RegisterClient_values__P3684_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl jacdac_Client_start__P3720
_proccall1077:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdpack__P3119
_proccall1078:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_203      
.jmpz1079:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_203      
.lazySkip_1_203:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_203:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_203      
.jmpz1080:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_203      
.lazySkip_3_203:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl helpers_bufferEquals__P2776
_proccall1081:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_2_203:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_203      
.jmpz1082:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Client_setRegBuffer__P3719
_proccall1083:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall1084:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_203:
.afterif_5_203:
.ret.3684:
    @stackempty locals
    movs r0, #0
.final_6_203:
    add sp, #4*2 ; pop locals 2
jacdac_RegisterClient_values__P3684_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1230,9): jacdac.Client.setRegBuffer
    ;
    .object jacdac_Client_setRegBuffer__P3719 "jacdac/routing.ts(1230,9): jacdac.Client.setRegBuffer"
jacdac_Client_setRegBuffer__P3719_pre:
    .section code
    .balign 4
jacdac_Client_setRegBuffer__P3719_args:
    cmp r4, #3
    bge jacdac_Client_setRegBuffer__P3719_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_Client_setRegBuffer__P3719_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Client_setRegBuffer__P3719:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_setRegBuffer__P3719_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_setRegBuffer__P3719_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1085:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    movs r0, #64
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_orrs
    mov r3, r0
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P3068
_proccall1086:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_ClientPacketQueue_send__P4279
_proccall1087:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3719:
    @stackempty locals
    movs r0, #0
.final_0_204:
jacdac_Client_setRegBuffer__P3719_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(185,9): modules.ServoClient.setEnabled
    ;
    .object modules_ServoClient_setEnabled__P3841 "jacdac-servo/client.ts(185,9): modules.ServoClient.setEnabled"
modules_ServoClient_setEnabled__P3841_pre:
    .section code
    .balign 4
modules_ServoClient_setEnabled__P3841_args:
    cmp r4, #2
    bge modules_ServoClient_setEnabled__P3841_nochk
    push {lr}
    bl _expand_args_2_5
    bl modules_ServoClient_setEnabled__P3841_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
modules_ServoClient_setEnabled__P3841:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_setEnabled__P3841_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
modules_ServoClient_setEnabled__P3841_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_start__P3720_nochk
_proccall1088:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3683
_proccall1089:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neqq
    add sp, #4*2 ; pop locals 2
    beq .else_0_205      
.jmpz1090:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_1_205      
.jmpz1091:
    movs r0, #3
    b .condexprfin_2_205      
.condexprz_1_205:
    movs r0, #1
.condexprfin_2_205:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #100]
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3684
_proccall1092:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_205:
.afterif_3_205:
.ret.3841:
    @stackempty locals
    movs r0, #0
.final_4_205:
    add sp, #4*1 ; pop locals 1
modules_ServoClient_setEnabled__P3841_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function fwd-servo-base/client.ts(14,9): fwdBase.FwdServoClient.setEnabled
    ;
    .object fwdBase_FwdServoClient_setEnabled__P3863 "fwd-servo-base/client.ts(14,9): fwdBase.FwdServoClient.setEnabled"
fwdBase_FwdServoClient_setEnabled__P3863_pre:
    .section code
    .balign 4
fwdBase_FwdServoClient_setEnabled__P3863_args:
    cmp r4, #2
    bge fwdBase_FwdServoClient_setEnabled__P3863_nochk
    push {lr}
    bl _expand_args_2_5
    bl fwdBase_FwdServoClient_setEnabled__P3863_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
fwdBase_FwdServoClient_setEnabled__P3863:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_fwdBase_FwdServoClient__C3860_validate_3
    mov lr, r7
fwdBase_FwdServoClient_setEnabled__P3863_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdBase_FwdServoClient_setEnabled__P3863_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_setEnabled__P3841
_proccall1093:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1094:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3863:
    @stackempty locals
    movs r0, #0
.final_0_206:
fwdBase_FwdServoClient_setEnabled__P3863_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function blocks.ts(11,5): fwdMotors.conSetEnabled
    ;
    .object fwdMotors_conSetEnabled__P3873 "blocks.ts(11,5): fwdMotors.conSetEnabled"
fwdMotors_conSetEnabled__P3873_pre:
    .section code
    .balign 4
    .section code
fwdMotors_conSetEnabled__P3873:
fwdMotors_conSetEnabled__P3873_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_conSetEnabled__P3873_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #48
    bl _classCall_fwdBase_FwdServoClient__C3860_63
_proccall1095:
    add sp, #4*2 ; pop locals 2
.ret.3873:
    @stackempty locals
    movs r0, #0
.final_0_207:
fwdMotors_conSetEnabled__P3873_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function fwd-servo-base/client.ts(4,9): fwdBase.FwdServoClient.constructor
    ;
    .object fwdBase_FwdServoClient_constructor__P3861 "fwd-servo-base/client.ts(4,9): fwdBase.FwdServoClient.constructor"
fwdBase_FwdServoClient_constructor__P3861_pre:
    .section code
    .balign 4
    .section code
fwdBase_FwdServoClient_constructor__P3861:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_fwdBase_FwdServoClient__C3860_validate_3
    mov lr, r7
fwdBase_FwdServoClient_constructor__P3861_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdBase_FwdServoClient_constructor__P3861_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    ldr r0, [sp, args@0]
    movs r1, #0
    movs r3, #132
    str r1, [r0, r3]
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl modules_ServoClient_constructor__P3835
_proccall1096:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3861:
    @stackempty locals
.final_0_208:
fwdBase_FwdServoClient_constructor__P3861_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(21,9): modules.ServoClient.constructor
    ;
    .object modules_ServoClient_constructor__P3835 "jacdac-servo/client.ts(21,9): modules.ServoClient.constructor"
modules_ServoClient_constructor__P3835_pre:
    .section code
    .balign 4
    .section code
modules_ServoClient_constructor__P3835:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_modules_ServoClient__C3834_validate_4
    mov lr, r7
modules_ServoClient_constructor__P3835_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_constructor__P3835_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    ldr r0, [sp, args@0]
    movs r1, #0
    movs r3, #132
    str r1, [r0, r3]
    ldr r7, [r6, #0]
    ldr r0, [r7, #124]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, _ldlit_209 ; 637084167      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SimpleSensorClient_constructor__P3423
_proccall1097:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #128
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1098:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #96]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #132
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1099:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #100]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #136
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1100:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #104]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #140
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #33
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1101:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #108]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #144
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1102:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #112]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #5
    push {r0} ; proc-arg
    movs r0, #148
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #35
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1103:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #116]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #152
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #11
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1104:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #120]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #156
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1105:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #124]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    movs r0, #160
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1106:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    movs r3, #128
    str r1, [r0, r3]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_210 ; modules_ServoClient_inline__P9168_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3776_nochk
_proccall1107:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3835:
    @stackempty locals
.final_0_209:
modules_ServoClient_constructor__P3835_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac-servo/client.ts(69,37): modules.ServoClient.inline
    ;
    .object modules_ServoClient_inline__P9168 "jacdac-servo/client.ts(69,37): modules.ServoClient.inline"
modules_ServoClient_inline__P9168_pre:
    .section code
    .balign 4
modules_ServoClient_inline__P9168_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word modules_ServoClient_inline__P9168_args@fn
modules_ServoClient_inline__P9168_args:
    .section code
modules_ServoClient_inline__P9168:
modules_ServoClient_inline__P9168_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
modules_ServoClient_inline__P9168_locals:
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #108]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_query__P3681
_proccall1108:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*3]
    ldr r0, [r0, #116]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_query__P3681
_proccall1109:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.9168:
    @stackempty locals
    movs r0, #0
.final_0_210:
modules_ServoClient_inline__P9168_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(22,9): jacdac.EventSource.on
    ;
    .object jacdac_EventSource_on__P3776 "jacdac/eventsource.ts(22,9): jacdac.EventSource.on"
jacdac_EventSource_on__P3776_pre:
    .section code
    .balign 4
jacdac_EventSource_on__P3776_args:
    cmp r4, #3
    bge jacdac_EventSource_on__P3776_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_EventSource_on__P3776_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_on__P3776:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3774_validate_53
    mov lr, r7
jacdac_EventSource_on__P3776_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_EventSource_on__P3776_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_addListenerInternal__P4164_nochk
_proccall1110:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
.ret.3776:
    @stackempty locals
.final_0_211:
jacdac_EventSource_on__P3776_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(32,9): jacdac.EventSource.addListenerInternal
    ;
    .object jacdac_EventSource_addListenerInternal__P4164 "jacdac/eventsource.ts(32,9): jacdac.EventSource.addListenerInternal"
jacdac_EventSource_addListenerInternal__P4164_pre:
    .section code
    .balign 4
jacdac_EventSource_addListenerInternal__P4164_args:
    cmp r4, #3
    bge jacdac_EventSource_addListenerInternal__P4164_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_EventSource_addListenerInternal__P4164_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_EventSource_addListenerInternal__P4164:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventSource__C3774_validate_53
    mov lr, r7
jacdac_EventSource_addListenerInternal__P4164_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_EventSource_addListenerInternal__P4164_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_212      
.jmpz1111:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_212      
.lazySkip_2_212:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_212:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_212      
.jmpz1112:
    b .ret.4164      
.else_0_212:
.afterif_3_212:
    movs r0, #2
    ldr r1, _ldlit_211 ; previous_inline__P9191_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2140
_proccall1113:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_212      
.jmpz1114:
    b .ret.4164      
    b .afterif_5_212      
.object PUSH
.balign 4
_ldlit_209:
 .word 637084167
_ldlit_210:
 .word modules_ServoClient_inline__P9168_Lit
_ldlit_211:
 .word previous_inline__P9191_Lit
.object POP
.else_4_212:
.afterif_5_212:
    ldr r0, _ldlit_213 ; jacdac_EventListener__C3771_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_EventListener_constructor__P3772
_proccall1115:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4164:
    @stackempty locals
    movs r0, #0
.final_6_212:
    add sp, #4*2 ; pop locals 2
jacdac_EventSource_addListenerInternal__P4164_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(39,17): previous.inline
    ;
    .object previous_inline__P9191 "jacdac/eventsource.ts(39,17): previous.inline"
previous_inline__P9191_pre:
    .section code
    .balign 4
previous_inline__P9191_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word previous_inline__P9191_args@fn
previous_inline__P9191_args:
    cmp r4, #1
    bge previous_inline__P9191_nochk
    push {lr}
    bl _expand_args_1_2
    bl previous_inline__P9191_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
previous_inline__P9191:
previous_inline__P9191_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
previous_inline__P9191_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_EventListener__C3771_validate_60
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_213      
.jmpz1116:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_213      
.lazySkip_1_213:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    bl _inst_jacdac_EventListener__C3771_validate_60
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.lazy_0_213:
; jmp value (already in r0)
.ret.9191:
    @stackempty locals
.final_2_213:
previous_inline__P9191_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/eventsource.ts(6,9): jacdac.EventListener.constructor
    ;
    .object jacdac_EventListener_constructor__P3772 "jacdac/eventsource.ts(6,9): jacdac.EventListener.constructor"
jacdac_EventListener_constructor__P3772_pre:
    .section code
    .balign 4
    .section code
jacdac_EventListener_constructor__P3772:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_EventListener__C3771_validate_60
    mov lr, r7
jacdac_EventListener_constructor__P3772_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_EventListener_constructor__P3772_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #4]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    movs r0, #0
.ret.3772:
    @stackempty locals
.final_0_214:
jacdac_EventListener_constructor__P3772_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1092,9): jacdac.Client.addRegister
    ;
    .object jacdac_Client_addRegister__P4166 "jacdac/routing.ts(1092,9): jacdac.Client.addRegister"
jacdac_Client_addRegister__P4166_pre:
    .section code
    .balign 4
jacdac_Client_addRegister__P4166_args:
    cmp r4, #5
    bge jacdac_Client_addRegister__P4166_nochk
    push {lr}
    bl _expand_args_5_55
    bl jacdac_Client_addRegister__P4166_nochk
    @dummystack 5
    add sp, #4*5
    pop {pc}
    .section code
jacdac_Client_addRegister__P4166:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_addRegister__P4166_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Client_addRegister__P4166_locals:
    movs r0, #1
    ldr r1, _ldlit_214 ; reg_inline__P9226_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFind__P2140
_proccall1117:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_215      
.jmpz1118:
    ldr r0, _ldlit_215 ; jacdac_RegisterClient__C3673_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*5] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_RegisterClient_constructor__P3675
_proccall1119:
    add sp, #4*6 ; pop locals 6
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_215:
.afterif_1_215:
    ldr r0, [sp, locals@0]
.ret.4166:
    @stackempty locals
.final_2_215:
    add sp, #4*1 ; pop locals 1
jacdac_Client_addRegister__P4166_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1098,43): reg.inline
    ;
    .object reg_inline__P9226 "jacdac/routing.ts(1098,43): reg.inline"
reg_inline__P9226_pre:
    .section code
    .balign 4
reg_inline__P9226_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word reg_inline__P9226_args@fn
reg_inline__P9226_args:
    cmp r4, #1
    bge reg_inline__P9226_nochk
    push {lr}
    bl _expand_args_1_2
    bl reg_inline__P9226_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
reg_inline__P9226:
reg_inline__P9226_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
reg_inline__P9226_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*2 ; pop locals 2
.ret.9226:
    @stackempty locals
.final_0_216:
reg_inline__P9226_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(886,9): jacdac.RegisterClient.constructor
    ;
    .object jacdac_RegisterClient_constructor__P3675 "jacdac/routing.ts(886,9): jacdac.RegisterClient.constructor"
jacdac_RegisterClient_constructor__P3675_pre:
    .section code
    .balign 4
    .section code
jacdac_RegisterClient_constructor__P3675:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_constructor__P3675_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_constructor__P3675_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3775
_proccall1120:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@4]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_217      
.jmpz1121:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_217      
.lazySkip_1_217:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_217:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #16]
    @stackempty locals
    ldr r0, [sp, args@5]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_217      
.jmpz1122:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r3, r0
    ldr r0, [sp, args@5]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdpack__P3119
_proccall1123:
    add sp, #4*2 ; pop locals 2
    b .condexprfin_3_217      
.condexprz_2_217:
    movs r0, #0
.condexprfin_3_217:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #8]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.3675:
    @stackempty locals
.final_4_217:
jacdac_RegisterClient_constructor__P3675_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(99,9): jacdac.SimpleSensorClient.constructor
    ;
    .object jacdac_SimpleSensorClient_constructor__P3423 "jacdac/sensor/client.ts(99,9): jacdac.SimpleSensorClient.constructor"
jacdac_SimpleSensorClient_constructor__P3423_pre:
    .section code
    .balign 4
    .section code
jacdac_SimpleSensorClient_constructor__P3423:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SimpleSensorClient__C3422_validate_64
    mov lr, r7
jacdac_SimpleSensorClient_constructor__P3423_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SimpleSensorClient_constructor__P3423_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #92]
    movs r0, #201
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_constructor__P3418
_proccall1124:
    add sp, #4*5 ; pop locals 5
    @stackempty locals
    movs r0, #0
.ret.3423:
    @stackempty locals
.final_0_218:
jacdac_SimpleSensorClient_constructor__P3423_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_213:
 .word jacdac_EventListener__C3771_VT
_ldlit_214:
 .word reg_inline__P9226_Lit
_ldlit_215:
 .word jacdac_RegisterClient__C3673_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(14,9): jacdac.SensorClient.constructor
    ;
    .object jacdac_SensorClient_constructor__P3418 "jacdac/sensor/client.ts(14,9): jacdac.SensorClient.constructor"
jacdac_SensorClient_constructor__P3418_pre:
    .section code
    .balign 4
    .section code
jacdac_SensorClient_constructor__P3418:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3416_validate_65
    mov lr, r7
jacdac_SensorClient_constructor__P3418_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_constructor__P3418_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #72]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #76]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #80]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #84]
    ldr r0, [sp, args@0]
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    str r1, [r0, #88]
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_constructor__P3702
_proccall1125:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, [sp, args@3]
    push {r0} ; proc-arg
    movs r0, #2
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1126:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    movs r0, #164
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #7
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1127:
    add sp, #4*5 ; pop locals 5
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #64]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    movs r0, #168
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #9
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Client_addRegister__P4166_nochk
_proccall1128:
    add sp, #4*5 ; pop locals 5
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #68]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_217 ; jacdac_SensorClient_inline__P9315_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #60]
    mov r3, r0
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #64]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_EventSource_on__P3776
_proccall1129:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_218 ; jacdac_SensorClient_inline__P9327_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #68]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_EventSource_on__P3776
_proccall1130:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3418:
    @stackempty locals
.final_0_219:
jacdac_SensorClient_constructor__P3418_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(37,46): jacdac.SensorClient.inline
    ;
    .object jacdac_SensorClient_inline__P9315 "jacdac/sensor/client.ts(37,46): jacdac.SensorClient.inline"
jacdac_SensorClient_inline__P9315_pre:
    .section code
    .balign 4
jacdac_SensorClient_inline__P9315_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_SensorClient_inline__P9315_args@fn
jacdac_SensorClient_inline__P9315_args:
    .section code
jacdac_SensorClient_inline__P9315:
jacdac_SensorClient_inline__P9315_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_inline__P9315_locals:
    ldr r0, [r5, #4*3]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #72]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #80]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.9315:
    @stackempty locals
    movs r0, #0
.final_0_220:
jacdac_SensorClient_inline__P9315_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(41,54): jacdac.SensorClient.inline
    ;
    .object jacdac_SensorClient_inline__P9327 "jacdac/sensor/client.ts(41,54): jacdac.SensorClient.inline"
jacdac_SensorClient_inline__P9327_pre:
    .section code
    .balign 4
jacdac_SensorClient_inline__P9327_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_SensorClient_inline__P9327_args@fn
jacdac_SensorClient_inline__P9327_args:
    .section code
jacdac_SensorClient_inline__P9327:
jacdac_SensorClient_inline__P9327_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_inline__P9327_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_updateSamples__P4227_nochk
_proccall1131:
    add sp, #4*1 ; pop locals 1
.ret.9327:
    @stackempty locals
    movs r0, #0
.final_0_221:
jacdac_SensorClient_inline__P9327_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(44,9): jacdac.SensorClient.updateSamples
    ;
    .object jacdac_SensorClient_updateSamples__P4227 "jacdac/sensor/client.ts(44,9): jacdac.SensorClient.updateSamples"
jacdac_SensorClient_updateSamples__P4227_pre:
    .section code
    .balign 4
jacdac_SensorClient_updateSamples__P4227_args:
    cmp r4, #1
    bge jacdac_SensorClient_updateSamples__P4227_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_SensorClient_updateSamples__P4227_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SensorClient_updateSamples__P4227:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3416_validate_65
    mov lr, r7
jacdac_SensorClient_updateSamples__P4227_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_updateSamples__P4227_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3683
_proccall1133:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_222      
.jmpz1132:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_222      
.lazySkip_1_222:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_222:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #72]
    @stackempty locals
.ret.4227:
    @stackempty locals
    movs r0, #0
.final_2_222:
jacdac_SensorClient_updateSamples__P4227_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1054,9): jacdac.Client.constructor
    ;
    .object jacdac_Client_constructor__P3702 "jacdac/routing.ts(1054,9): jacdac.Client.constructor"
jacdac_Client_constructor__P3702_pre:
    .section code
    .balign 4
    .section code
jacdac_Client_constructor__P3702:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_constructor__P3702_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_constructor__P3702_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #56]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #36]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3775
_proccall1134:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_223      
.jmpz1135:
    ldr r0, _ldlit_219 ; _str123      
    push {r0} ; proc-arg
    bl jacdac_panic__P3631
_proccall1136:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_223:
.afterif_1_223:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl control_allocateEventSource__P2488
_proccall1137:
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_220 ; jacdac_ClientPacketQueue__C4276_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_ClientPacketQueue_constructor__P4281
_proccall1138:
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #44]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #52]
    @stackempty locals
    movs r0, #0
.ret.3702:
    @stackempty locals
.final_2_223:
jacdac_Client_constructor__P3702_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(830,9): jacdac.ClientPacketQueue.constructor
    ;
    .object jacdac_ClientPacketQueue_constructor__P4281 "jacdac/routing.ts(830,9): jacdac.ClientPacketQueue.constructor"
jacdac_ClientPacketQueue_constructor__P4281_pre:
    .section code
    .balign 4
    .section code
jacdac_ClientPacketQueue_constructor__P4281:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ClientPacketQueue__C4276_validate_46
    mov lr, r7
jacdac_ClientPacketQueue_constructor__P4281_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ClientPacketQueue_constructor__P4281_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    movs r0, #0
.ret.4281:
    @stackempty locals
.final_0_224:
jacdac_ClientPacketQueue_constructor__P4281_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/control.ts(120,5): control.allocateEventSource
    ;
    .object control_allocateEventSource__P2488 "core/control.ts(120,5): control.allocateEventSource"
control_allocateEventSource__P2488_pre:
    .section code
    .balign 4
    .section code
control_allocateEventSource__P2488:
control_allocateEventSource__P2488_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_allocateEventSource__P2488_locals:
    movs r0, #172
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    movs r1, #3
    bl _numops_adds
    push {r0}; tmpstore @1
    movs r1, #172
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    pop {r0} ; tmpref @1
.ret.2488:
    @stackempty locals
.final_0_225:
control_allocateEventSource__P2488_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(64,5): fwdMotors.setupDriving
    ;
    .object fwdMotors_setupDriving__P3879 "driving.ts(64,5): fwdMotors.setupDriving"
fwdMotors_setupDriving__P3879_pre:
    .section code
    .balign 4
    .section code
fwdMotors_setupDriving__P3879:
fwdMotors_setupDriving__P3879_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
fwdMotors_setupDriving__P3879_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #24]
    push {r0} ; proc-arg
    movs r1, #120
    bl _ifacecall4__66
_proccall1139:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
.ret.3879:
    @stackempty locals
    movs r0, #0
.final_0_226:
fwdMotors_setupDriving__P3879_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_217:
 .word jacdac_SensorClient_inline__P9315_Lit
_ldlit_218:
 .word jacdac_SensorClient_inline__P9327_Lit
_ldlit_219:
 .word _str123
_ldlit_220:
 .word jacdac_ClientPacketQueue__C4276_VT
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(2,5): fwdMotors.createDrivingControls
    ;
    .object fwdMotors_createDrivingControls__P4353 "driving.ts(2,5): fwdMotors.createDrivingControls"
fwdMotors_createDrivingControls__P4353_pre:
    .section code
    .balign 4
    .section code
fwdMotors_createDrivingControls__P4353:
fwdMotors_createDrivingControls__P4353_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
fwdMotors_createDrivingControls__P4353_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    movs r1, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    movs r0, #5
    ldr r1, _ldlit_222 ; initMotors__P9372_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    str r0, [sp, locals@5]
    movs r0, #5
    ldr r1, _ldlit_223 ; drive__P9394_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    str r0, [sp, locals@6]
    movs r0, #5
    ldr r1, _ldlit_224 ; turnInPlace__P9414_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #4
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    str r0, [sp, locals@7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #120
    ldr r2, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #84
    ldr r2, [sp, locals@6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #241
    ldr r2, [sp, locals@7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    pop {r0} ; tmpref @1
.ret.4353:
    @stackempty locals
.final_0_227:
    add sp, #4*8 ; pop locals 8
fwdMotors_createDrivingControls__P4353_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(9,9): initMotors
    ;
    .object initMotors__P9372 "driving.ts(9,9): initMotors"
initMotors__P9372_pre:
    .section code
    .balign 4
initMotors__P9372_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word initMotors__P9372_args@fn
initMotors__P9372_args:
    cmp r4, #3
    bge initMotors__P9372_nochk
    push {lr}
    bl _expand_args_3_45
    bl initMotors__P9372_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
initMotors__P9372:
initMotors__P9372_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
initMotors__P9372_locals:
    ldr r0, [r5, #4*3]
    ldr r1, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    ldr r0, [r5, #4*4]
    ldr r1, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #1
    bl _cmp_gt
    beq .else_0_228      
.jmpz1140:
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    movs r0, #201
    ldr r1, [sp, args@2]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_228      
.else_0_228:
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    movs r0, #201
    ldr r1, [sp, args@2]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_228:
    ldr r0, [r5, #4*7]
    movs r1, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    @stackempty locals
.ret.9372:
    @stackempty locals
    movs r0, #0
.final_2_228:
initMotors__P9372_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(24,9): drive
    ;
    .object drive__P9394 "driving.ts(24,9): drive"
drive__P9394_pre:
    .section code
    .balign 4
drive__P9394_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word drive__P9394_args@fn
drive__P9394_args:
    cmp r4, #2
    bge drive__P9394_nochk
    push {lr}
    bl _expand_args_2_5
    bl drive__P9394_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
drive__P9394:
drive__P9394_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
drive__P9394_locals:
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_229      
.jmpz1141:
    b .ret.9394      
.else_0_229:
.afterif_1_229:
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1142:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1143:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.9394:
    @stackempty locals
    movs r0, #0
.final_2_229:
drive__P9394_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function driving.ts(30,9): turnInPlace
    ;
    .object turnInPlace__P9414 "driving.ts(30,9): turnInPlace"
turnInPlace__P9414_pre:
    .section code
    .balign 4
turnInPlace__P9414_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word turnInPlace__P9414_args@fn
turnInPlace__P9414_args:
    cmp r4, #1
    bge turnInPlace__P9414_nochk
    push {lr}
    bl _expand_args_1_2
    bl turnInPlace__P9414_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
turnInPlace__P9414:
turnInPlace__P9414_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
turnInPlace__P9414_locals:
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_230      
.jmpz1144:
    b .ret.9414      
.else_0_230:
.afterif_1_230:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_gt
    beq .condexprz_2_230      
.jmpz1145:
    movs r0, #3
    b .condexprfin_3_230      
.condexprz_2_230:
    movs r0, #1
    negs r0, r0
    b .condexprfin_3_230      
.object PUSH
.balign 4
_ldlit_222:
 .word initMotors__P9372_Lit
_ldlit_223:
 .word drive__P9394_Lit
_ldlit_224:
 .word turnInPlace__P9414_Lit
.object POP
.condexprfin_3_230:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #121
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1146:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #121
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [r5, #4*7]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1147:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Math_abs__P2157
_proccall1148:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #61
    mov r7, sp
    str r7, [r6, #4]
    bl numops::div
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #7
    lsls r1, r1, #8
    adds r1, #209
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl basic::pause
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [r5, #4*4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1149:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*6]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl fwdBase_FwdServoClient_setSpeed__P3868
_proccall1150:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.9414:
    @stackempty locals
    movs r0, #0
.final_4_230:
    add sp, #4*1 ; pop locals 1
turnInPlace__P9414_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(540,5): Math.abs
    ;
    .object Math_abs__P2157 "core/pxt-helpers.ts(540,5): Math.abs"
Math_abs__P2157_pre:
    .section code
    .balign 4
    .section code
Math_abs__P2157:
Math_abs__P2157_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
Math_abs__P2157_locals:
    ldr r0, [sp, args@0]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_0_231      
.jmpz1151:
    movs r0, #1
    ldr r1, [sp, args@0]
    bl _numops_subs
    b .condexprfin_1_231      
.condexprz_0_231:
    ldr r0, [sp, args@0]
.condexprfin_1_231:
; jmp value (already in r0)
.ret.2157:
    @stackempty locals
.final_2_231:
Math_abs__P2157_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1920,5): jacdac.start
    ;
    .object jacdac_start__P3759 "jacdac/routing.ts(1920,5): jacdac.start"
jacdac_start__P3759_pre:
    .section code
    .balign 4
    .section code
jacdac_start__P3759:
jacdac_start__P3759_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_start__P3759_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_running__P3614
_proccall1153:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_232      
.jmpz1152:
    b .ret.3759      
.else_0_232:
.afterif_1_232:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_232      
.jmpz1154:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_232      
.jmpz1155:
    ldr r0, [sp, locals@0]
    ldr r1, _ldlit_226 ; 536870911      
    bl _numops_ands
    ldr r1, _ldlit_227 ; 1610612737      
    bl _numops_orrs
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.else_3_232:
.afterif_4_232:
.else_2_232:
.afterif_5_232:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_start__P3615
_proccall1156:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_228 ; _str146      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall1157:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_232      
.jmpz1158:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_232      
.lazySkip_7_232:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
.lazy_6_232:
; jmp value (already in r0)
    str r0, [sp, args@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #79
    bl _ifacecall1_get_54
_proccall1160:
    add sp, #4*1 ; pop locals 1
    movs r1, #0
    bl _cmp_eqq
    beq .else_8_232      
.jmpz1159:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #81
    bl _ifacecall1_get_54
_proccall1161:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #79
    bl _ifacecall2_set_67
_proccall1162:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_8_232:
.afterif_9_232:
    movs r0, #66
    push {r0} ; proc-arg
    bl jacdac_enablePower__P4317
_proccall1163:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl jacdac_enablePowerFaultPin__P4318
_proccall1164:
    @stackempty locals
    bl jacdac_enableIdentityLED__P4319
_proccall1165:
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #79
    bl _ifacecall1_get_54
_proccall1167:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_10_232      
.jmpz1166:
    ldr r0, _ldlit_229 ; jacdac_BrainServer__C4296_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_BrainServer_constructor__P4298
_proccall1168:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    bl jacdac_Server_start__P3667
_proccall1169:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_10_232:
.afterif_11_232:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #174
    bl _ifacecall1_get_54
_proccall1171:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_232      
.jmpz1170:
    ldr r0, _ldlit_230 ; jacdac_ProxyServer__C4293_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_ProxyServer_constructor__P4295
_proccall1172:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    bl jacdac_Server_start__P3667
_proccall1173:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    movs r1, #66
    bl _inst_jacdac_Bus__C3607_validate_38
    str r1, [r0, #40]
    @stackempty locals
.else_12_232:
.afterif_13_232:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #80
    bl _ifacecall1_get_54
_proccall1175:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_232      
.jmpz1174:
    ldr r0, _ldlit_231 ; jacdac_start_inline__P9514_Lit      
    push {r0} ; proc-arg
    bl console_addListener__P2531
_proccall1176:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_Server_start__P3667
_proccall1177:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_14_232:
.afterif_15_232:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #81
    bl _ifacecall1_get_54
_proccall1179:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_16_232      
.jmpz1178:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_Server_start__P3667
_proccall1180:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_16_232:
.afterif_17_232:
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, _ldlit_232 ; jacdac_consumePackets__P4323_Lit      
    push {r0} ; proc-arg
    bl _conv_68
    movs r1, #1
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, _ldlit_233 ; jacdac_start_inline__P9541_Lit      
    push {r0} ; proc-arg
    bl _conv_68
    movs r1, #100
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_234 ; _str147      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall1181:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #158
    bl _ifacecall1_get_54
_proccall1183:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_20_232      
.jmpz1182:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_19_232      
.lazySkip_20_232:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
.lazy_19_232:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_18_232      
.jmpz1184:
    ldr r0, _ldlit_235 ; _str148      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall1185:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #7
    lsls r0, r0, #8
    adds r0, #209
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1186:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_21_232      
.jmpz1187:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_bindRoles__P3486
_proccall1188:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_21_232:
.afterif_22_232:
.else_18_232:
.afterif_23_232:
.ret.3759:
    @stackempty locals
    movs r0, #0
.final_24_232:
    add sp, #4*1 ; pop locals 1
jacdac_start__P3759_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1953,33): jacdac.start.inline
    ;
    .object jacdac_start_inline__P9514 "jacdac/routing.ts(1953,33): jacdac.start.inline"
jacdac_start_inline__P9514_pre:
    .section code
    .balign 4
jacdac_start_inline__P9514_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_start_inline__P9514_args@fn
jacdac_start_inline__P9514_args:
    cmp r4, #2
    bge jacdac_start_inline__P9514_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_start_inline__P9514_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_start_inline__P9514:
jacdac_start_inline__P9514_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_start_inline__P9514_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_236 ; _str67      
    bl _cmp_neq
    beq .else_0_233      
.jmpz1189:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #180
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_LoggerServer_add__P3367
_proccall1190:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_233:
.afterif_1_233:
.ret.9514:
    @stackempty locals
    movs r0, #0
    b .final_2_233      
.object PUSH
.balign 4
_ldlit_226:
 .word 536870911
_ldlit_227:
 .word 1610612737
_ldlit_228:
 .word _str146
_ldlit_229:
 .word jacdac_BrainServer__C4296_VT
_ldlit_230:
 .word jacdac_ProxyServer__C4293_VT
_ldlit_231:
 .word jacdac_start_inline__P9514_Lit
_ldlit_232:
 .word jacdac_consumePackets__P4323_Lit
_ldlit_233:
 .word jacdac_start_inline__P9541_Lit
_ldlit_234:
 .word _str147
_ldlit_235:
 .word _str148
_ldlit_236:
 .word _str67
.object POP
.final_2_233:
jacdac_start_inline__P9514_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1968,72): jacdac.start.inline
    ;
    .object jacdac_start_inline__P9541 "jacdac/routing.ts(1968,72): jacdac.start.inline"
jacdac_start_inline__P9541_pre:
    .section code
    .balign 4
jacdac_start_inline__P9541_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_start_inline__P9541_args@fn
jacdac_start_inline__P9541_args:
    .section code
jacdac_start_inline__P9541:
jacdac_start_inline__P9541_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_start_inline__P9541_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_queueAnnounce__P3621
_proccall1191:
    add sp, #4*1 ; pop locals 1
.ret.9541:
    @stackempty locals
    movs r0, #0
.final_0_234:
jacdac_start_inline__P9541_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(258,9): jacdac._rolemgr.RoleManagerServer.bindRoles
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles__P3486 "jacdac/rolemgr.ts(258,9): jacdac._rolemgr.RoleManagerServer.bindRoles"
jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles__P3486:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_235      
.jmpz1192:
    bb .ret.3486 ; with expression
.else_0_235:
.afterif_1_235:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9565:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1193
    b .brk.9565      
.jmpz1193:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_235      
.jmpz1194:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_235      
.lazySkip_4_235:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #52]
.lazy_3_235:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_235      
.jmpz1195:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_235      
.lazySkip_6_235:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_5_235:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1196
    b .else_2_235      
.jmpz1196:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3705
_proccall1197:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_9_235      
.jmpz1198:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_8_235      
.lazySkip_9_235:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r1, _ldlit_238 ; _str75      
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_8_235:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1199
    b .else_7_235      
.jmpz1199:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_239 ; services_inline__P9590_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2139
_proccall1200:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1201
    b .else_10_235      
.jmpz1201:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617
_proccall1203:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_neq
    add sp, #4*2 ; pop locals 2
    beq .else_11_235      
.jmpz1202:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3481
_proccall1204:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .afterif_12_235      
.else_11_235:
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    str r0, [sp, locals@6]
    @stackempty locals
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    bl isNaN__P2122
_proccall1206:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_15_235      
.jmpz1205:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_14_235      
.lazySkip_15_235:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_17_235      
.jmpz1207:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_16_235      
.lazySkip_17_235:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.lazy_16_235:
; jmp value (already in r0)
.lazy_14_235:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_13_235      
.jmpz1208:
    ldr r0, [sp, locals@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3481
_proccall1209:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_13_235:
.afterif_18_235:
.afterif_12_235:
.else_10_235:
.afterif_19_235:
.else_7_235:
.afterif_20_235:
.else_2_235:
.afterif_21_235:
.cont.9565:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.9565      
.brk.9565:
    movs r0, #0
    str r0, [sp, locals@1]
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_eq
    beq .else_22_235      
.jmpz1210:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_nochk
_proccall1211:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .ret.3486      
    b .afterif_23_235      
.object PUSH
.balign 4
_ldlit_238:
 .word _str75
_ldlit_239:
 .word services_inline__P9590_Lit
.object POP
.else_22_235:
.afterif_23_235:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_241 ; _str76      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_242 ; _str77      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_243 ; _str78      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #44]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1212:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@7]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #12]
    mov r3, r0
    ldr r0, _ldlit_244 ; wraps_inline__P9668_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayMap__P2135
_proccall1213:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@8]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    str r0, [sp, locals@10]
    movs r0, #1
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.9679:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1214
    b .brk.9679      
.jmpz1214:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_26_235      
.jmpz1215:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_25_235      
.lazySkip_26_235:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #52]
.lazy_25_235:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1216
    b .else_24_235      
.jmpz1216:
    ldr r0, _ldlit_245 ; jacdac__rolemgr_RoleBinding__C4246_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl jacdac_Client_roleQuery__P3705
_proccall1217:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleBinding_constructor__P4249
_proccall1218:
    add sp, #4*4 ; pop locals 4
    pop {r0} ; tmpref @1
    str r0, [sp, locals@12]
    @stackempty locals
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_27_235      
.jmpz1219:
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@13]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@14]
    movs r0, #1
    str r0, [sp, locals@15]
    @stackempty locals
.fortop.9709:
    ldr r0, [sp, locals@15]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@14]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9709      
.jmpz1220:
    ldr r0, [sp, locals@14]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@15]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@13]
    ldr r0, [sp, locals@13]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_eq
    add sp, #4*2 ; pop locals 2
    beq .else_28_235      
.jmpz1221:
    ldr r0, [sp, locals@13]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .brk.9709      
.else_28_235:
.afterif_29_235:
.cont.9709:
    ldr r0, [sp, locals@15]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@15]
    b .fortop.9709      
.brk.9709:
    movs r0, #0
    str r0, [sp, locals@14]
.else_27_235:
.afterif_30_235:
    ldr r0, [sp, locals@7]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@12]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_24_235:
.afterif_31_235:
.cont.9679:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    b .fortop.9679      
.brk.9679:
    movs r0, #0
    str r0, [sp, locals@10]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@16]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@17]
    @stackempty locals
    ldr r0, [sp, locals@7]
    str r0, [sp, locals@18]
    movs r0, #1
    str r0, [sp, locals@19]
    @stackempty locals
.fortop.9730:
    ldr r0, [sp, locals@19]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@18]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    bne .jmpz1222
    b .brk.9730      
.object PUSH
.balign 4
_ldlit_241:
 .word _str76
_ldlit_242:
 .word _str77
_ldlit_243:
 .word _str78
_ldlit_244:
 .word wraps_inline__P9668_Lit
_ldlit_245:
 .word jacdac__rolemgr_RoleBinding__C4246_VT
.object POP
.jmpz1222:
    ldr r0, [sp, locals@18]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@19]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@17]
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleBinding_host__P4247
_proccall1223:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@20]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_247 ; h_inline__P9738_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@20]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl helpers_arrayFind__P2140
_proccall1224:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@21]
    @stackempty locals
    ldr r0, [sp, locals@21]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_32_235      
.jmpz1225:
    ldr r0, _ldlit_248 ; jacdac__rolemgr_ServerBindings__C4250_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@20]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_constructor__P4253
_proccall1226:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
    str r0, [sp, locals@21]
    @stackempty locals
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@21]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_32_235:
.afterif_33_235:
    ldr r0, [sp, locals@21]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@17]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.9730:
    ldr r0, [sp, locals@19]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@19]
    b .fortop.9730      
.brk.9730:
    movs r0, #0
    str r0, [sp, locals@18]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_249 ; _str79      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_250 ; _str80      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1227:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_251 ; jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2139
_proccall1228:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@16]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_252 ; _str81      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_250 ; _str80      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1229:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.9785:
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #1
    bl _cmp_gt
    bne .jmpz1230
    b .brk.9785      
.jmpz1230:
    ldr r0, _ldlit_253 ; h_inline__P9802_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_254 ; h_inline__P9792_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_maxIn__P4254
_proccall1231:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@22]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@23]
    @stackempty locals
    ldr r0, [sp, locals@8]
    str r0, [sp, locals@24]
    movs r0, #1
    str r0, [sp, locals@25]
    @stackempty locals
.fortop.9813:
    ldr r0, [sp, locals@25]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@24]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.9813      
.jmpz1232:
    ldr r0, [sp, locals@24]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@25]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@23]
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    movs r0, #10
    push {r0} ; proc-arg
    ldr r0, [sp, locals@23]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_scoreFor__P4252
_proccall1233:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.9813:
    ldr r0, [sp, locals@25]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@25]
    b .fortop.9813      
.brk.9813:
    movs r0, #0
    str r0, [sp, locals@24]
    ldr r0, _ldlit_255 ; dev_inline__P9832_Lit      
    push {r0} ; proc-arg
    ldr r0, _ldlit_256 ; dev_inline__P9824_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_maxIn__P4254
_proccall1234:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@26]
    @stackempty locals
    ldr r0, [sp, locals@26]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #8]
    movs r1, #1
    bl _cmp_eq
    beq .else_34_235      
.jmpz1235:
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    b .cont.9785      
.else_34_235:
.afterif_35_235:
    ldr r0, [sp, locals@22]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_257 ; jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySort__P2134
_proccall1236:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, locals@26]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_scoreFor__P4252
_proccall1237:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@27]
    @stackempty locals
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_fullyBound__P4251
_proccall1239:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_36_235      
.jmpz1238:
    ldr r0, [sp, locals@16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::removeElement
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    @stackempty locals
    b .afterif_37_235      
.else_36_235:
    movs r0, #1
    ldr r1, _ldlit_258 ; jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@26]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, locals@22]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@22]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayFilter__P2139
_proccall1240:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_37_235:
    b .cont.9785      
.brk.9785:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_nochk
_proccall1241:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3486:
    @stackempty locals
    movs r0, #0
.final_38_235:
    add sp, #4*28 ; pop locals 28
jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(270,29): services.inline
    ;
    .object services_inline__P9590 "jacdac/rolemgr.ts(270,29): services.inline"
services_inline__P9590_pre:
    .section code
    .balign 4
services_inline__P9590_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word services_inline__P9590_args@fn
services_inline__P9590_args:
    cmp r4, #1
    bge services_inline__P9590_nochk
    push {lr}
    bl _expand_args_1_2
    bl services_inline__P9590_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
services_inline__P9590:
services_inline__P9590_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
services_inline__P9590_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #64]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.9590:
    @stackempty locals
.final_0_236:
services_inline__P9590_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_247:
 .word h_inline__P9738_Lit
_ldlit_248:
 .word jacdac__rolemgr_ServerBindings__C4250_VT
_ldlit_249:
 .word _str79
_ldlit_250:
 .word _str80
_ldlit_251:
 .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_Lit
_ldlit_252:
 .word _str81
_ldlit_253:
 .word h_inline__P9802_Lit
_ldlit_254:
 .word h_inline__P9792_Lit
_ldlit_255:
 .word dev_inline__P9832_Lit
_ldlit_256:
 .word dev_inline__P9824_Lit
_ldlit_257:
 .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_Lit
_ldlit_258:
 .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(309,43): wraps.inline
    ;
    .object wraps_inline__P9668 "jacdac/rolemgr.ts(309,43): wraps.inline"
wraps_inline__P9668_pre:
    .section code
    .balign 4
wraps_inline__P9668_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word wraps_inline__P9668_args@fn
wraps_inline__P9668_args:
    cmp r4, #1
    bge wraps_inline__P9668_nochk
    push {lr}
    bl _expand_args_1_2
    bl wraps_inline__P9668_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
wraps_inline__P9668:
wraps_inline__P9668_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
wraps_inline__P9668_locals:
    ldr r0, _ldlit_260 ; jacdac__rolemgr_DeviceWrapper__C4244_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac__rolemgr_DeviceWrapper_constructor__P4245
_proccall1242:
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @1
.ret.9668:
    @stackempty locals
.final_0_237:
wraps_inline__P9668_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(336,38): h.inline
    ;
    .object h_inline__P9738 "jacdac/rolemgr.ts(336,38): h.inline"
h_inline__P9738_pre:
    .section code
    .balign 4
h_inline__P9738_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word h_inline__P9738_args@fn
h_inline__P9738_args:
    cmp r4, #1
    bge h_inline__P9738_nochk
    push {lr}
    bl _expand_args_1_2
    bl h_inline__P9738_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
h_inline__P9738:
h_inline__P9738_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
h_inline__P9738_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.ret.9738:
    @stackempty locals
.final_0_238:
h_inline__P9738_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(346,38): jacdac._rolemgr.RoleManagerServer.bindRoles.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772 "jacdac/rolemgr.ts(346,38): jacdac._rolemgr.RoleManagerServer.bindRoles.inline"
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_args@fn
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_ServerBindings_fullyBound__P4251
_proccall1243:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.9772:
    @stackempty locals
.final_0_239:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9772_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(355,21): h.inline
    ;
    .object h_inline__P9792 "jacdac/rolemgr.ts(355,21): h.inline"
h_inline__P9792_pre:
    .section code
    .balign 4
h_inline__P9792_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word h_inline__P9792_args@fn
h_inline__P9792_args:
    cmp r4, #2
    bge h_inline__P9792_nochk
    push {lr}
    bl _expand_args_2_5
    bl h_inline__P9792_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
h_inline__P9792:
h_inline__P9792_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
h_inline__P9792_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.ret.9792:
    @stackempty locals
.final_0_240:
h_inline__P9792_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(356,21): h.inline
    ;
    .object h_inline__P9802 "jacdac/rolemgr.ts(356,21): h.inline"
h_inline__P9802_pre:
    .section code
    .balign 4
h_inline__P9802_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word h_inline__P9802_args@fn
h_inline__P9802_args:
    cmp r4, #2
    bge h_inline__P9802_nochk
    push {lr}
    bl _expand_args_2_5
    bl h_inline__P9802_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
h_inline__P9802:
h_inline__P9802_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
h_inline__P9802_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9802:
    @stackempty locals
.final_0_241:
h_inline__P9802_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(367,21): dev.inline
    ;
    .object dev_inline__P9824 "jacdac/rolemgr.ts(367,21): dev.inline"
dev_inline__P9824_pre:
    .section code
    .balign 4
dev_inline__P9824_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dev_inline__P9824_args@fn
dev_inline__P9824_args:
    cmp r4, #2
    bge dev_inline__P9824_nochk
    push {lr}
    bl _expand_args_2_5
    bl dev_inline__P9824_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dev_inline__P9824:
dev_inline__P9824_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
dev_inline__P9824_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
.ret.9824:
    @stackempty locals
.final_0_242:
dev_inline__P9824_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(368,21): dev.inline
    ;
    .object dev_inline__P9832 "jacdac/rolemgr.ts(368,21): dev.inline"
dev_inline__P9832_pre:
    .section code
    .balign 4
dev_inline__P9832_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word dev_inline__P9832_args@fn
dev_inline__P9832_args:
    cmp r4, #2
    bge dev_inline__P9832_nochk
    push {lr}
    bl _expand_args_2_5
    bl dev_inline__P9832_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
dev_inline__P9832:
dev_inline__P9832_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
dev_inline__P9832_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #12]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #12]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9832:
    @stackempty locals
.final_0_243:
dev_inline__P9832_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(379,33): jacdac._rolemgr.RoleManagerServer.bindRoles.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852 "jacdac/rolemgr.ts(379,33): jacdac._rolemgr.RoleManagerServer.bindRoles.inline"
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_args@fn
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_args:
    cmp r4, #2
    bge jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_244      
.jmpz1244:
    ldr r0, [sp, locals@0]
    b .ret.9852      
.else_0_244:
.afterif_1_244:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_244      
.jmpz1245:
    ldr r0, [sp, locals@0]
    b .ret.9852      
.else_2_244:
.afterif_3_244:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9852:
    @stackempty locals
.final_4_244:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9852_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(397,25): jacdac._rolemgr.RoleManagerServer.bindRoles.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898 "jacdac/rolemgr.ts(397,25): jacdac._rolemgr.RoleManagerServer.bindRoles.inline"
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_args@fn
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*2 ; pop locals 2
.ret.9898:
    @stackempty locals
.final_0_245:
jacdac__rolemgr_RoleManagerServer_bindRoles_inline__P9898_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(208,5): helpers.arraySort
    ;
    .object helpers_arraySort__P2134 "core/pxt-helpers.ts(208,5): helpers.arraySort"
helpers_arraySort__P2134_pre:
    .section code
    .balign 4
    .section code
helpers_arraySort__P2134:
helpers_arraySort__P2134_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
helpers_arraySort__P2134_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_246      
.jmpz1246:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_246      
.object PUSH
.balign 4
_ldlit_260:
 .word jacdac__rolemgr_DeviceWrapper__C4244_VT
.object POP
.lazySkip_2_246:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_246:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_246      
.jmpz1247:
    ldr r0, _ldlit_262 ; helpers_arraySort_inline__P9915_Lit      
    str r0, [sp, args@1]
    @stackempty locals
.else_0_246:
.afterif_3_246:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_sortHelper__P3909
_proccall1248:
    add sp, #4*2 ; pop locals 2
.ret.2134:
    @stackempty locals
.final_4_246:
helpers_arraySort__P2134_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(210,26): helpers.arraySort.inline
    ;
    .object helpers_arraySort_inline__P9915 "core/pxt-helpers.ts(210,26): helpers.arraySort.inline"
helpers_arraySort_inline__P9915_pre:
    .section code
    .balign 4
helpers_arraySort_inline__P9915_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word helpers_arraySort_inline__P9915_args@fn
helpers_arraySort_inline__P9915_args:
    cmp r4, #2
    bge helpers_arraySort_inline__P9915_nochk
    push {lr}
    bl _expand_args_2_5
    bl helpers_arraySort_inline__P9915_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
helpers_arraySort_inline__P9915:
helpers_arraySort_inline__P9915_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arraySort_inline__P9915_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_247      
.jmpz1249:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_247      
.lazySkip_2_247:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
.lazy_1_247:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_247      
.jmpz1250:
    movs r0, #1
    b .ret.9915      
    b .afterif_3_247      
.else_0_247:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_247      
.jmpz1251:
    movs r0, #3
    b .ret.9915      
    b .afterif_5_247      
.else_4_247:
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_247      
.jmpz1252:
    movs r0, #1
    negs r0, r0
    b .ret.9915      
.else_6_247:
.afterif_7_247:
.afterif_5_247:
.afterif_3_247:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_247      
.jmpz1253:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_247      
.lazySkip_10_247:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
.lazy_9_247:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_247      
.jmpz1254:
    movs r0, #1
    b .ret.9915      
    b .afterif_11_247      
.else_8_247:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_247      
.jmpz1255:
    movs r0, #3
    b .ret.9915      
    b .afterif_13_247      
.else_12_247:
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_14_247      
.jmpz1256:
    movs r0, #1
    negs r0, r0
    b .ret.9915      
.else_14_247:
.afterif_15_247:
.afterif_13_247:
.afterif_11_247:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    bl _conv_13
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::compare
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
.ret.9915:
    @stackempty locals
.final_16_247:
    add sp, #4*4 ; pop locals 4
helpers_arraySort_inline__P9915_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(192,5): helpers.sortHelper
    ;
    .object helpers_sortHelper__P3909 "core/pxt-helpers.ts(192,5): helpers.sortHelper"
helpers_sortHelper__P3909_pre:
    .section code
    .balign 4
    .section code
helpers_sortHelper__P3909:
helpers_sortHelper__P3909_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_sortHelper__P3909_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_248      
.jmpz1257:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_248      
.lazySkip_2_248:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_248:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_248      
.jmpz1258:
    ldr r0, [sp, args@0]
    b .ret.3909      
.else_0_248:
.afterif_3_248:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.9977:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.9977      
.jmpz1259:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.9985:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.9985      
.jmpz1260:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    movs r1, #1
    bl _cmp_gt
    beq .else_4_248      
.jmpz1261:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl helpers_swap__P3908
_proccall1263:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_248:
.afterif_5_248:
.cont.9985:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.9985      
.brk.9985:
.cont.9977:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.9977      
.brk.9977:
    ldr r0, [sp, args@0]
.ret.3909:
    @stackempty locals
.final_6_248:
    add sp, #4*3 ; pop locals 3
helpers_sortHelper__P3909_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_262:
 .word helpers_arraySort_inline__P9915_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(186,5): helpers.swap
    ;
    .object helpers_swap__P3908 "core/pxt-helpers.ts(186,5): helpers.swap"
helpers_swap__P3908_pre:
    .section code
    .balign 4
    .section code
helpers_swap__P3908:
helpers_swap__P3908_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
helpers_swap__P3908_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3908:
    @stackempty locals
    movs r0, #0
.final_0_249:
    add sp, #4*1 ; pop locals 1
helpers_swap__P3908_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(85,9): jacdac._rolemgr.ServerBindings.scoreFor
    ;
    .object jacdac__rolemgr_ServerBindings_scoreFor__P4252 "jacdac/rolemgr.ts(85,9): jacdac._rolemgr.ServerBindings.scoreFor"
jacdac__rolemgr_ServerBindings_scoreFor__P4252_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_scoreFor__P4252_args:
    cmp r4, #3
    bge jacdac__rolemgr_ServerBindings_scoreFor__P4252_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac__rolemgr_ServerBindings_scoreFor__P4252_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_scoreFor__P4252:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    mov lr, r7
jacdac__rolemgr_ServerBindings_scoreFor__P4252_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_ServerBindings_scoreFor__P4252_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #12]
    str r0, [sp, locals@2]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    str r0, [sp, locals@5]
    movs r0, #1
    str r0, [sp, locals@6]
    @stackempty locals
.fortop.10033:
    ldr r0, [sp, locals@6]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10033      
.jmpz1264:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@6]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_250      
.jmpz1265:
    ldr r0, [sp, locals@4]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    ldr r1, [sp, locals@2]
    bl _cmp_eq
    beq .else_1_250      
.jmpz1266:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_1_250:
.afterif_2_250:
    b .afterif_3_250      
.else_0_250:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_250:
.cont.10033:
    ldr r0, [sp, locals@6]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@6]
    b .fortop.10033      
.brk.10033:
    movs r0, #0
    str r0, [sp, locals@5]
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3738
_proccall1267:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@7]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@8]
    @stackempty locals
.fortop.10049:
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1268
    b .brk.10049      
.jmpz1268:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@9]
    @stackempty locals
    ldr r0, [sp, locals@9]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    movs r1, #1
    bl _cmp_ge
    bne .jmpz1269
    b .else_4_250      
.jmpz1269:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Device_serviceIndexAtOffset__P3739
_proccall1270:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@10]
    @stackempty locals
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_250      
.jmpz1271:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_250      
.lazySkip_7_250:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
.lazy_6_250:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_5_250      
.jmpz1272:
    b .cont.10049      
.else_5_250:
.afterif_8_250:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1273
    b .else_9_250      
.jmpz1273:
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@9]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleBinding_select__P4248
_proccall1274:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_264 ; _str72      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_265 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735
_proccall1275:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_266 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@10]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_265 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_266 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2524
_proccall1276:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_9_250:
.afterif_10_250:
.else_4_250:
.afterif_11_250:
.cont.10049:
    ldr r0, [sp, locals@8]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@8]
    @stackempty locals
    b .fortop.10049      
.brk.10049:
    ldr r0, _ldlit_267 ; jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_Lit      
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2139
_proccall1277:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@11]
    @stackempty locals
.fortop.10130:
    ldr r0, [sp, locals@11]
    ldr r1, [sp, locals@7]
    bl _cmp_lt
    bne .jmpz1278
    b .brk.10130      
.jmpz1278:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_12_250      
.jmpz1279:
    b .cont.10130      
.else_12_250:
.afterif_13_250:
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3740
_proccall1280:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@12]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@13]
    @stackempty locals
.fortop.10142:
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1281
    b .brk.10142      
.jmpz1281:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #16]
    ldr r1, [sp, locals@12]
    bl _cmp_eq
    bne .jmpz1282
    b .else_14_250      
.jmpz1282:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1283
    b .else_15_250      
.jmpz1283:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac__rolemgr_RoleBinding_select__P4248
_proccall1284:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_268 ; _str73      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_265 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl jacdac_Device_shortId__P3735
_proccall1285:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_266 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@11]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_265 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_266 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2524
_proccall1286:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_15_250:
.afterif_16_250:
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@13]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl helpers_arraySplice__P2129
_proccall1287:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .brk.10142      
.else_14_250:
.afterif_17_250:
.cont.10142:
    ldr r0, [sp, locals@13]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@13]
    @stackempty locals
    b .fortop.10142      
.brk.10142:
.cont.10130:
    ldr r0, [sp, locals@11]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@11]
    @stackempty locals
    b .fortop.10130      
.brk.10130:
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_eq
    beq .else_18_250      
.jmpz1288:
    movs r0, #1
    b .ret.4252      
.else_18_250:
.afterif_19_250:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #17
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@1]
    bl _numops_orrs
.ret.4252:
    @stackempty locals
.final_20_250:
    add sp, #4*14 ; pop locals 14
jacdac__rolemgr_ServerBindings_scoreFor__P4252_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_264:
 .word _str72
_ldlit_265:
 .word _str69
_ldlit_266:
 .word _str67
_ldlit_267:
 .word jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_Lit
_ldlit_268:
 .word _str73
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(124,38): jacdac._rolemgr.ServerBindings.scoreFor.inline
    ;
    .object jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124 "jacdac/rolemgr.ts(124,38): jacdac._rolemgr.ServerBindings.scoreFor.inline"
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_args@fn
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_args:
    cmp r4, #1
    bge jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124:
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.10124:
    @stackempty locals
.final_0_251:
jacdac__rolemgr_ServerBindings_scoreFor_inline__P10124_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(57,9): jacdac._rolemgr.RoleBinding.select
    ;
    .object jacdac__rolemgr_RoleBinding_select__P4248 "jacdac/rolemgr.ts(57,9): jacdac._rolemgr.RoleBinding.select"
jacdac__rolemgr_RoleBinding_select__P4248_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleBinding_select__P4248_args:
    cmp r4, #3
    bge jacdac__rolemgr_RoleBinding_select__P4248_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac__rolemgr_RoleBinding_select__P4248_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac__rolemgr_RoleBinding_select__P4248:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    mov lr, r7
jacdac__rolemgr_RoleBinding_select__P4248_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleBinding_select__P4248_locals:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #12]
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_2_252      
.jmpz1289:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_252      
.lazySkip_2_252:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_1_252:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_252      
.jmpz1290:
    b .ret.4248      
.else_0_252:
.afterif_3_252:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_252      
.jmpz1291:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    movs r0, #6
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac__rolemgr_setRole__P3481
_proccall1292:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_4_252:
.afterif_5_252:
    ldr r0, [sp, args@1]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3481
_proccall1293:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #8]
    @stackempty locals
.ret.4248:
    @stackempty locals
    movs r0, #0
.final_6_252:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleBinding_select__P4248_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1433,9): jacdac.Device.serviceIndexAtOffset
    ;
    .object jacdac_Device_serviceIndexAtOffset__P3739 "jacdac/routing.ts(1433,9): jacdac.Device.serviceIndexAtOffset"
jacdac_Device_serviceIndexAtOffset__P3739_pre:
    .section code
    .balign 4
jacdac_Device_serviceIndexAtOffset__P3739_args:
    cmp r4, #3
    bge jacdac_Device_serviceIndexAtOffset__P3739_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_Device_serviceIndexAtOffset__P3739_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_Device_serviceIndexAtOffset__P3739:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Device__C3724_validate_33
    mov lr, r7
jacdac_Device_serviceIndexAtOffset__P3739_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Device_serviceIndexAtOffset__P3739_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassLength__P3738_nochk
_proccall1294:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10257:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.10257      
.jmpz1295:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Device_serviceClassAt__P3740_nochk
_proccall1297:
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@1]
    bl _cmp_eqq
    beq .else_0_253      
.jmpz1296:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@2]
    bl _cmp_eqq
    beq .else_1_253      
.jmpz1298:
    ldr r0, [sp, locals@2]
    b .ret.3739      
.else_1_253:
.afterif_2_253:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_253:
.afterif_3_253:
.cont.10257:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.10257      
.brk.10257:
    movs r0, #1
    negs r0, r0
.ret.3739:
    @stackempty locals
.final_4_253:
    add sp, #4*3 ; pop locals 3
jacdac_Device_serviceIndexAtOffset__P3739_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(161,5): jacdac._rolemgr.maxIn
    ;
    .object jacdac__rolemgr_maxIn__P4254 "jacdac/rolemgr.ts(161,5): jacdac._rolemgr.maxIn"
jacdac__rolemgr_maxIn__P4254_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_maxIn__P4254:
jacdac__rolemgr_maxIn__P4254_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_maxIn__P4254_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10279:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10279      
.jmpz1299:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_254      
.jmpz1301:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_254      
.lazySkip_2_254:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_254      
.jmpz1302:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_254      
.lazySkip_4_254:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r3}
    push {r1}
    push {r2}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
.lazy_3_254:
; jmp value (already in r0)
.lazy_1_254:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_254      
.jmpz1304:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.else_0_254:
.afterif_5_254:
.cont.10279:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10279      
.brk.10279:
    ldr r0, [sp, locals@0]
.ret.4254:
    @stackempty locals
.final_6_254:
    add sp, #4*3 ; pop locals 3
jacdac__rolemgr_maxIn__P4254_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(78,9): jacdac._rolemgr.ServerBindings.fullyBound
    ;
    .object jacdac__rolemgr_ServerBindings_fullyBound__P4251 "jacdac/rolemgr.ts(78,9): jacdac._rolemgr.ServerBindings.fullyBound"
jacdac__rolemgr_ServerBindings_fullyBound__P4251_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_fullyBound__P4251_args:
    cmp r4, #1
    bge jacdac__rolemgr_ServerBindings_fullyBound__P4251_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_ServerBindings_fullyBound__P4251_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_fullyBound__P4251:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    mov lr, r7
jacdac__rolemgr_ServerBindings_fullyBound__P4251_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_fullyBound__P4251_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r3, r0
    ldr r0, _ldlit_270 ; jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayEvery__P2137
_proccall1305:
    add sp, #4*2 ; pop locals 2
.ret.4251:
    @stackempty locals
.final_0_255:
jacdac__rolemgr_ServerBindings_fullyBound__P4251_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(79,40): jacdac._rolemgr.ServerBindings.fullyBound.inline
    ;
    .object jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312 "jacdac/rolemgr.ts(79,40): jacdac._rolemgr.ServerBindings.fullyBound.inline"
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_pre:
    .section code
    .balign 4
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_args@fn
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_args:
    cmp r4, #1
    bge jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312:
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::neq
    add sp, #4*1 ; pop locals 1
.ret.10312:
    @stackempty locals
.final_0_256:
jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(247,5): helpers.arrayEvery
    ;
    .object helpers_arrayEvery__P2137 "core/pxt-helpers.ts(247,5): helpers.arrayEvery"
helpers_arrayEvery__P2137_pre:
    .section code
    .balign 4
    .section code
helpers_arrayEvery__P2137:
helpers_arrayEvery__P2137_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayEvery__P2137_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.fortop.10324:
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@0]
    bl _cmp_lt
    beq .brk.10324      
.jmpz1306:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_257      
.jmpz1307:
    movs r0, #10
    b .ret.2137      
.else_0_257:
.afterif_1_257:
.cont.10324:
    ldr r0, [sp, locals@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .fortop.10324      
.brk.10324:
    movs r0, #66
.ret.2137:
    @stackempty locals
.final_2_257:
    add sp, #4*2 ; pop locals 2
helpers_arrayEvery__P2137_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(76,9): jacdac._rolemgr.ServerBindings.constructor
    ;
    .object jacdac__rolemgr_ServerBindings_constructor__P4253 "jacdac/rolemgr.ts(76,9): jacdac._rolemgr.ServerBindings.constructor"
jacdac__rolemgr_ServerBindings_constructor__P4253_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_ServerBindings_constructor__P4253:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
    mov lr, r7
jacdac__rolemgr_ServerBindings_constructor__P4253_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_ServerBindings_constructor__P4253_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    movs r0, #0
.ret.4253:
    @stackempty locals
.final_0_258:
jacdac__rolemgr_ServerBindings_constructor__P4253_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(50,9): jacdac._rolemgr.RoleBinding.host
    ;
    .object jacdac__rolemgr_RoleBinding_host__P4247 "jacdac/rolemgr.ts(50,9): jacdac._rolemgr.RoleBinding.host"
jacdac__rolemgr_RoleBinding_host__P4247_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleBinding_host__P4247_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleBinding_host__P4247_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleBinding_host__P4247_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleBinding_host__P4247:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    mov lr, r7
jacdac__rolemgr_RoleBinding_host__P4247_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleBinding_host__P4247_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_259      
.jmpz1309:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    bl _inst_jacdac_ClientRoleQuery__C3688_validate_48
    ldr r0, [r0, #8]
    b .ret.4247      
.else_0_259:
.afterif_1_259:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_271 ; _str71      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #1
    bl _cmp_lt
    beq .else_2_259      
.jmpz1310:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    b .ret.4247      
    b .afterif_3_259      
.else_2_259:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    movs r0, #1
    push {r0} ; proc-arg
    push {r2}
    bl helpers_stringSlice__P2148
_proccall1311:
    add sp, #4*3 ; pop locals 3
    b .ret.4247      
.afterif_3_259:
    movs r0, #0
.ret.4247:
    @stackempty locals
.final_4_259:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleBinding_host__P4247_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(44,9): jacdac._rolemgr.RoleBinding.constructor
    ;
    .object jacdac__rolemgr_RoleBinding_constructor__P4249 "jacdac/rolemgr.ts(44,9): jacdac._rolemgr.RoleBinding.constructor"
jacdac__rolemgr_RoleBinding_constructor__P4249_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_RoleBinding_constructor__P4249:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
    mov lr, r7
jacdac__rolemgr_RoleBinding_constructor__P4249_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleBinding_constructor__P4249_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #16]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@3]
    str r1, [r0, #20]
    movs r0, #0
.ret.4249:
    @stackempty locals
.final_0_260:
jacdac__rolemgr_RoleBinding_constructor__P4249_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(37,9): jacdac._rolemgr.DeviceWrapper.constructor
    ;
    .object jacdac__rolemgr_DeviceWrapper_constructor__P4245 "jacdac/rolemgr.ts(37,9): jacdac._rolemgr.DeviceWrapper.constructor"
jacdac__rolemgr_DeviceWrapper_constructor__P4245_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_DeviceWrapper_constructor__P4245:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
    mov lr, r7
jacdac__rolemgr_DeviceWrapper_constructor__P4245_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_DeviceWrapper_constructor__P4245_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    negs r1, r1
    str r1, [r0, #8]
    movs r0, #0
.ret.4245:
    @stackempty locals
.final_0_261:
jacdac__rolemgr_DeviceWrapper_constructor__P4245_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/pxt-helpers.ts(230,5): helpers.arrayMap
    ;
    .object helpers_arrayMap__P2135 "core/pxt-helpers.ts(230,5): helpers.arrayMap"
helpers_arrayMap__P2135_pre:
    .section code
    .balign 4
    .section code
helpers_arrayMap__P2135:
helpers_arrayMap__P2135_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
helpers_arrayMap__P2135_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10373:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.10373      
.jmpz1312:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r2}
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    push {r1}
    ldr r0, [sp, #4*2] ; estack
    bl _lambda_call2_11
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10373:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.10373      
.brk.10373:
    ldr r0, [sp, locals@0]
.ret.2135:
    @stackempty locals
.final_0_262:
    add sp, #4*3 ; pop locals 3
helpers_arrayMap__P2135_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(809,9): jacdac.Server.log
    ;
    .object jacdac_Server_log__P4187 "jacdac/routing.ts(809,9): jacdac.Server.log"
jacdac_Server_log__P4187_pre:
    .section code
    .balign 4
jacdac_Server_log__P4187_args:
    cmp r4, #2
    bge jacdac_Server_log__P4187_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Server_log__P4187_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Server_log__P4187:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_log__P4187_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_log__P4187_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_263      
.jmpz1314:
    b .ret.4187      
.else_0_263:
.afterif_1_263:
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    ldr r7, [r6, #0]
    ldr r1, [r7, #32]
    bl _cmp_lt
    beq .else_2_263      
.jmpz1315:
    b .ret.4187      
.else_2_263:
.afterif_3_263:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617
_proccall1316:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_Device_toString__P3736
_proccall1317:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1318
    b .condexprz_4_263      
.object PUSH
.balign 4
_ldlit_270:
 .word jacdac__rolemgr_ServerBindings_fullyBound_inline__P10312_Lit
_ldlit_271:
 .word _str71
.object POP
.jmpz1318:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_273 ; _str47      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    b .condexprfin_5_263      
.condexprz_4_263:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_274 ; _str32      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_275 ; _str116      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
.condexprfin_5_263:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_276 ; _str117      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2524
_proccall1319:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.4187:
    @stackempty locals
    movs r0, #0
.final_6_263:
    add sp, #4*1 ; pop locals 1
jacdac_Server_log__P4187_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(404,9): jacdac._rolemgr.RoleManagerServer.checkChanges
    ;
    .object jacdac__rolemgr_RoleManagerServer_checkChanges__P4257 "jacdac/rolemgr.ts(404,9): jacdac._rolemgr.RoleManagerServer.checkChanges"
jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_checkChanges__P4257:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_nochk
_proccall1320:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    ldr r1, [sp, locals@0]
    bl _cmp_neqq
    beq .else_0_264      
.jmpz1321:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, _ldlit_277 ; _str82      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1322:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_sendChangeEvent__P3665_nochk
_proccall1323:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_264:
.afterif_1_264:
.ret.4257:
    @stackempty locals
    movs r0, #0
.final_2_264:
    add sp, #4*1 ; pop locals 1
jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(243,9): jacdac._rolemgr.RoleManagerServer.bindingHash
    ;
    .object jacdac__rolemgr_RoleManagerServer_bindingHash__P4256 "jacdac/rolemgr.ts(243,9): jacdac._rolemgr.RoleManagerServer.bindingHash"
jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_bindingHash__P4256:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10447:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    bne .jmpz1324
    b .brk.10447      
.jmpz1324:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #52]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_265      
.jmpz1325:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_265      
.lazySkip_1_265:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.lazy_0_265:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #16]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_265      
.jmpz1326:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_265      
.lazySkip_3_265:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #8]
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_5_265      
.jmpz1327:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_4_265      
.lazySkip_5_265:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
.lazy_4_265:
; jmp value (already in r0)
.lazy_2_265:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_7_265      
.jmpz1328:
    ldr r0, [sp, #4*0] ; tmpref @2
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_6_265      
.lazySkip_7_265:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.lazy_6_265:
; jmp value (already in r0)
    push {r0}; tmpstore @2
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, #4*3] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_278 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_278 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*4 ; pop locals 4
    str r0, [sp, locals@0]
    @stackempty locals
.cont.10447:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.10447      
.brk.10447:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #32
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::hash
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
.ret.4256:
    @stackempty locals
.final_8_265:
    add sp, #4*5 ; pop locals 5
jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_273:
 .word _str47
_ldlit_274:
 .word _str32
_ldlit_275:
 .word _str116
_ldlit_276:
 .word _str117
_ldlit_277:
 .word _str82
_ldlit_278:
 .word _str67
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(13,5): jacdac._rolemgr.setRole
    ;
    .object jacdac__rolemgr_setRole__P3481 "jacdac/rolemgr.ts(13,5): jacdac._rolemgr.setRole"
jacdac__rolemgr_setRole__P3481_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_setRole__P3481:
jacdac__rolemgr_setRole__P3481_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac__rolemgr_setRole__P3481_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_280 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_266      
.jmpz1329:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_281 ; _str6      
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl String_::indexOf
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #1
    bl _cmp_lt
    beq .condexprz_1_266      
.jmpz1330:
    ldr r0, [sp, args@2]
    b .condexprfin_2_266      
.condexprz_1_266:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl helpers_stringSubstr__P2147
_proccall1331:
    add sp, #4*3 ; pop locals 3
.condexprfin_2_266:
; jmp value (already in r0)
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl settings_writeString__P2973
_proccall1332:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_282 ; _str68      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_283 ; _str69      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_280 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2524
_proccall1333:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_3_266      
.else_0_266:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl settings_remove__P2983
_proccall1334:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #100]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_284 ; _str70      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_280 ; _str67      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl console_add__P2524
_proccall1335:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_3_266:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3619
_proccall1336:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3481:
    @stackempty locals
    movs r0, #0
.final_4_266:
    add sp, #4*3 ; pop locals 3
jacdac__rolemgr_setRole__P3481_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(166,5): settings.remove
    ;
    .object settings_remove__P2983 "settings/settings.ts(166,5): settings.remove"
settings_remove__P2983_pre:
    .section code
    .balign 4
settings_remove__P2983_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word settings_remove__P2983_args@fn
settings_remove__P2983_args:
    cmp r4, #1
    bge settings_remove__P2983_nochk
    push {lr}
    bl _expand_args_1_2
    bl settings_remove__P2983_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
settings_remove__P2983:
settings_remove__P2983_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_remove__P2983_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_remove
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    @stackempty locals
.ret.2983:
    @stackempty locals
    movs r0, #0
.final_0_267:
settings_remove__P2983_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(76,5): settings.writeString
    ;
    .object settings_writeString__P2973 "settings/settings.ts(76,5): settings.writeString"
settings_writeString__P2973_pre:
    .section code
    .balign 4
    .section code
settings_writeString__P2973:
settings_writeString__P2973_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_writeString__P2973_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl settings_writeBuffer__P2972
_proccall1337:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2973:
    @stackempty locals
    movs r0, #0
.final_0_268:
settings_writeString__P2973_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(139,9): jacdac.Bus.queueAnnounce
    ;
    .object jacdac_Bus_queueAnnounce__P3621 "jacdac/routing.ts(139,9): jacdac.Bus.queueAnnounce"
jacdac_Bus_queueAnnounce__P3621_pre:
    .section code
    .balign 4
jacdac_Bus_queueAnnounce__P3621_args:
    cmp r4, #1
    bge jacdac_Bus_queueAnnounce__P3621_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_queueAnnounce__P3621_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_queueAnnounce__P3621:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_queueAnnounce__P3621_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_queueAnnounce__P3621_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, _ldlit_285 ; ids_inline__P10578_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayMap__P2135
_proccall1338:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    movs r1, #31
    bl _cmp_lt
    beq .else_0_269      
.jmpz1339:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #20]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_269:
.afterif_1_269:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_269      
.jmpz1340:
    movs r0, #16
    lsls r0, r0, #8
    adds r0, #1
    b .condexprfin_3_269      
.condexprz_2_269:
    movs r0, #1
.condexprfin_3_269:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    ldr r1, [sp, #4*1] ; tmpref @1
    bl _numops_orrs
    movs r1, #2
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    movs r1, #4
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    movs r1, #8
    lsls r1, r1, #8
    adds r1, #1
    bl _numops_orrs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r2, [sp, #4*0] ; estack
    movs r1, #1
    bl _pxt_array_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10615:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10615      
.jmpz1341:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_73
    movs r1, #11
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.10615:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.10615      
.object PUSH
.balign 4
_ldlit_280:
 .word _str67
_ldlit_281:
 .word _str6
_ldlit_282:
 .word _str68
_ldlit_283:
 .word _str69
_ldlit_284:
 .word _str70
_ldlit_285:
 .word ids_inline__P10578_Lit
.object POP
.brk.10615:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P3068
_proccall1342:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall1343:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendReport__P3109
_proccall1344:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall1345:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #48]
    str r0, [sp, locals@4]
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
.fortop.10643:
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10643      
.jmpz1346:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@3]
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r1, #40
    bl _classCall_jacdac_Client__C3696_74
_proccall1347:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.10643:
    ldr r0, [sp, locals@5]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@5]
    b .fortop.10643      
.brk.10643:
    movs r0, #0
    str r0, [sp, locals@4]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_gcDevices__P4269_nochk
_proccall1348:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    ldr r0, [r0, #32]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_6_269      
.jmpz1349:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_269      
.lazySkip_6_269:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
.lazy_5_269:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_269      
.jmpz1350:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, #0]      
    ldr r0, _ldlit_287 ; _str41      
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall1351:
    add sp, #4*2 ; pop locals 2
    push {r0} ; the one arg
    movs r0, #65
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P3068
_proccall1352:
    add sp, #4*2 ; pop locals 2
    mov r3, r0
    movs r0, #1
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_sendAsMultiCommand__P3112
_proccall1353:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_269:
.afterif_7_269:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    ldr r0, [r0, #72]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_10_269      
.jmpz1354:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_269      
.lazySkip_10_269:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    ldr r0, [r0, #32]
.lazy_9_269:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_269      
.jmpz1355:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #28]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #28]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #28]
    movs r1, #5
    bl _cmp_ge
    beq .else_11_269      
.jmpz1356:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    @stackempty locals
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac__rolemgr_RoleManagerServer_bindRoles__P3486
_proccall1357:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_11_269:
.afterif_12_269:
.else_8_269:
.afterif_13_269:
.ret.3621:
    @stackempty locals
    movs r0, #0
.final_14_269:
    add sp, #4*6 ; pop locals 6
jacdac_Bus_queueAnnounce__P3621_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(140,42): ids.inline
    ;
    .object ids_inline__P10578 "jacdac/routing.ts(140,42): ids.inline"
ids_inline__P10578_pre:
    .section code
    .balign 4
ids_inline__P10578_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word ids_inline__P10578_args@fn
ids_inline__P10578_args:
    cmp r4, #1
    bge ids_inline__P10578_nochk
    push {lr}
    bl _expand_args_1_2
    bl ids_inline__P10578_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
ids_inline__P10578:
ids_inline__P10578_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
ids_inline__P10578_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_270      
.jmpz1358:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Server__C3646_validate_39
    ldr r0, [r0, #64]
    b .condexprfin_1_270      
.condexprz_0_270:
    movs r0, #1
    negs r0, r0
.condexprfin_1_270:
; jmp value (already in r0)
.ret.10578:
    @stackempty locals
.final_2_270:
ids_inline__P10578_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(318,9): jacdac.JDPacket.sendAsMultiCommand
    ;
    .object jacdac_JDPacket_sendAsMultiCommand__P3112 "jacdac/packet.ts(318,9): jacdac.JDPacket.sendAsMultiCommand"
jacdac_JDPacket_sendAsMultiCommand__P3112_pre:
    .section code
    .balign 4
jacdac_JDPacket_sendAsMultiCommand__P3112_args:
    cmp r4, #2
    bge jacdac_JDPacket_sendAsMultiCommand__P3112_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket_sendAsMultiCommand__P3112_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket_sendAsMultiCommand__P3112:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_sendAsMultiCommand__P3112_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_sendAsMultiCommand__P3112_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    movs r1, #11
    bl _numops_orrs
    push {r0} ; proc-arg
    bl _conv_36
    movs r1, #7
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_56
    movs r1, #11
    movs r2, #4
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #11
    movs r2, #8
    ldr r3, _ldlit_288 ; _dbl38      
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #123
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3084_nochk
_proccall1359:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCore__P3108_nochk
_proccall1360:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3112:
    @stackempty locals
    movs r0, #0
.final_0_271:
jacdac_JDPacket_sendAsMultiCommand__P3112_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(81,9): jacdac.Bus.gcDevices
    ;
    .object jacdac_Bus_gcDevices__P4269 "jacdac/routing.ts(81,9): jacdac.Bus.gcDevices"
jacdac_Bus_gcDevices__P4269_pre:
    .section code
    .balign 4
jacdac_Bus_gcDevices__P4269_args:
    cmp r4, #1
    bge jacdac_Bus_gcDevices__P4269_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_gcDevices__P4269_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_gcDevices__P4269:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_gcDevices__P4269_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_Bus_gcDevices__P4269_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    movs r1, #15
    lsls r1, r1, #8
    adds r1, #161
    bl _numops_subs
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_selfDevice__P3617_nochk
_proccall1361:
    add sp, #4*1 ; pop locals 1
    ldr r1, [sp, locals@0]
    bl _inst_jacdac_Device__C3724_validate_33
    str r1, [r0, #8]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.10714:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10714      
.jmpz1362:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_array_get
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@4]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #8]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .else_0_272      
.jmpz1363:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arraySplice__P2129
_proccall1364:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_subs
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl jacdac_Device__destroy__P3749
_proccall1365:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
.else_0_272:
.afterif_1_272:
.cont.10714:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.10714      
.brk.10714:
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_272      
.jmpz1366:
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #192
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall1367:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778_nochk
_proccall1368:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_2_272:
.afterif_3_272:
.ret.4269:
    @stackempty locals
    movs r0, #0
.final_4_272:
    add sp, #4*5 ; pop locals 5
jacdac_Bus_gcDevices__P4269_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1292,9): jacdac.Client.announceCallback
    ;
    .object jacdac_Client_announceCallback__P3722 "jacdac/routing.ts(1292,9): jacdac.Client.announceCallback"
jacdac_Client_announceCallback__P3722_pre:
    .section code
    .balign 4
jacdac_Client_announceCallback__P3722_args:
    cmp r4, #1
    bge jacdac_Client_announceCallback__P3722_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Client_announceCallback__P3722_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Client_announceCallback__P3722:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Client__C3696_validate_31
    mov lr, r7
jacdac_Client_announceCallback__P3722_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Client_announceCallback__P3722_locals:
.ret.3722:
    @stackempty locals
    movs r0, #0
.final_0_273:
jacdac_Client_announceCallback__P3722_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(135,9): jacdac.Bus.isClient
    ;
    .object jacdac_Bus_isClient__P3620 "jacdac/routing.ts(135,9): jacdac.Bus.isClient"
jacdac_Bus_isClient__P3620_pre:
    .section code
    .balign 4
jacdac_Bus_isClient__P3620_args:
    cmp r4, #1
    bge jacdac_Bus_isClient__P3620_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_isClient__P3620_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_isClient__P3620:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_isClient__P3620_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_isClient__P3620_locals:
    movs r0, #184
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    ldr r0, [r0, #32]
.ret.3620:
    @stackempty locals
.final_0_274:
jacdac_Bus_isClient__P3620_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_287:
 .word _str41
_ldlit_288:
 .word _dbl38
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1908,5): jacdac.consumePackets
    ;
    .object jacdac_consumePackets__P4323 "jacdac/routing.ts(1908,5): jacdac.consumePackets"
jacdac_consumePackets__P4323_pre:
    .section code
    .balign 4
jacdac_consumePackets__P4323_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_consumePackets__P4323_args@fn
jacdac_consumePackets__P4323_args:
    .section code
jacdac_consumePackets__P4323:
jacdac_consumePackets__P4323_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_consumePackets__P4323_locals:
.cont.10753:
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physGetPacket
    push {r0}; tmpstore @1
    str r0, [sp, locals@0]
    movs r0, #6
    pop {r1} ; tmpref @1
    bl _cmp_neq
    beq .brk.10753      
.jmpz1369:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_fromBinary__P3067
_proccall1370:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physGetTimestamp
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C3062_validate_35
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_processPacket__P3627
_proccall1371:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .cont.10753      
.brk.10753:
.ret.4323:
    @stackempty locals
    movs r0, #0
.final_0_275:
    add sp, #4*2 ; pop locals 2
jacdac_consumePackets__P4323_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(50,9): jacdac.JDPacket.fromBinary
    ;
    .object jacdac_JDPacket_fromBinary__P3067 "jacdac/packet.ts(50,9): jacdac.JDPacket.fromBinary"
jacdac_JDPacket_fromBinary__P3067_pre:
    .section code
    .balign 4
jacdac_JDPacket_fromBinary__P3067_args:
    cmp r4, #1
    bge jacdac_JDPacket_fromBinary__P3067_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_fromBinary__P3067_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_fromBinary__P3067:
jacdac_JDPacket_fromBinary__P3067_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_fromBinary__P3067_locals:
    ldr r0, _ldlit_290 ; jacdac_JDPacket__C3062_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_JDPacket_constructor__P4124
_proccall1372:
    add sp, #4*1 ; pop locals 1
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #0
    movs r2, #16
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C3062_validate_35
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_44
    movs r1, #16
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_JDPacket__C3062_validate_35
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
.ret.3067:
    @stackempty locals
.final_0_276:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_fromBinary__P3067_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(178,9): jacdac._rolemgr.RoleManagerServer.constructor
    ;
    .object jacdac__rolemgr_RoleManagerServer_constructor__P3484 "jacdac/rolemgr.ts(178,9): jacdac._rolemgr.RoleManagerServer.constructor"
jacdac__rolemgr_RoleManagerServer_constructor__P3484_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_RoleManagerServer_constructor__P3484:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_constructor__P3484_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_constructor__P3484_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #72]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_291 ; 1016528077      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3650
_proccall1373:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3484:
    @stackempty locals
.final_0_277:
jacdac__rolemgr_RoleManagerServer_constructor__P3484_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(429,9): jacdac.Server.constructor
    ;
    .object jacdac_Server_constructor__P3650 "jacdac/routing.ts(429,9): jacdac.Server.constructor"
jacdac_Server_constructor__P3650_pre:
    .section code
    .balign 4
    .section code
jacdac_Server_constructor__P3650:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_constructor__P3650_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_constructor__P3650_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #64]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3775
_proccall1374:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1375
    b .else_0_278      
.jmpz1375:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #121
    bl _ifacecall1_get_54
_proccall1376:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #248
    bl _ifacecall1_get_54
_proccall1377:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #60]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #235
    bl _ifacecall1_get_54
_proccall1379:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_278      
.jmpz1378:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #235
    bl _ifacecall1_get_54
_proccall1380:
    add sp, #4*1 ; pop locals 1
    ldr r1, _ldlit_292 ; 131071      
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_1_278:
.afterif_2_278:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #123
    bl _ifacecall1_get_54
_proccall1381:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #20]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #246
    bl _ifacecall1_get_54
_proccall1382:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_3_278      
.jmpz1383:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #122
    bl _ifacecall1_get_54
_proccall1385:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_278      
.jmpz1384:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_278      
.lazySkip_6_278:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_5_278:
; jmp value (already in r0)
    b .condexprfin_4_278      
.condexprz_3_278:
    movs r0, #0
.condexprfin_4_278:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #56]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #16]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_7_278      
.jmpz1386:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #245
    bl _ifacecall1_get_54
_proccall1388:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_278      
.jmpz1387:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_278      
.lazySkip_10_278:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_9_278:
; jmp value (already in r0)
    b .condexprfin_8_278      
.condexprz_7_278:
    movs r0, #0
.condexprfin_8_278:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #52]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #59
    bl _ifacecall1_get_54
_proccall1389:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    movs r1, #68
    bl _ifacecall1_get_54
_proccall1390:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #24]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_0_278:
.afterif_11_278:
    movs r0, #0
.ret.3650:
    @stackempty locals
.final_12_278:
jacdac_Server_constructor__P3650_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(6,9): jacdac.LoggerServer.constructor
    ;
    .object jacdac_LoggerServer_constructor__P3361 "jacdac/logger-server/server.ts(6,9): jacdac.LoggerServer.constructor"
jacdac_LoggerServer_constructor__P3361_pre:
    .section code
    .balign 4
    .section code
jacdac_LoggerServer_constructor__P3361:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3359_validate_75
    mov lr, r7
jacdac_LoggerServer_constructor__P3361_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_LoggerServer_constructor__P3361_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #68]
    ldr r0, [sp, args@0]
    movs r1, #9
    str r1, [r0, #72]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_293 ; 632831893      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3650
_proccall1391:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #68]
    @stackempty locals
    movs r0, #0
.ret.3361:
    @stackempty locals
.final_0_279:
jacdac_LoggerServer_constructor__P3361_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(58,9): jacdac.LoggerServer.add
    ;
    .object jacdac_LoggerServer_add__P3367 "jacdac/logger-server/server.ts(58,9): jacdac.LoggerServer.add"
jacdac_LoggerServer_add__P3367_pre:
    .section code
    .balign 4
jacdac_LoggerServer_add__P3367_args:
    cmp r4, #3
    bge jacdac_LoggerServer_add__P3367_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_LoggerServer_add__P3367_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
.object PUSH
.balign 4
_ldlit_290:
 .word jacdac_JDPacket__C3062_VT
_ldlit_291:
 .word 1016528077
_ldlit_292:
 .word 131071
_ldlit_293:
 .word 632831893
.object POP
    .section code
jacdac_LoggerServer_add__P3367:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3359_validate_75
    mov lr, r7
jacdac_LoggerServer_add__P3367_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_LoggerServer_add__P3367_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_280      
.jmpz1392:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_280      
.lazySkip_2_280:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_1_280:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_280      
.jmpz1393:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_280      
.lazySkip_4_280:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_3_280:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_280      
.jmpz1394:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_280      
.lazySkip_6_280:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_running__P3614
_proccall1395:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_5_280:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_280      
.jmpz1396:
    b .ret.3367      
.else_0_280:
.afterif_7_280:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_10_280      
.jmpz1397:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_9_280      
.lazySkip_10_280:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_9_280:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_280      
.jmpz1398:
    b .ret.3367      
.else_8_280:
.afterif_11_280:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    movs r1, #23
    lsls r1, r1, #8
    adds r1, #113
    bl _cmp_gt
    beq .else_12_280      
.jmpz1399:
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #68]
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #9
    str r1, [r0, #72]
    @stackempty locals
    b .ret.3367      
.else_12_280:
.afterif_13_280:
    movs r0, #0
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #217
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl Buffer_chunkedFromUTF8__P2798
_proccall1400:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.10899:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.10899      
.jmpz1401:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, args@1]
    bl _numops_adds
    mov r3, r0
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P3068
_proccall1402:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1403:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.10899:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    b .fortop.10899      
.brk.10899:
    movs r0, #0
    str r0, [sp, locals@1]
.ret.3367:
    @stackempty locals
    movs r0, #0
.final_14_280:
    add sp, #4*3 ; pop locals 3
jacdac_LoggerServer_add__P3367_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(380,5): Buffer.chunkedFromUTF8
    ;
    .object Buffer_chunkedFromUTF8__P2798 "core/buffer.ts(380,5): Buffer.chunkedFromUTF8"
Buffer_chunkedFromUTF8__P2798_pre:
    .section code
    .balign 4
    .section code
Buffer_chunkedFromUTF8__P2798:
Buffer_chunkedFromUTF8__P2798_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Buffer_chunkedFromUTF8__P2798_locals:
    ldr r0, [sp, args@1]
    movs r1, #7
    bl _cmp_lt
    beq .else_0_281      
.jmpz1404:
    ldr r0, _ldlit_295 ; _str20      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_0_281:
.afterif_1_281:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@1]
    @stackempty locals
.cont.10912:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    beq .brk.10912      
.jmpz1405:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl Buffer_chunkLen__P4010
_proccall1406:
    add sp, #4*3 ; pop locals 3
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P2148
_proccall1407:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    str r0, [sp, locals@1]
    @stackempty locals
    b .cont.10912      
.brk.10912:
    ldr r0, [sp, locals@0]
.ret.2798:
    @stackempty locals
.final_2_281:
    add sp, #4*3 ; pop locals 3
Buffer_chunkedFromUTF8__P2798_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(359,5): Buffer.chunkLen
    ;
    .object Buffer_chunkLen__P4010 "core/buffer.ts(359,5): Buffer.chunkLen"
Buffer_chunkLen__P4010_pre:
    .section code
    .balign 4
    .section code
Buffer_chunkLen__P4010:
Buffer_chunkLen__P4010_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
Buffer_chunkLen__P4010_locals:
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_29
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::idiv
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@2]
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P2148
_proccall1409:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_0_282      
.jmpz1408:
    ldr r0, [sp, locals@1]
    b .ret.4010      
.else_0_282:
.afterif_1_282:
.cont.10960:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _cmp_lt
    beq .brk.10960      
.jmpz1410:
    ldr r0, [sp, locals@0]
    ldr r1, [sp, locals@1]
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #3
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    ldr r1, [sp, locals@0]
    bl _cmp_eq
    beq .else_2_282      
.jmpz1411:
    b .brk.10960      
.else_2_282:
.afterif_3_282:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl helpers_stringSlice__P2148
_proccall1412:
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBufferFromUTF8
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@3]
    ldr r1, [sp, args@2]
    bl _cmp_le
    beq .else_4_282      
.jmpz1413:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_5_282      
.else_4_282:
    ldr r0, [sp, locals@2]
    str r0, [sp, locals@1]
    @stackempty locals
.afterif_5_282:
    b .cont.10960      
.brk.10960:
    ldr r0, [sp, locals@0]
.ret.4010:
    @stackempty locals
.final_6_282:
    add sp, #4*4 ; pop locals 4
Buffer_chunkLen__P4010_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/console.ts(115,5): console.addListener
    ;
    .object console_addListener__P2531 "core/console.ts(115,5): console.addListener"
console_addListener__P2531_pre:
    .section code
    .balign 4
    .section code
console_addListener__P2531:
console_addListener__P2531_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
console_addListener__P2531_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_283      
.jmpz1414:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #36]
    @stackempty locals
.else_0_283:
.afterif_1_283:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_283      
.jmpz1415:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_283      
.lazySkip_4_283:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::indexOf
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #1
    negs r1, r1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_3_283:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_283      
.jmpz1416:
    b .ret.2531      
.else_2_283:
.afterif_5_283:
    ldr r7, [r6, #0]
    ldr r0, [r7, #36]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.2531:
    @stackempty locals
    movs r0, #0
.final_6_283:
console_addListener__P2531_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1617,9): jacdac.ProxyServer.constructor
    ;
    .object jacdac_ProxyServer_constructor__P4295 "jacdac/routing.ts(1617,9): jacdac.ProxyServer.constructor"
jacdac_ProxyServer_constructor__P4295_pre:
    .section code
    .balign 4
    .section code
jacdac_ProxyServer_constructor__P4295:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ProxyServer__C4293_validate_76
    mov lr, r7
jacdac_ProxyServer_constructor__P4295_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ProxyServer_constructor__P4295_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_296 ; 769864339      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3650
_proccall1417:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.4295:
    @stackempty locals
.final_0_284:
jacdac_ProxyServer_constructor__P4295_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1623,9): jacdac.BrainServer.constructor
    ;
    .object jacdac_BrainServer_constructor__P4298 "jacdac/routing.ts(1623,9): jacdac.BrainServer.constructor"
jacdac_BrainServer_constructor__P4298_pre:
    .section code
    .balign 4
    .section code
jacdac_BrainServer_constructor__P4298:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_BrainServer__C4296_validate_77
    mov lr, r7
jacdac_BrainServer_constructor__P4298_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_BrainServer_constructor__P4298_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    movs r0, #0
    push {r0} ; proc-arg
    ldr r0, _ldlit_297 ; 544775627      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3650
_proccall1418:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.4298:
    @stackempty locals
.final_0_285:
jacdac_BrainServer_constructor__P4298_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(792,9): jacdac.Server.start
    ;
    .object jacdac_Server_start__P3667 "jacdac/routing.ts(792,9): jacdac.Server.start"
jacdac_Server_start__P3667_pre:
    .section code
    .balign 4
jacdac_Server_start__P3667_args:
    cmp r4, #1
    bge jacdac_Server_start__P3667_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_start__P3667_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
.object PUSH
.balign 4
_ldlit_295:
 .word _str20
_ldlit_296:
 .word 769864339
_ldlit_297:
 .word 544775627
.object POP
    .section code
jacdac_Server_start__P3667:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_start__P3667_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_start__P3667_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #32]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_286      
.jmpz1419:
    b .ret.3667      
.else_0_286:
.afterif_1_286:
    ldr r0, [sp, args@0]
    movs r1, #66
    str r1, [r0, #32]
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    bl jacdac_start__P3759
_proccall1420:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_addServer__P3616
_proccall1421:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, _ldlit_299 ; _str115      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1422:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3667:
    @stackempty locals
    movs r0, #0
.final_2_286:
jacdac_Server_start__P3667_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(76,9): jacdac.Bus.addServer
    ;
    .object jacdac_Bus_addServer__P3616 "jacdac/routing.ts(76,9): jacdac.Bus.addServer"
jacdac_Bus_addServer__P3616_pre:
    .section code
    .balign 4
jacdac_Bus_addServer__P3616_args:
    cmp r4, #2
    bge jacdac_Bus_addServer__P3616_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_Bus_addServer__P3616_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_Bus_addServer__P3616:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_addServer__P3616_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_addServer__P3616_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_Server__C3646_validate_39
    str r1, [r0, #36]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3616:
    @stackempty locals
    movs r0, #0
.final_0_287:
jacdac_Bus_addServer__P3616_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1808,5): jacdac.enableIdentityLED
    ;
    .object jacdac_enableIdentityLED__P4319 "jacdac/routing.ts(1808,5): jacdac.enableIdentityLED"
jacdac_enableIdentityLED__P4319_pre:
    .section code
    .balign 4
    .section code
jacdac_enableIdentityLED__P4319:
jacdac_enableIdentityLED__P4319_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enableIdentityLED__P4319_locals:
    movs r0, #6
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_288      
.jmpz1423:
    ldr r0, _ldlit_300 ; _str139      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall1424:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, _ldlit_301 ; jacdac_enableIdentityLED_inline__P11046_Lit      
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3776
_proccall1425:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_288:
.afterif_1_288:
.ret.4319:
    @stackempty locals
    movs r0, #0
.final_2_288:
jacdac_enableIdentityLED__P4319_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1811,30): jacdac.enableIdentityLED.inline
    ;
    .object jacdac_enableIdentityLED_inline__P11046 "jacdac/routing.ts(1811,30): jacdac.enableIdentityLED.inline"
jacdac_enableIdentityLED_inline__P11046_pre:
    .section code
    .balign 4
jacdac_enableIdentityLED_inline__P11046_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enableIdentityLED_inline__P11046_args@fn
jacdac_enableIdentityLED_inline__P11046_args:
    .section code
jacdac_enableIdentityLED_inline__P11046:
jacdac_enableIdentityLED_inline__P11046_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enableIdentityLED_inline__P11046_locals:
    ldr r0, _ldlit_302 ; jacdac_enableIdentityLED_inline__P11048_Lit      
    push {r0} ; proc-arg
    bl control_runInBackground__P2442
_proccall1426:
    add sp, #4*1 ; pop locals 1
.ret.11046:
    @stackempty locals
    movs r0, #0
.final_0_289:
jacdac_enableIdentityLED_inline__P11046_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1812,41): jacdac.enableIdentityLED.inline
    ;
    .object jacdac_enableIdentityLED_inline__P11048 "jacdac/routing.ts(1812,41): jacdac.enableIdentityLED.inline"
jacdac_enableIdentityLED_inline__P11048_pre:
    .section code
    .balign 4
jacdac_enableIdentityLED_inline__P11048_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enableIdentityLED_inline__P11048_args@fn
jacdac_enableIdentityLED_inline__P11048_args:
    .section code
jacdac_enableIdentityLED_inline__P11048:
jacdac_enableIdentityLED_inline__P11048_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_enableIdentityLED_inline__P11048_locals:
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.fortop.11050:
    ldr r0, [sp, locals@0]
    movs r1, #15
    bl _cmp_lt
    beq .brk.11050      
.jmpz1427:
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P4316
_proccall1428:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #101
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1429:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #27
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P4316
_proccall1430:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #45
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1431:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.cont.11050:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    b .fortop.11050      
.brk.11050:
.ret.11048:
    @stackempty locals
    movs r0, #0
.final_0_290:
    add sp, #4*1 ; pop locals 1
jacdac_enableIdentityLED_inline__P11048_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1771,5): jacdac.setPinByCfg
    ;
    .object jacdac_setPinByCfg__P4316 "jacdac/routing.ts(1771,5): jacdac.setPinByCfg"
jacdac_setPinByCfg__P4316_pre:
    .section code
    .balign 4
    .section code
jacdac_setPinByCfg__P4316:
jacdac_setPinByCfg__P4316_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_setPinByCfg__P4316_locals:
    movs r0, #6
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_291      
.jmpz1432:
    b .ret.4316      
.else_0_291:
.afterif_1_291:
    movs r0, #1
    ldr r1, _ldlit_303 ; 131073      
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_291      
.jmpz1433:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    str r0, [sp, args@1]
    @stackempty locals
.else_2_291:
.afterif_3_291:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #78
    bl _ifacecall2__62
_proccall1434:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4316:
    @stackempty locals
    movs r0, #0
.final_4_291:
    add sp, #4*1 ; pop locals 1
jacdac_setPinByCfg__P4316_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1785,5): jacdac.enablePowerFaultPin
    ;
    .object jacdac_enablePowerFaultPin__P4318 "jacdac/routing.ts(1785,5): jacdac.enablePowerFaultPin"
jacdac_enablePowerFaultPin__P4318_pre:
    .section code
    .balign 4
    .section code
jacdac_enablePowerFaultPin__P4318:
jacdac_enablePowerFaultPin__P4318_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_enablePowerFaultPin__P4318_locals:
    movs r0, #6
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_293      
.jmpz1435:
    ldr r0, _ldlit_304 ; _str137      
    push {r0} ; proc-arg
    bl jacdac_log__P4275
_proccall1436:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #223
    bl _ifacecall2__62
_proccall1437:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #77
    bl _ifacecall1__28
_proccall1438:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_305 ; jacdac_enablePowerFaultPin_inline__P11096_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    movs r0, #188
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3776
_proccall1439:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_293:
.afterif_1_293:
.ret.4318:
    @stackempty locals
    movs r0, #0
.final_2_293:
    add sp, #4*1 ; pop locals 1
jacdac_enablePowerFaultPin__P4318_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1793,42): jacdac.enablePowerFaultPin.inline
    ;
    .object jacdac_enablePowerFaultPin_inline__P11096 "jacdac/routing.ts(1793,42): jacdac.enablePowerFaultPin.inline"
jacdac_enablePowerFaultPin_inline__P11096_pre:
    .section code
    .balign 4
jacdac_enablePowerFaultPin_inline__P11096_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enablePowerFaultPin_inline__P11096_args@fn
jacdac_enablePowerFaultPin_inline__P11096_args:
    .section code
jacdac_enablePowerFaultPin_inline__P11096:
jacdac_enablePowerFaultPin_inline__P11096_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enablePowerFaultPin_inline__P11096_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    movs r1, #77
    bl _ifacecall1__28
_proccall1441:
    add sp, #4*1 ; pop locals 1
    movs r1, #10
    bl _cmp_eq
    beq .else_0_294      
.jmpz1440:
    ldr r0, _ldlit_306 ; jacdac_enablePowerFaultPin_inline__P11100_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2441
_proccall1442:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_294:
.afterif_1_294:
.ret.11096:
    @stackempty locals
    movs r0, #0
.final_2_294:
jacdac_enablePowerFaultPin_inline__P11096_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1795,43): jacdac.enablePowerFaultPin.inline
    ;
    .object jacdac_enablePowerFaultPin_inline__P11100 "jacdac/routing.ts(1795,43): jacdac.enablePowerFaultPin.inline"
jacdac_enablePowerFaultPin_inline__P11100_pre:
    .section code
    .balign 4
jacdac_enablePowerFaultPin_inline__P11100_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_enablePowerFaultPin_inline__P11100_args@fn
jacdac_enablePowerFaultPin_inline__P11100_args:
    .section code
jacdac_enablePowerFaultPin_inline__P11100:
jacdac_enablePowerFaultPin_inline__P11100_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enablePowerFaultPin_inline__P11100_locals:
    ldr r0, _ldlit_307 ; _str138      
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    bl jacdac_enablePower__P4317
_proccall1443:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #159
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P4316
_proccall1444:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1445:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    push {r0} ; proc-arg
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #159
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P4316
_proccall1446:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #66
    push {r0} ; proc-arg
    bl jacdac_enablePower__P4317
_proccall1447:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.11100:
    @stackempty locals
    movs r0, #0
.final_0_295:
jacdac_enablePowerFaultPin_inline__P11100_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1779,5): jacdac.enablePower
    ;
    .object jacdac_enablePower__P4317 "jacdac/routing.ts(1779,5): jacdac.enablePower"
jacdac_enablePower__P4317_pre:
    .section code
    .balign 4
    .section code
jacdac_enablePower__P4317:
jacdac_enablePower__P4317_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_enablePower__P4317_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #161
    push {r0} ; proc-arg
    bl jacdac_setPinByCfg__P4316
_proccall1448:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.4317:
    @stackempty locals
    movs r0, #0
.final_0_296:
jacdac_enablePower__P4317_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(69,9): jacdac.Bus.start
    ;
    .object jacdac_Bus_start__P3615 "jacdac/routing.ts(69,9): jacdac.Bus.start"
jacdac_Bus_start__P3615_pre:
    .section code
    .balign 4
jacdac_Bus_start__P3615_args:
    cmp r4, #1
    bge jacdac_Bus_start__P3615_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_start__P3615_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_start__P3615:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_start__P3615_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_start__P3615_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Bus_running__P3614_nochk
_proccall1450:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_297      
.jmpz1449:
    b .ret.3615      
    b .afterif_1_297      
.object PUSH
.balign 4
_ldlit_299:
 .word _str115
_ldlit_300:
 .word _str139
_ldlit_301:
 .word jacdac_enableIdentityLED_inline__P11046_Lit
_ldlit_302:
 .word jacdac_enableIdentityLED_inline__P11048_Lit
_ldlit_303:
 .word 131073
_ldlit_304:
 .word _str137
_ldlit_305:
 .word jacdac_enablePowerFaultPin_inline__P11096_Lit
_ldlit_306:
 .word jacdac_enablePowerFaultPin_inline__P11100_Lit
_ldlit_307:
 .word _str138
.object POP
.else_0_297:
.afterif_1_297:
    ldr r0, _ldlit_309 ; jacdac_ControlServer__C3750_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    bl jacdac_ControlServer_constructor__P3751
_proccall1451:
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    pop {r1} ; tmpref @1
    str r1, [r0, #36]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; the one arg
    bl jacdac_Server_start__P3667
_proccall1452:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3615:
    @stackempty locals
    movs r0, #0
.final_2_297:
jacdac_Bus_start__P3615_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1629,9): jacdac.ControlServer.constructor
    ;
    .object jacdac_ControlServer_constructor__P3751 "jacdac/routing.ts(1629,9): jacdac.ControlServer.constructor"
jacdac_ControlServer_constructor__P3751_pre:
    .section code
    .balign 4
    .section code
jacdac_ControlServer_constructor__P3751:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3750_validate_78
    mov lr, r7
jacdac_ControlServer_constructor__P3751_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ControlServer_constructor__P3751_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #44]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #48]
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_constructor__P3650
_proccall1453:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #0
.ret.3751:
    @stackempty locals
.final_0_298:
jacdac_ControlServer_constructor__P3751_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(65,9): jacdac.Bus.running
    ;
    .object jacdac_Bus_running__P3614 "jacdac/routing.ts(65,9): jacdac.Bus.running"
jacdac_Bus_running__P3614_pre:
    .section code
    .balign 4
jacdac_Bus_running__P3614_args:
    cmp r4, #1
    bge jacdac_Bus_running__P3614_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Bus_running__P3614_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Bus_running__P3614:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_running__P3614_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_running__P3614_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.3614:
    @stackempty locals
.final_0_300:
jacdac_Bus_running__P3614_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/control.ts(11,5): control.runInParallel
    ;
    .object control_runInParallel__P2441 "core/control.ts(11,5): control.runInParallel"
control_runInParallel__P2441_pre:
    .section code
    .balign 4
    .section code
control_runInParallel__P2441:
control_runInParallel__P2441_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
control_runInParallel__P2441_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_57
    mov r7, sp
    str r7, [r6, #4]
    bl control::inBackground
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.2441:
    @stackempty locals
    movs r0, #0
.final_0_301:
control_runInParallel__P2441_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1881,5): jacdac.startProxy
    ;
    .object jacdac_startProxy__P4321 "jacdac/routing.ts(1881,5): jacdac.startProxy"
jacdac_startProxy__P4321_pre:
    .section code
    .balign 4
    .section code
jacdac_startProxy__P4321:
jacdac_startProxy__P4321_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_startProxy__P4321_locals:
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_exists__P2984
_proccall1454:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_302      
.jmpz1455:
    movs r0, #200
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_remove__P2983
_proccall1456:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_302:
.afterif_1_302:
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    bl settings_exists__P2984
_proccall1458:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_302      
.jmpz1457:
    b .ret.4321      
.else_2_302:
.afterif_3_302:
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_4_302      
.jmpz1459:
    ldr r0, _ldlit_310 ; _str143      
    b .condexprfin_5_302      
.condexprz_4_302:
    ldr r0, _ldlit_311 ; _str144      
.condexprfin_5_302:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_312 ; _str142      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_313 ; _str109      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    bl settings_remove__P2983
_proccall1460:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mkMap
    push {r0}; tmpstore @1
    movs r1, #80
    movs r2, #10
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #81
    movs r2, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #158
    movs r2, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #174
    movs r2, #66
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    ldr r0, [sp, #0]      
    bl jacdac_start__P3759
_proccall1461:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_302      
.jmpz1462:
    bl jacdac_proxyLoop__P4320
_proccall1463:
    @stackempty locals
.else_6_302:
.afterif_7_302:
.ret.4321:
    @stackempty locals
    movs r0, #0
.final_8_302:
    add sp, #4*1 ; pop locals 1
jacdac_startProxy__P4321_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1829,5): jacdac.proxyLoop
    ;
    .object jacdac_proxyLoop__P4320 "jacdac/routing.ts(1829,5): jacdac.proxyLoop"
jacdac_proxyLoop__P4320_pre:
    .section code
    .balign 4
    .section code
jacdac_proxyLoop__P4320:
jacdac_proxyLoop__P4320_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_proxyLoop__P4320_locals:
    ldr r0, _ldlit_314 ; jacdac_proxyLoop_inline__P11171_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #40]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3776
_proccall1464:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778
_proccall1465:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
    bl jacdac_isSimulator__P3754
_proccall1466:
    str r0, [sp, locals@1]
    @stackempty locals
.cont.11185:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1467
    b .brk.11185      
.jmpz1467:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_303      
.jmpz1468:
    ldr r0, _ldlit_315 ; 122881      
    b .condexprfin_1_303      
.condexprz_0_303:
    movs r0, #44
    lsls r0, r0, #8
    adds r0, #1
.condexprfin_1_303:
; jmp value (already in r0)
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_303      
.jmpz1469:
    ldr r0, _ldlit_315 ; 122881      
    b .condexprfin_3_303      
.condexprz_2_303:
    movs r0, #8
    lsls r0, r0, #8
    adds r0, #1
.condexprfin_3_303:
; jmp value (already in r0)
    str r0, [sp, locals@4]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #63
    bl _numops_ands
    movs r1, #33
    bl _numops_subs
    push {r0} ; the one arg
    bl Math_abs__P2157
_proccall1470:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    movs r1, #31
    bl _cmp_gt
    beq .else_4_303      
.jmpz1471:
    movs r0, #31
    str r0, [sp, locals@2]
    @stackempty locals
    b .afterif_5_303      
.object PUSH
.balign 4
_ldlit_309:
 .word jacdac_ControlServer__C3750_VT
_ldlit_310:
 .word _str143
_ldlit_311:
 .word _str144
_ldlit_312:
 .word _str142
_ldlit_313:
 .word _str109
_ldlit_314:
 .word jacdac_proxyLoop_inline__P11171_Lit
_ldlit_315:
 .word 122881
.object POP
.else_4_303:
.afterif_5_303:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@4]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #9
    bl _numops_asrs
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@5]
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl jacdac_setLed__P3765
_proccall1472:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #201
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1473:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.11185      
.brk.11185:
.ret.4320:
    @stackempty locals
    movs r0, #0
.final_6_303:
    add sp, #4*6 ; pop locals 6
jacdac_proxyLoop__P4320_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1830,39): jacdac.proxyLoop.inline
    ;
    .object jacdac_proxyLoop_inline__P11171 "jacdac/routing.ts(1830,39): jacdac.proxyLoop.inline"
jacdac_proxyLoop_inline__P11171_pre:
    .section code
    .balign 4
jacdac_proxyLoop_inline__P11171_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_proxyLoop_inline__P11171_args@fn
jacdac_proxyLoop_inline__P11171_args:
    .section code
jacdac_proxyLoop_inline__P11171:
jacdac_proxyLoop_inline__P11171_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_proxyLoop_inline__P11171_locals:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #147
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778
_proccall1474:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.11171:
    @stackempty locals
    movs r0, #0
.final_0_304:
jacdac_proxyLoop_inline__P11171_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(173,5): settings.exists
    ;
    .object settings_exists__P2984 "settings/settings.ts(173,5): settings.exists"
settings_exists__P2984_pre:
    .section code
    .balign 4
    .section code
settings_exists__P2984:
settings_exists__P2984_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_exists__P2984_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_exists
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.2984:
    @stackempty locals
.final_0_305:
settings_exists__P2984_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1992,5): jacdac.setLed
    ;
    .object jacdac_setLed__P3765 "jacdac/routing.ts(1992,5): jacdac.setLed"
jacdac_setLed__P3765_pre:
    .section code
    .balign 4
    .section code
jacdac_setLed__P3765:
jacdac_setLed__P3765_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_setLed__P3765_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_42
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::_setLedChannel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_42
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::_setLedChannel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    bl _conv_42
    movs r0, #2
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::_setLedChannel
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3765:
    @stackempty locals
    movs r0, #0
.final_0_306:
jacdac_setLed__P3765_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(61,9): jacdac.Bus.constructor
    ;
    .object jacdac_Bus_constructor__P3613 "jacdac/routing.ts(61,9): jacdac.Bus.constructor"
jacdac_Bus_constructor__P3613_pre:
    .section code
    .balign 4
    .section code
jacdac_Bus_constructor__P3613:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Bus__C3607_validate_38
    mov lr, r7
jacdac_Bus_constructor__P3613_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Bus_constructor__P3613_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #8]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, _ldlit_317 ; 4000001      
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #28]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #32]
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #40]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #44]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #48]
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    movs r1, #10
    str r1, [r0, #52]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_EventSource_constructor__P3775
_proccall1475:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #0
.ret.3613:
    @stackempty locals
.final_0_307:
jacdac_Bus_constructor__P3613_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(97,1): initPlatform
    ;
    .object initPlatform__P3019 "jacdac/mbcompat.ts(97,1): initPlatform"
initPlatform__P3019_pre:
    .section code
    .balign 4
    .section code
initPlatform__P3019:
initPlatform__P3019_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
initPlatform__P3019_locals:
    ldr r0, _ldlit_318 ; initPlatform_inline__P11253_Lit      
    ldr r7, [r6, #0]
    str r0, [r7, #20]
    @stackempty locals
.ret.3019:
    @stackempty locals
    movs r0, #0
.final_0_308:
initPlatform__P3019_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(99,30): initPlatform.inline
    ;
    .object initPlatform_inline__P11253 "jacdac/mbcompat.ts(99,30): initPlatform.inline"
initPlatform_inline__P11253_pre:
    .section code
    .balign 4
initPlatform_inline__P11253_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word initPlatform_inline__P11253_args@fn
initPlatform_inline__P11253_args:
    .section code
initPlatform_inline__P11253:
initPlatform_inline__P11253_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
initPlatform_inline__P11253_locals:
    ldr r0, _ldlit_319 ; 1709984379      
    movs r1, #176
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    ldr r0, _ldlit_320 ; handleStatusEvent__P3018_Lit      
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_on__P3776
_proccall1476:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #92]
    push {r0} ; proc-arg
    bl settings_exists__P2984
_proccall1478:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_309      
.jmpz1477:
    ldr r0, _ldlit_321 ; reset_inline__P11263_Lit      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_79
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl input::onButtonPressed
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_79
    movs r0, #2
    mov r7, sp
    str r7, [r6, #4]
    bl input::onButtonPressed
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_0_309:
.afterif_1_309:
.ret.11253:
    @stackempty locals
    movs r0, #0
.final_2_309:
    add sp, #4*1 ; pop locals 1
initPlatform_inline__P11253_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(103,27): reset.inline
    ;
    .object reset_inline__P11263 "jacdac/mbcompat.ts(103,27): reset.inline"
reset_inline__P11263_pre:
    .section code
    .balign 4
reset_inline__P11263_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word reset_inline__P11263_args@fn
reset_inline__P11263_args:
    .section code
reset_inline__P11263:
reset_inline__P11263_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
reset_inline__P11263_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::reset
.ret.11263:
    @stackempty locals
    movs r0, #0
.final_0_310:
reset_inline__P11263_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(77,1): handleStatusEvent
    ;
    .object handleStatusEvent__P3018 "jacdac/mbcompat.ts(77,1): handleStatusEvent"
handleStatusEvent__P3018_pre:
    .section code
    .balign 4
handleStatusEvent__P3018_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word handleStatusEvent__P3018_args@fn
handleStatusEvent__P3018_args:
    cmp r4, #1
    bge handleStatusEvent__P3018_nochk
    push {lr}
    bl _expand_args_1_2
    bl handleStatusEvent__P3018_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
handleStatusEvent__P3018:
handleStatusEvent__P3018_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
handleStatusEvent__P3018_locals:
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #145
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1479
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_311      
.jmpz1479:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #147
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1480
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_311      
.jmpz1480:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #149
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1481
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_311      
.jmpz1481:
    pop {r0} ; tmpref @1
    b .brk.11277      
.switch_0_311:
    ldr r0, _ldlit_322 ; _str27      
    mov r7, sp
    str r7, [r6, #4]
    bl control::dmesg
    @stackempty locals
    movs r0, #66
    movs r1, #208
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    bl proxyAnimation__P3016
_proccall1482:
    @stackempty locals
    b .brk.11277      
.switch_1_311:
    b .brk.11277      
.switch_2_311:
    movs r0, #208
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_3_311      
.jmpz1483:
    bl identifyAnimation__P3015
_proccall1484:
    @stackempty locals
.else_3_311:
.afterif_4_311:
.brk.11277:
.ret.3018:
    @stackempty locals
    movs r0, #0
.final_5_311:
handleStatusEvent__P3018_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(29,1): identifyAnimation
    ;
    .object identifyAnimation__P3015 "jacdac/mbcompat.ts(29,1): identifyAnimation"
identifyAnimation__P3015_pre:
    .section code
    .balign 4
    .section code
identifyAnimation__P3015:
identifyAnimation__P3015_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
identifyAnimation__P3015_locals:
    movs r0, #212
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_312      
.jmpz1485:
    b .ret.3015      
.else_0_312:
.afterif_1_312:
    movs r0, #66
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl led::screenshot
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_323 ; identifyAnimation_inline__P11296_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInParallel__P2441
_proccall1486:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3015:
    @stackempty locals
    movs r0, #0
.final_2_312:
    add sp, #4*1 ; pop locals 1
identifyAnimation__P3015_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(34,27): identifyAnimation.inline
    ;
    .object identifyAnimation_inline__P11296 "jacdac/mbcompat.ts(34,27): identifyAnimation.inline"
identifyAnimation_inline__P11296_pre:
    .section code
    .balign 4
identifyAnimation_inline__P11296_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word identifyAnimation_inline__P11296_args@fn
identifyAnimation_inline__P11296_args:
    .section code
identifyAnimation_inline__P11296:
identifyAnimation_inline__P11296_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
identifyAnimation_inline__P11296_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    ldr r0, _ldlit_324 ; _img26      
    movs r1, #250
    mov r7, sp
    str r7, [r6, #4]
    bl basic::showAnimation
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl _conv_81
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl ImageMethods::plotFrame
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    movs r0, #10
    movs r1, #212
    ldr r7, [r6, #0]
    str r0, [r7, r1]
    @stackempty locals
.ret.11296:
    @stackempty locals
    movs r0, #0
.final_0_313:
identifyAnimation_inline__P11296_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(48,1): proxyAnimation
    ;
    .object proxyAnimation__P3016 "jacdac/mbcompat.ts(48,1): proxyAnimation"
proxyAnimation__P3016_pre:
    .section code
    .balign 4
    .section code
proxyAnimation__P3016:
proxyAnimation__P3016_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
proxyAnimation__P3016_locals:
    ldr r0, _ldlit_325 ; proxyAnimation_inline__P11308_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2441
_proccall1487:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3016:
    @stackempty locals
    movs r0, #0
.final_0_314:
proxyAnimation__P3016_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/mbcompat.ts(49,27): proxyAnimation.inline
    ;
    .object proxyAnimation_inline__P11308 "jacdac/mbcompat.ts(49,27): proxyAnimation.inline"
proxyAnimation_inline__P11308_pre:
    .section code
    .balign 4
proxyAnimation_inline__P11308_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word proxyAnimation_inline__P11308_args@fn
proxyAnimation_inline__P11308_args:
    .section code
proxyAnimation_inline__P11308:
proxyAnimation_inline__P11308_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
proxyAnimation_inline__P11308_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl led::stopAnimation
    @stackempty locals
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl led::setDisplayMode
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl basic::clearScreen
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@0]
    @stackempty locals
.cont.11317:
    movs r0, #66
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1488
    b .brk.11317      
.jmpz1488:
    ldr r0, [sp, locals@0]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::mod
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #3
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, locals@1]
    @stackempty locals
.cont.11327:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_1_315      
.jmpz1489:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_315      
.lazySkip_1_315:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #7
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eqq
    add sp, #4*1 ; pop locals 1
.lazy_0_315:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1490
    b .brk.11327      
.object PUSH
.balign 4
_ldlit_317:
 .word 4000001
_ldlit_318:
 .word initPlatform_inline__P11253_Lit
_ldlit_319:
 .word 1709984379
_ldlit_320:
 .word handleStatusEvent__P3018_Lit
_ldlit_321:
 .word reset_inline__P11263_Lit
_ldlit_322:
 .word _str27
_ldlit_323:
 .word identifyAnimation_inline__P11296_Lit
_ldlit_324:
 .word _img26
_ldlit_325:
 .word proxyAnimation_inline__P11308_Lit
.object POP
.jmpz1490:
    movs r0, #3
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    str r0, [sp, locals@1]
    @stackempty locals
    b .cont.11327      
.brk.11327:
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.11337:
    ldr r0, [sp, locals@2]
    movs r1, #9
    bl _cmp_lt
    beq .brk.11337      
.jmpz1491:
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.11340:
    ldr r0, [sp, locals@3]
    movs r1, #11
    bl _cmp_lt
    beq .brk.11340      
.jmpz1492:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_315      
.jmpz1493:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_315      
.lazySkip_4_315:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*2 ; pop locals 2
.lazy_3_315:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_315      
.jmpz1494:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_27
    movs r2, #255
    mov r7, sp
    str r7, [r6, #4]
    bl led::plotBrightness
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_5_315      
.else_2_315:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    bl _conv_27
    mov r7, sp
    str r7, [r6, #4]
    bl led::pointBrightness
    add sp, #4*2 ; pop locals 2
    bl _numops_fromInt
    movs r1, #17
    bl _numops_subs
    push {r0} ; the one arg
    movs r0, #1
    push {r0} ; proc-arg
    bl Math_max__P2159
_proccall1495:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_82
    mov r7, sp
    str r7, [r6, #4]
    bl led::plotBrightness
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.afterif_5_315:
.cont.11340:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    @stackempty locals
    b .fortop.11340      
.brk.11340:
.cont.11337:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.11337      
.brk.11337:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    bl pause__P2371
_proccall1496:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.11317      
.brk.11317:
    movs r0, #0
.ret.11308:
    @stackempty locals
.final_6_315:
    add sp, #4*4 ; pop locals 4
proxyAnimation_inline__P11308_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(42,5): settings.initScopes
    ;
    .object settings_initScopes__P4080 "settings/settings.ts(42,5): settings.initScopes"
settings_initScopes__P4080_pre:
    .section code
    .balign 4
    .section code
settings_initScopes__P4080:
settings_initScopes__P4080_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_initScopes__P4080_locals:
    bl settings_runNumber__P2970
_proccall1497:
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeNumber__P2975
_proccall1498:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::deviceSerialNumber
    bl _numops_fromInt
    ldr r1, _ldlit_327 ; _dbl23      
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::seedAddRandom
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
    push {r0} ; the one arg
    bl settings_setScope__P4079
_proccall1499:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4080:
    @stackempty locals
    movs r0, #0
.final_0_316:
    add sp, #4*1 ; pop locals 1
settings_initScopes__P4080_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(32,5): settings.setScope
    ;
    .object settings_setScope__P4079 "settings/settings.ts(32,5): settings.setScope"
settings_setScope__P4079_pre:
    .section code
    .balign 4
    .section code
settings_setScope__P4079:
settings_setScope__P4079_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
settings_setScope__P4079_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_2_317      
.jmpz1500:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_1_317      
.lazySkip_2_317:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl String_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #201
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_1_317:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_317      
.jmpz1501:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #154
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::panic
    @stackempty locals
.else_0_317:
.afterif_3_317:
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readString__P2978
_proccall1502:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    ldr r1, [sp, args@0]
    bl _cmp_neq
    beq .else_4_317      
.jmpz1503:
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_userClean
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #220
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_writeString__P2973
_proccall1504:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.else_4_317:
.afterif_5_317:
.ret.4079:
    @stackempty locals
    movs r0, #0
.final_6_317:
    add sp, #4*1 ; pop locals 1
settings_setScope__P4079_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(28,5): settings.runNumber
    ;
    .object settings_runNumber__P2970 "settings/settings.ts(28,5): settings.runNumber"
settings_runNumber__P2970_pre:
    .section code
    .balign 4
    .section code
settings_runNumber__P2970:
settings_runNumber__P2970_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_runNumber__P2970_locals:
    movs r0, #216
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl settings_readNumber__P2980
_proccall1506:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_318      
.jmpz1505:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_318      
.lazySkip_1_318:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #1
.lazy_0_318:
; jmp value (already in r0)
.ret.2970:
    @stackempty locals
.final_2_318:
settings_runNumber__P2970_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(132,5): settings.readNumber
    ;
    .object settings_readNumber__P2980 "settings/settings.ts(132,5): settings.readNumber"
settings_readNumber__P2980_pre:
    .section code
    .balign 4
    .section code
settings_readNumber__P2980:
settings_readNumber__P2980_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
settings_readNumber__P2980_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_319      
.jmpz1507:
    movs r0, #0
    b .ret.2980      
    b .afterif_1_319      
.else_0_319:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl msgpack_unpackNumberArray__P2772
_proccall1508:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_4_319      
.jmpz1509:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_319      
.lazySkip_4_319:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    movs r1, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::ge
    add sp, #4*1 ; pop locals 1
.lazy_3_319:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_319      
.jmpz1510:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    b .ret.2980      
.else_2_319:
.afterif_5_319:
    movs r0, #0
    b .ret.2980      
.afterif_1_319:
    movs r0, #0
.ret.2980:
    @stackempty locals
.final_6_319:
    add sp, #4*2 ; pop locals 2
settings_readNumber__P2980_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function core/buffer.ts(92,5): msgpack.unpackNumberArray
    ;
    .object msgpack_unpackNumberArray__P2772 "core/buffer.ts(92,5): msgpack.unpackNumberArray"
msgpack_unpackNumberArray__P2772_pre:
    .section code
    .balign 4
    .section code
msgpack_unpackNumberArray__P2772:
msgpack_unpackNumberArray__P2772_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
msgpack_unpackNumberArray__P2772_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    str r0, [sp, locals@0]
    @stackempty locals
.cont.11448:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_lt
    add sp, #4*2 ; pop locals 2
    bne .jmpz1511
    b .brk.11448      
.jmpz1511:
    ldr r0, [sp, args@1]
    push {r0}; tmpstore @1
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*3 ; pop locals 3
    push {r0} ; the one arg
    bl msgpack_tagFormat__P4006
_proccall1512:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    movs r1, #6
    bl _cmp_eqq
    beq .else_0_320      
.jmpz1513:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    bl _conv_44
    movs r1, #6
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    movs r0, #61
    negs r0, r0
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    bne .lazySkip_3_320      
.jmpz1514:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_320      
.lazySkip_3_320:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*1 ; pop locals 1
.lazy_2_320:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_1_320      
.jmpz1515:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_4_320      
.else_1_320:
    movs r0, #6
    b .ret.2772      
.afterif_4_320:
    b .afterif_5_320      
.object PUSH
.balign 4
_ldlit_327:
 .word _dbl23
.object POP
.else_0_320:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl _conv_21
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::getNumber
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl pins_sizeOf__P2764
_proccall1516:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    str r0, [sp, args@1]
    @stackempty locals
.afterif_5_320:
.cont.11493:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _pxt_buffer_get
    add sp, #4*2 ; pop locals 2
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #131
    bl _cmp_eqq
    beq .brk.11493      
.jmpz1517:
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, args@1]
    @stackempty locals
    b .cont.11493      
.brk.11493:
    b .cont.11448      
.brk.11448:
    ldr r0, [sp, locals@0]
.ret.2772:
    @stackempty locals
.final_6_320:
    add sp, #4*3 ; pop locals 3
msgpack_unpackNumberArray__P2772_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1664,9): jacdac.ControlServer.handlePacketOuter
    ;
    .object jacdac_ControlServer_handlePacketOuter__P3753 "jacdac/routing.ts(1664,9): jacdac.ControlServer.handlePacketOuter"
jacdac_ControlServer_handlePacketOuter__P3753_pre:
    .section code
    .balign 4
jacdac_ControlServer_handlePacketOuter__P3753_args:
    cmp r4, #2
    bge jacdac_ControlServer_handlePacketOuter__P3753_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_ControlServer_handlePacketOuter__P3753_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ControlServer_handlePacketOuter__P3753:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3750_validate_78
    mov lr, r7
jacdac_ControlServer_handlePacketOuter__P3753_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_ControlServer_handlePacketOuter__P3753_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_isRegGet__P3092
_proccall1519:
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1518
    b .else_0_321      
.jmpz1518:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_regCode__P3093
_proccall1521:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1520
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_321      
.jmpz1520:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #13
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1522
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_321      
.jmpz1522:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1523
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_321      
.jmpz1523:
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #1
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1524
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_4_321      
.jmpz1524:
    pop {r0} ; tmpref @1
    b .switch_5_321      
.switch_1_321:
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_6_321      
.jmpz1525:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    movs r0, #176
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1526:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #224
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall1527:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P3068
_proccall1528:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1529:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1530:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_6_321:
.afterif_7_321:
    b .brk.11503      
.switch_2_321:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_ControlServer_sendUptime__P3752_nochk
_proccall1531:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1532:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.11503      
.switch_3_321:
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_8_321      
.jmpz1533:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    movs r0, #228
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1534:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    movs r0, #232
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall1535:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P3068
_proccall1536:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1537:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1538:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_8_321:
.afterif_9_321:
    b .brk.11503      
.switch_4_321:
    movs r0, #240
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_11_321      
.jmpz1539:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_10_321      
.lazySkip_11_321:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::programName
.lazy_10_321:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1540:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @2
    push {r0} ; proc-arg
    movs r0, #236
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall1541:
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*2] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket_from__P3068
_proccall1542:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1543:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1544:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.11503      
.switch_5_321:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall1545:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.11503:
    b .afterif_12_321      
.else_0_321:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1547:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1546
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_13_321      
.jmpz1546:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1548
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_14_321      
.jmpz1548:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #5
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1549
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_15_321      
.jmpz1549:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1550
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_16_321      
.jmpz1550:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #11
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1551
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_17_321      
.jmpz1551:
    pop {r0} ; tmpref @1
    b .switch_18_321      
.switch_13_321:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_queueAnnounce__P3621
_proccall1552:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1553:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.11553      
.switch_14_321:
    ldr r0, _ldlit_329 ; _str98      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1554:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
    push {r0} ; proc-arg
    movs r0, #196
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778
_proccall1555:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #149
    push {r0} ; proc-arg
    movs r0, #204
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_EventSource_emit__P3778
_proccall1556:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1557:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.11553      
.switch_15_321:
    ldr r0, _ldlit_330 ; _str135      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1558:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl control::reset
    @stackempty locals
    b .brk.11553      
.switch_16_321:
    ldr r0, _ldlit_331 ; _str136      
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r1, #44
    bl _classCall_jacdac_Client__C3696_this_43
_proccall1559:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_ControlServer_handleFloodPing__P4300_nochk
_proccall1560:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1561:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.11553      
.switch_17_321:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #40]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_19_321      
.jmpz1562:
    bl jacdac_resetToProxy__P4322
_proccall1563:
    @stackempty locals
.else_19_321:
.afterif_20_321:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_markHandled__P3074
_proccall1564:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .brk.11553      
.switch_18_321:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall1565:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.11553:
.afterif_12_321:
.ret.3753:
    @stackempty locals
    movs r0, #0
.final_21_321:
jacdac_ControlServer_handlePacketOuter__P3753_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1639,9): jacdac.ControlServer.handleFloodPing
    ;
    .object jacdac_ControlServer_handleFloodPing__P4300 "jacdac/routing.ts(1639,9): jacdac.ControlServer.handleFloodPing"
jacdac_ControlServer_handleFloodPing__P4300_pre:
    .section code
    .balign 4
jacdac_ControlServer_handleFloodPing__P4300_args:
    cmp r4, #2
    bge jacdac_ControlServer_handleFloodPing__P4300_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_ControlServer_handleFloodPing__P4300_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_ControlServer_handleFloodPing__P4300:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3750_validate_78
    mov lr, r7
jacdac_ControlServer_handleFloodPing__P4300_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_ControlServer_handleFloodPing__P4300_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@0]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, _ldlit_332 ; _str134      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P3099
_proccall1566:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*1 ; pop locals 1
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mklocRef
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    pop {r0} ; tmpref @2
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #2
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    movs r0, #9
    ldr r1, [sp, locals@2]
    bl _numops_adds
    push {r0} ; proc-arg
    bl _conv_29
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@3]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.11607:
    ldr r0, [sp, locals@4]
    ldr r1, [sp, locals@2]
    bl _cmp_lt
    beq .brk.11607      
.jmpz1567:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    movs r0, #9
    ldr r1, [sp, locals@4]
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl _conv_50
    bl _pxt_buffer_set
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.cont.11607:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    @stackempty locals
    b .fortop.11607      
.brk.11607:
    movs r0, #4
    ldr r1, _ldlit_333 ; queuePing_inline__P11620_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, locals@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #3
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    pop {r0} ; tmpref @1
    str r0, [sp, locals@5]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _conv_68
    movs r1, #101
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@5]
    push {r0} ; proc-arg
    bl _lambda_call0_0
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.4300:
    @stackempty locals
    movs r0, #0
.final_0_322:
    add sp, #4*6 ; pop locals 6
jacdac_ControlServer_handleFloodPing__P4300_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1644,31): queuePing.inline
    ;
    .object queuePing_inline__P11620 "jacdac/routing.ts(1644,31): queuePing.inline"
queuePing_inline__P11620_pre:
    .section code
    .balign 4
queuePing_inline__P11620_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word queuePing_inline__P11620_args@fn
queuePing_inline__P11620_args:
    .section code
queuePing_inline__P11620:
queuePing_inline__P11620_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
queuePing_inline__P11620_locals:
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #1
    bl _cmp_le
    beq .else_0_323      
.jmpz1569:
    mov r7, sp
    str r7, [r6, #4]
    bl jacdac::__physId
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, _ldlit_334 ; jacdac_doNothing__P4292_Lit      
    push {r0} ; proc-arg
    bl _conv_68
    movs r1, #101
    movs r3, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::onEvent
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    b .afterif_1_323      
.else_0_323:
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    push {r0} ; proc-arg
    bl _conv_56
    movs r1, #11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*6]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*4]
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P3068
_proccall1570:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1571:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*3]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #3
    bl _numops_subs
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::ldlocRef
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stlocRef
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.afterif_1_323:
.ret.11620:
    @stackempty locals
    movs r0, #0
.final_2_323:
queuePing_inline__P11620_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1614,5): jacdac.doNothing
    ;
    .object jacdac_doNothing__P4292 "jacdac/routing.ts(1614,5): jacdac.doNothing"
jacdac_doNothing__P4292_pre:
    .section code
    .balign 4
jacdac_doNothing__P4292_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_doNothing__P4292_args@fn
jacdac_doNothing__P4292_args:
    .section code
jacdac_doNothing__P4292:
jacdac_doNothing__P4292_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_doNothing__P4292_locals:
.ret.4292:
    @stackempty locals
    movs r0, #0
.final_0_324:
jacdac_doNothing__P4292_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_329:
 .word _str98
_ldlit_330:
 .word _str135
_ldlit_331:
 .word _str136
_ldlit_332:
 .word _str134
_ldlit_333:
 .word queuePing_inline__P11620_Lit
_ldlit_334:
 .word jacdac_doNothing__P4292_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(1633,9): jacdac.ControlServer.sendUptime
    ;
    .object jacdac_ControlServer_sendUptime__P3752 "jacdac/routing.ts(1633,9): jacdac.ControlServer.sendUptime"
jacdac_ControlServer_sendUptime__P3752_pre:
    .section code
    .balign 4
jacdac_ControlServer_sendUptime__P3752_args:
    cmp r4, #1
    bge jacdac_ControlServer_sendUptime__P3752_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_ControlServer_sendUptime__P3752_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_ControlServer_sendUptime__P3752:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_ControlServer__C3750_validate_78
    mov lr, r7
jacdac_ControlServer_sendUptime__P3752_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_ControlServer_sendUptime__P3752_locals:
    movs r0, #4
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::micros
    bl _numops_fromInt
    push {r0} ; proc-arg
    bl _conv_56
    movs r1, #11
    movs r2, #0
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::setNumber
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    movs r0, #35
    lsls r0, r0, #8
    adds r0, #13
    push {r0} ; proc-arg
    bl jacdac_JDPacket_from__P3068
_proccall1572:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1573:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3752:
    @stackempty locals
    movs r0, #0
.final_0_325:
    add sp, #4*1 ; pop locals 1
jacdac_ControlServer_sendUptime__P3752_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(182,9): jacdac._rolemgr.RoleManagerServer.handlePacket
    ;
    .object jacdac__rolemgr_RoleManagerServer_handlePacket__P3485 "jacdac/rolemgr.ts(182,9): jacdac._rolemgr.RoleManagerServer.handlePacket"
jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_args:
    cmp r4, #2
    bge jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_handlePacket__P3485:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
    mov lr, r7
jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Server_handleRegBool__P4183_nochk
_proccall1574:
    add sp, #4*4 ; pop locals 4
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1576:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #35
    lsls r0, r0, #8
    adds r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1575
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_326      
.jmpz1575:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #3
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1577
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_1_326      
.jmpz1577:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #7
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1578
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_2_326      
.jmpz1578:
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #9
    ldr r1, [sp, #4*0] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1579
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_3_326      
.jmpz1579:
    pop {r0} ; tmpref @1
    b .switch_4_326      
.switch_0_326:
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    mov r3, r0
    ldr r0, _ldlit_336 ; jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayEvery__P2137
_proccall1581:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_5_326      
.jmpz1580:
    movs r0, #3
    b .condexprfin_6_326      
.condexprz_5_326:
    movs r0, #1
.condexprfin_6_326:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @2
    push {r0} ; proc-arg
    movs r0, #244
    ldr r7, [r6, #0]
    ldr r0, [r7, r0]
    push {r0} ; proc-arg
    movs r0, #35
    lsls r0, r0, #8
    adds r0, #3
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdpacked__P3071
_proccall1582:
    add sp, #4*3 ; pop locals 3
    movs r7, #0
    str r7, [sp, #4*1] ; estack
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_Server_sendReport__P4173_nochk
_proccall1583:
    add sp, #4*4 ; pop locals 4
    @stackempty locals
    b .brk.11676      
.switch_1_326:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    movs r1, #19
    bl _cmp_ge
    beq .else_7_326      
.jmpz1584:
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #0
    movs r2, #8
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #17
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #9
    movs r2, #1
    negs r2, r2
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toString
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac__rolemgr_setRole__P3481
_proccall1585:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_7_326:
.afterif_8_326:
    b .brk.11676      
.switch_2_326:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    bl _inst_jacdac_Bus__C3607_validate_38
    ldr r0, [r0, #48]
    push {r0} ; proc-arg
    pop {r1, r2}
    ldr r0, _ldlit_337 ; packName__P11729_Lit      
    push {r0} ; proc-arg
    push {r1}
    push {r2}
    bl jacdac_OutPipe_respondForEach__P3142
_proccall1586:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    b .brk.11676      
.switch_3_326:
    bl jacdac__rolemgr_clearRoles__P3479
_proccall1587:
    @stackempty locals
    b .brk.11676      
.switch_4_326:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall1588:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.11676:
.ret.3485:
    @stackempty locals
    movs r0, #0
.final_9_326:
jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(198,37): jacdac._rolemgr.RoleManagerServer.handlePacket.inline
    ;
    .object jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696 "jacdac/rolemgr.ts(198,37): jacdac._rolemgr.RoleManagerServer.handlePacket.inline"
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_pre:
    .section code
    .balign 4
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_args@fn
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_args:
    cmp r4, #1
    bge jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696:
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #16]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_327      
.jmpz1589:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_327      
.lazySkip_1_327:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.lazy_0_327:
; jmp value (already in r0)
.ret.11696:
    @stackempty locals
.final_2_327:
jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(229,13): packName
    ;
    .object packName__P11729 "jacdac/rolemgr.ts(229,13): packName"
packName__P11729_pre:
    .section code
    .balign 4
packName__P11729_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word packName__P11729_args@fn
packName__P11729_args:
    cmp r4, #1
    bge packName__P11729_nochk
    push {lr}
    bl _expand_args_1_2
    bl packName__P11729_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
packName__P11729:
packName__P11729_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
packName__P11729_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_328      
.jmpz1590:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    bl _inst_jacdac_Device__C3724_validate_33
    ldr r0, [r0, #32]
    push {r0} ; the one arg
    bl Buffer_fromHex__P2795
_proccall1591:
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_328      
.condexprz_0_328:
    movs r0, #8
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
.condexprfin_1_328:
; jmp value (already in r0)
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_2_328      
.jmpz1592:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #20]
    b .condexprfin_3_328      
.condexprz_2_328:
    movs r0, #1
.condexprfin_3_328:
; jmp value (already in r0)
    str r0, [sp, locals@1]
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    ldr r0, [sp, args@0]
    bl _inst_jacdac_Client__C3696_validate_31
    ldr r0, [r0, #56]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #52]
    push {r0} ; proc-arg
    ldr r1, [sp, #4*0] ; estack
    ldr r0, [sp, #4*1] ; tmpref @1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, #0]      
    ldr r0, _ldlit_338 ; _str74      
    push {r0} ; proc-arg
    bl jacdac_jdpack__P3119
_proccall1593:
    add sp, #4*2 ; pop locals 2
.ret.11729:
    @stackempty locals
.final_4_328:
    add sp, #4*2 ; pop locals 2
packName__P11729_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/rolemgr.ts(4,5): jacdac._rolemgr.clearRoles
    ;
    .object jacdac__rolemgr_clearRoles__P3479 "jacdac/rolemgr.ts(4,5): jacdac._rolemgr.clearRoles"
jacdac__rolemgr_clearRoles__P3479_pre:
    .section code
    .balign 4
    .section code
jacdac__rolemgr_clearRoles__P3479:
jacdac__rolemgr_clearRoles__P3479_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac__rolemgr_clearRoles__P3479_locals:
    ldr r7, [r6, #0]
    ldr r0, [r7, #84]
    push {r0} ; proc-arg
    bl settings_list__P2982
_proccall1594:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    ldr r0, _ldlit_339 ; settings_remove__P2983_Lit      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl helpers_arrayForEach__P2138
_proccall1595:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #16]
    push {r0} ; proc-arg
    bl jacdac_Bus_clearAttachCache__P3619
_proccall1596:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3479:
    @stackempty locals
    movs r0, #0
.final_0_329:
jacdac__rolemgr_clearRoles__P3479_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function settings/settings.ts(158,5): settings.list
    ;
    .object settings_list__P2982 "settings/settings.ts(158,5): settings.list"
settings_list__P2982_pre:
    .section code
    .balign 4
    .section code
settings_list__P2982:
settings_list__P2982_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
settings_list__P2982_locals:
    ldr r0, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_330      
.jmpz1597:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    str r0, [sp, args@0]
    @stackempty locals
.else_0_330:
.afterif_1_330:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl _conv_7
    mov r7, sp
    str r7, [r6, #4]
    bl settings::_list
    add sp, #4*1 ; pop locals 1
.ret.2982:
    @stackempty locals
.final_2_330:
settings_list__P2982_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_336:
 .word jacdac__rolemgr_RoleManagerServer_handlePacket_inline__P11696_Lit
_ldlit_337:
 .word packName__P11729_Lit
_ldlit_338:
 .word _str74
_ldlit_339:
 .word settings_remove__P2983_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(114,9): jacdac.OutPipe.respondForEach
    ;
    .object jacdac_OutPipe_respondForEach__P3142 "jacdac/pipes.ts(114,9): jacdac.OutPipe.respondForEach"
jacdac_OutPipe_respondForEach__P3142_pre:
    .section code
    .balign 4
jacdac_OutPipe_respondForEach__P3142_args:
    cmp r4, #3
    bge jacdac_OutPipe_respondForEach__P3142_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_OutPipe_respondForEach__P3142_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_OutPipe_respondForEach__P3142:
jacdac_OutPipe_respondForEach__P3142_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_respondForEach__P3142_locals:
    movs r0, #3
    ldr r1, _ldlit_341 ; jacdac_OutPipe_respondForEach_inline__P11776_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, args@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #1
    ldr r2, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #4*0] ; tmpref @1
    movs r1, #2
    ldr r2, [sp, args@2]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    bl control_runInParallel__P2441
_proccall1598:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3142:
    @stackempty locals
    movs r0, #0
.final_0_331:
jacdac_OutPipe_respondForEach__P3142_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(115,35): jacdac.OutPipe.respondForEach.inline
    ;
    .object jacdac_OutPipe_respondForEach_inline__P11776 "jacdac/pipes.ts(115,35): jacdac.OutPipe.respondForEach.inline"
jacdac_OutPipe_respondForEach_inline__P11776_pre:
    .section code
    .balign 4
jacdac_OutPipe_respondForEach_inline__P11776_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_OutPipe_respondForEach_inline__P11776_args@fn
jacdac_OutPipe_respondForEach_inline__P11776_args:
    .section code
jacdac_OutPipe_respondForEach_inline__P11776:
jacdac_OutPipe_respondForEach_inline__P11776_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_OutPipe_respondForEach_inline__P11776_locals:
    ldr r0, _ldlit_342 ; _catch_11777      
    bl _pxt_save_exception_state
    @stackempty locals
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_from__P4199
_proccall1599:
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #0
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [r5, #4*4]
    str r0, [sp, locals@2]
    movs r0, #1
    str r0, [sp, locals@3]
    @stackempty locals
.fortop.11784:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11784      
.jmpz1600:
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [r5, #4*5]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    bl _lambda_call1_61
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_OutPipe_write__P3144
_proccall1602:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11784:
    ldr r0, [sp, locals@3]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@3]
    b .fortop.11784      
.brk.11784:
    movs r0, #0
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_close__P3146
_proccall1603:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::endTry
    b .catchend_2_332      
_catch_11777:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::getThrownValue
    str r0, [sp, locals@4]
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    bl console_error__P2527
_proccall1604:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.catchend_2_332:
.ret.11776:
    @stackempty locals
    movs r0, #0
.final_3_332:
    add sp, #4*5 ; pop locals 5
jacdac_OutPipe_respondForEach_inline__P11776_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(155,9): jacdac.OutPipe.close
    ;
    .object jacdac_OutPipe_close__P3146 "jacdac/pipes.ts(155,9): jacdac.OutPipe.close"
jacdac_OutPipe_close__P3146_pre:
    .section code
    .balign 4
jacdac_OutPipe_close__P3146_args:
    cmp r4, #1
    bge jacdac_OutPipe_close__P3146_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_OutPipe_close__P3146_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_OutPipe_close__P3146:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C3140_validate_83
    mov lr, r7
jacdac_OutPipe_close__P3146_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_close__P3146_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    movs r0, #0
    mov r7, sp
    str r7, [r6, #4]
    bl control::createBuffer
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_OutPipe_writeAndClose__P3145_nochk
_proccall1605:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.ret.3146:
    @stackempty locals
    movs r0, #0
.final_0_333:
jacdac_OutPipe_close__P3146_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(151,9): jacdac.OutPipe.writeAndClose
    ;
    .object jacdac_OutPipe_writeAndClose__P3145 "jacdac/pipes.ts(151,9): jacdac.OutPipe.writeAndClose"
jacdac_OutPipe_writeAndClose__P3145_pre:
    .section code
    .balign 4
jacdac_OutPipe_writeAndClose__P3145_args:
    cmp r4, #2
    bge jacdac_OutPipe_writeAndClose__P3145_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_OutPipe_writeAndClose__P3145_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_OutPipe_writeAndClose__P3145:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C3140_validate_83
    mov lr, r7
jacdac_OutPipe_writeAndClose__P3145_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_writeAndClose__P3145_locals:
    movs r0, #65
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_writeEx__P4200_nochk
_proccall1606:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3145:
    @stackempty locals
    movs r0, #0
.final_0_334:
jacdac_OutPipe_writeAndClose__P3145_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(130,9): jacdac.OutPipe.writeEx
    ;
    .object jacdac_OutPipe_writeEx__P4200 "jacdac/pipes.ts(130,9): jacdac.OutPipe.writeEx"
jacdac_OutPipe_writeEx__P4200_pre:
    .section code
    .balign 4
jacdac_OutPipe_writeEx__P4200_args:
    cmp r4, #3
    bge jacdac_OutPipe_writeEx__P4200_nochk
    push {lr}
    bl _expand_args_3_45
    bl jacdac_OutPipe_writeEx__P4200_nochk
    @dummystack 3
    add sp, #4*3
    pop {pc}
    .section code
jacdac_OutPipe_writeEx__P4200:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C3140_validate_83
    mov lr, r7
jacdac_OutPipe_writeEx__P4200_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_OutPipe_writeEx__P4200_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_335      
.jmpz1607:
    b .ret.4200      
.else_0_335:
.afterif_1_335:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    movs r1, #63
    bl _numops_ands
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #12]
    push {r0} ; proc-arg
    movs r1, #15
    bl _numops_lsls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_orrs
    add sp, #4*2 ; pop locals 2
    ldr r1, [sp, args@2]
    bl _numops_orrs
    mov r3, r0
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_JDPacket_from__P3068
_proccall1608:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    ldr r0, [r0, #4]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, args@2]
    movs r1, #65
    bl _numops_ands
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_335      
.jmpz1609:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #12]
    @stackempty locals
.else_2_335:
.afterif_3_335:
    movs r0, #125
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3084
_proccall1610:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2}
    push {r1}
    push {r2}
    bl jacdac_JDPacket__sendWithAck__P3113
_proccall1612:
    add sp, #4*2 ; pop locals 2
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_335      
.jmpz1611:
    ldr r0, [sp, args@0]
    movs r1, #6
    str r1, [r0, #12]
    @stackempty locals
    ldr r0, _ldlit_343 ; _str63      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::throwValue
.else_4_335:
.afterif_5_335:
.ret.4200:
    @stackempty locals
    movs r0, #0
.final_6_335:
    add sp, #4*1 ; pop locals 1
jacdac_OutPipe_writeEx__P4200_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(333,9): jacdac.JDPacket._sendWithAck
    ;
    .object jacdac_JDPacket__sendWithAck__P3113 "jacdac/packet.ts(333,9): jacdac.JDPacket._sendWithAck"
jacdac_JDPacket__sendWithAck__P3113_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendWithAck__P3113_args:
    cmp r4, #2
    bge jacdac_JDPacket__sendWithAck__P3113_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_JDPacket__sendWithAck__P3113_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_JDPacket__sendWithAck__P3113:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket__sendWithAck__P3113_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket__sendWithAck__P3113_locals:
    ldr r0, [sp, args@1]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_336      
.jmpz1613:
    movs r0, #10
    b .ret.3113      
.else_0_336:
.afterif_1_336:
    movs r0, #66
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_requiresAck__P3082_nochk
_proccall1614:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket__sendCmdId__P3111_nochk
_proccall1615:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    bne .jmpz1616
    b .else_2_336      
.object PUSH
.balign 4
_ldlit_341:
 .word jacdac_OutPipe_respondForEach_inline__P11776_Lit
_ldlit_342:
 .word _catch_11777
_ldlit_343:
 .word _str63
.object POP
.jmpz1616:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
    ldr r0, _ldlit_345 ; jacdac_JDPacket__sendWithAck_inline__P11861_Lit      
    push {r0} ; proc-arg
    bl control_runInParallel__P2441
_proccall1617:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_2_336:
.afterif_3_336:
    ldr r0, _ldlit_346 ; jacdac_AckAwaiter__C4125_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_AckAwaiter_constructor__P4126
_proccall1618:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_17
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    add sp, #4*2 ; pop locals 2
    @stackempty locals
.cont.11875:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #4]
    movs r1, #1
    bl _cmp_gt
    beq .brk.11875      
.jmpz1619:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_42
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #255
    mov r7, sp
    str r7, [r6, #4]
    bl control::waitForEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .cont.11875      
.brk.11875:
    ldr r0, [sp, locals@0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::eq
    add sp, #4*1 ; pop locals 1
.ret.3113:
    @stackempty locals
.final_4_336:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket__sendWithAck__P3113_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(340,39): jacdac.JDPacket._sendWithAck.inline
    ;
    .object jacdac_JDPacket__sendWithAck_inline__P11861 "jacdac/packet.ts(340,39): jacdac.JDPacket._sendWithAck.inline"
jacdac_JDPacket__sendWithAck_inline__P11861_pre:
    .section code
    .balign 4
jacdac_JDPacket__sendWithAck_inline__P11861_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_JDPacket__sendWithAck_inline__P11861_args@fn
jacdac_JDPacket__sendWithAck_inline__P11861_args:
    .section code
jacdac_JDPacket__sendWithAck_inline__P11861:
jacdac_JDPacket__sendWithAck_inline__P11861_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket__sendWithAck_inline__P11861_locals:
.cont.11862:
    movs r0, #3
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .brk.11862      
.jmpz1620:
    movs r0, #41
    movs r1, #101
    mov r7, sp
    str r7, [r6, #4]
    bl Math_::randomRange
    push {r0} ; the one arg
    bl pause__P2371
_proccall1621:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    bl jacdac_checkAckAwaiters__P4127
_proccall1622:
    @stackempty locals
    b .cont.11862      
.brk.11862:
.ret.11861:
    @stackempty locals
    movs r0, #0
.final_0_337:
jacdac_JDPacket__sendWithAck_inline__P11861_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(361,9): jacdac.AckAwaiter.constructor
    ;
    .object jacdac_AckAwaiter_constructor__P4126 "jacdac/packet.ts(361,9): jacdac.AckAwaiter.constructor"
jacdac_AckAwaiter_constructor__P4126_pre:
    .section code
    .balign 4
    .section code
jacdac_AckAwaiter_constructor__P4126:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    mov lr, r7
jacdac_AckAwaiter_constructor__P4126_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_AckAwaiter_constructor__P4126_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #20]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #24]
    ldr r0, [sp, args@0]
    movs r1, #3
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P3085
_proccall1623:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #12]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    movs r1, #81
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    mov r7, sp
    str r7, [r6, #4]
    bl control::allocateNotifyEvent
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #16]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    movs r0, #0
.ret.4126:
    @stackempty locals
.final_0_338:
jacdac_AckAwaiter_constructor__P4126_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(371,5): jacdac.checkAckAwaiters
    ;
    .object jacdac_checkAckAwaiters__P4127 "jacdac/packet.ts(371,5): jacdac.checkAckAwaiters"
jacdac_checkAckAwaiters__P4127_pre:
    .section code
    .balign 4
    .section code
jacdac_checkAckAwaiters__P4127:
jacdac_checkAckAwaiters__P4127_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_checkAckAwaiters__P4127_locals:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    movs r0, #1
    ldr r1, _ldlit_347 ; toRetry_inline__P11908_Lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    push {r0}; tmpstore @1
    movs r1, #0
    ldr r2, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::stclo
    ldr r0, [sp, #0]      
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2139
_proccall1624:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    bl _conv_10
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    add sp, #4*1 ; pop locals 1
    bl _numops_fromInt
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_339      
.jmpz1625:
    b .ret.4127      
.else_0_339:
.afterif_1_339:
    movs r0, #0
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    str r0, [sp, locals@3]
    movs r0, #1
    str r0, [sp, locals@4]
    @stackempty locals
.fortop.11921:
    ldr r0, [sp, locals@4]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@3]
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::length
    bl _numops_fromInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt_bool
    add sp, #4*2 ; pop locals 2
    cmp r0, #0
    beq .brk.11921      
.jmpz1626:
    ldr r0, [sp, locals@3]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@4]
    bl _numops_toInt
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #4]
    movs r1, #1
    bl _cmp_eq
    beq .else_2_339      
.jmpz1627:
    b .cont.11921      
.else_2_339:
.afterif_3_339:
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #8]
    movs r1, #9
    bl _cmp_ge
    beq .else_4_339      
.jmpz1628:
    ldr r0, [sp, locals@2]
    movs r1, #1
    negs r1, r1
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    str r1, [r0, #4]
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #16]
    push {r0} ; proc-arg
    bl _conv_42
    movs r0, #3
    lsls r0, r0, #8
    adds r0, #255
    movs r2, #1
    mov r7, sp
    str r7, [r6, #4]
    bl control::raiseEvent
    add sp, #4*1 ; pop locals 1
    @stackempty locals
    b .afterif_5_339      
.else_4_339:
    ldr r0, [sp, locals@2]
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #8]
    movs r1, #3
    bl _numops_adds
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    str r1, [r0, #8]
    add sp, #4*3 ; pop locals 3
    @stackempty locals
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    movs r1, #81
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    str r1, [r0, #4]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, locals@2]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #20]
    push {r0} ; the one arg
    bl jacdac_JDPacket__sendCore__P3108
_proccall1629:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.afterif_5_339:
.cont.11921:
    ldr r0, [sp, locals@4]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@4]
    b .fortop.11921      
.brk.11921:
    movs r0, #0
    str r0, [sp, locals@3]
    ldr r0, _ldlit_348 ; jacdac_checkAckAwaiters_inline__P11954_Lit      
    push {r0} ; proc-arg
    ldr r7, [r6, #0]
    ldr r0, [r7, #52]
    push {r0} ; proc-arg
    bl helpers_arrayFilter__P2139
_proccall1630:
    add sp, #4*2 ; pop locals 2
    ldr r7, [r6, #0]
    str r0, [r7, #52]
    @stackempty locals
.ret.4127:
    @stackempty locals
    movs r0, #0
.final_6_339:
    add sp, #4*5 ; pop locals 5
jacdac_checkAckAwaiters__P4127_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(373,44): toRetry.inline
    ;
    .object toRetry_inline__P11908 "jacdac/packet.ts(373,44): toRetry.inline"
toRetry_inline__P11908_pre:
    .section code
    .balign 4
toRetry_inline__P11908_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word toRetry_inline__P11908_args@fn
toRetry_inline__P11908_args:
    cmp r4, #1
    bge toRetry_inline__P11908_nochk
    push {lr}
    bl _expand_args_1_2
    bl toRetry_inline__P11908_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
toRetry_inline__P11908:
toRetry_inline__P11908_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
toRetry_inline__P11908_locals:
    ldr r0, [r5, #4*3]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.ret.11908:
    @stackempty locals
.final_0_340:
toRetry_inline__P11908_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_345:
 .word jacdac_JDPacket__sendWithAck_inline__P11861_Lit
_ldlit_346:
 .word jacdac_AckAwaiter__C4125_VT
_ldlit_347:
 .word toRetry_inline__P11908_Lit
_ldlit_348:
 .word jacdac_checkAckAwaiters_inline__P11954_Lit
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(386,42): jacdac.checkAckAwaiters.inline
    ;
    .object jacdac_checkAckAwaiters_inline__P11954 "jacdac/packet.ts(386,42): jacdac.checkAckAwaiters.inline"
jacdac_checkAckAwaiters_inline__P11954_pre:
    .section code
    .balign 4
jacdac_checkAckAwaiters_inline__P11954_Lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word jacdac_checkAckAwaiters_inline__P11954_args@fn
jacdac_checkAckAwaiters_inline__P11954_args:
    cmp r4, #1
    bge jacdac_checkAckAwaiters_inline__P11954_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_checkAckAwaiters_inline__P11954_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_checkAckAwaiters_inline__P11954:
jacdac_checkAckAwaiters_inline__P11954_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_checkAckAwaiters_inline__P11954_locals:
    ldr r0, [sp, args@0]
    bl _inst_jacdac_AckAwaiter__C4125_validate_41
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.ret.11954:
    @stackempty locals
.final_0_341:
jacdac_checkAckAwaiters_inline__P11954_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(147,9): jacdac.OutPipe.write
    ;
    .object jacdac_OutPipe_write__P3144 "jacdac/pipes.ts(147,9): jacdac.OutPipe.write"
jacdac_OutPipe_write__P3144_pre:
    .section code
    .balign 4
jacdac_OutPipe_write__P3144_args:
    cmp r4, #2
    bge jacdac_OutPipe_write__P3144_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_OutPipe_write__P3144_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_OutPipe_write__P3144:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C3140_validate_83
    mov lr, r7
jacdac_OutPipe_write__P3144_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_write__P3144_locals:
    movs r0, #1
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_OutPipe_writeEx__P4200_nochk
_proccall1631:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3144:
    @stackempty locals
    movs r0, #0
.final_0_342:
jacdac_OutPipe_write__P3144_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(105,9): jacdac.OutPipe.from
    ;
    .object jacdac_OutPipe_from__P4199 "jacdac/pipes.ts(105,9): jacdac.OutPipe.from"
jacdac_OutPipe_from__P4199_pre:
    .section code
    .balign 4
jacdac_OutPipe_from__P4199_args:
    cmp r4, #1
    bge jacdac_OutPipe_from__P4199_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_OutPipe_from__P4199_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_OutPipe_from__P4199:
jacdac_OutPipe_from__P4199_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_OutPipe_from__P4199_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r3, r0
    ldr r0, _ldlit_350 ; _str62      
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_jdunpack__P3118
_proccall1632:
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    push {r0} ; proc-arg
    movs r1, #0
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@0]
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    movs r1, #1
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, _ldlit_351 ; jacdac_OutPipe__C3140_VT      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkClassInstance
    push {r0}; tmpstore @1
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*2] ; tmpref @1
    push {r0} ; proc-arg
    bl jacdac_OutPipe_constructor__P3141
_proccall1633:
    add sp, #4*3 ; pop locals 3
    pop {r0} ; tmpref @1
.ret.4199:
    @stackempty locals
.final_0_343:
    add sp, #4*3 ; pop locals 3
jacdac_OutPipe_from__P4199_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/pipes.ts(103,9): jacdac.OutPipe.constructor
    ;
    .object jacdac_OutPipe_constructor__P3141 "jacdac/pipes.ts(103,9): jacdac.OutPipe.constructor"
jacdac_OutPipe_constructor__P3141_pre:
    .section code
    .balign 4
    .section code
jacdac_OutPipe_constructor__P3141:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_OutPipe__C3140_validate_83
    mov lr, r7
jacdac_OutPipe_constructor__P3141_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_OutPipe_constructor__P3141_locals:
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@1]
    str r1, [r0, #8]
    ldr r0, [sp, args@0]
    ldr r1, [sp, args@2]
    str r1, [r0, #12]
    ldr r0, [sp, args@0]
    movs r1, #1
    str r1, [r0, #4]
    movs r0, #0
.ret.3141:
    @stackempty locals
.final_0_344:
jacdac_OutPipe_constructor__P3141_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(727,9): jacdac.Server.handleRegBool
    ;
    .object jacdac_Server_handleRegBool__P4183 "jacdac/routing.ts(727,9): jacdac.Server.handleRegBool"
jacdac_Server_handleRegBool__P4183_pre:
    .section code
    .balign 4
jacdac_Server_handleRegBool__P4183_args:
    cmp r4, #4
    bge jacdac_Server_handleRegBool__P4183_nochk
    push {lr}
    bl _expand_args_4_32
    bl jacdac_Server_handleRegBool__P4183_nochk
    @dummystack 4
    add sp, #4*4
    pop {pc}
    .section code
jacdac_Server_handleRegBool__P4183:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_handleRegBool__P4183_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_Server_handleRegBool__P4183_locals:
    ldr r0, [sp, args@3]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_345      
.jmpz1634:
    movs r0, #3
    b .condexprfin_1_345      
.condexprz_0_345:
    movs r0, #1
.condexprfin_1_345:
; jmp value (already in r0)
    push {r0} ; proc-arg
    ldr r0, _ldlit_352 ; _str39      
    push {r0} ; proc-arg
    ldr r0, [sp, args@2]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall1635:
    add sp, #4*5 ; pop locals 5
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, locals@0]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
.ret.4183:
    @stackempty locals
.final_2_345:
    add sp, #4*1 ; pop locals 1
jacdac_Server_handleRegBool__P4183_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(48,9): jacdac.LoggerServer.log
    ;
    .object jacdac_LoggerServer_log__P3364 "jacdac/logger-server/server.ts(48,9): jacdac.LoggerServer.log"
jacdac_LoggerServer_log__P3364_pre:
    .section code
    .balign 4
jacdac_LoggerServer_log__P3364_args:
    cmp r4, #2
    bge jacdac_LoggerServer_log__P3364_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_LoggerServer_log__P3364_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_LoggerServer_log__P3364:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3359_validate_75
    mov lr, r7
jacdac_LoggerServer_log__P3364_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_LoggerServer_log__P3364_locals:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    movs r0, #3
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_LoggerServer_add__P3367_nochk
_proccall1636:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.ret.3364:
    @stackempty locals
    movs r0, #0
.final_0_346:
jacdac_LoggerServer_log__P3364_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/logger-server/server.ts(11,9): jacdac.LoggerServer.handlePacket
    ;
    .object jacdac_LoggerServer_handlePacket__P3362 "jacdac/logger-server/server.ts(11,9): jacdac.LoggerServer.handlePacket"
jacdac_LoggerServer_handlePacket__P3362_pre:
    .section code
    .balign 4
jacdac_LoggerServer_handlePacket__P3362_args:
    cmp r4, #2
    bge jacdac_LoggerServer_handlePacket__P3362_nochk
    push {lr}
    bl _expand_args_2_5
    bl jacdac_LoggerServer_handlePacket__P3362_nochk
    @dummystack 2
    add sp, #4*2
    pop {pc}
    .section code
jacdac_LoggerServer_handlePacket__P3362:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_LoggerServer__C3359_validate_75
    mov lr, r7
jacdac_LoggerServer_handlePacket__P3362_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_LoggerServer_handlePacket__P3362_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    ldr r0, _ldlit_352 ; _str39      
    push {r0} ; proc-arg
    movs r0, #1
    lsls r0, r0, #8
    adds r0, #1
    push {r0} ; proc-arg
    push {r2}
    push {r3}
    bl jacdac_Server_handleRegValue__P4182_nochk
_proccall1637:
    add sp, #4*5 ; pop locals 5
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #72]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086
_proccall1639:
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r1, r0
    movs r0, #65
    lsls r0, r0, #8
    adds r0, #1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::switch_eq
    cmp r0, #0
    beq .jmpz1638
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .switch_0_347      
.jmpz1638:
    pop {r0} ; tmpref @1
    b .switch_1_347      
.switch_0_347:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_352 ; _str39      
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_jdunpack__P3099
_proccall1640:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@2]
    @stackempty locals
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::le
    add sp, #4*2 ; pop locals 2
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_4_347      
.jmpz1641:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_3_347      
.lazySkip_4_347:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@2]
    push {r0} ; proc-arg
    movs r1, #11
    lsls r1, r1, #8
    adds r1, #185
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*1 ; pop locals 1
.lazy_3_347:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_2_347      
.jmpz1642:
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@1]
    str r1, [r0, #72]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #68]
    @stackempty locals
.else_2_347:
.afterif_5_347:
    ldr r7, [r6, #0]
    ldr r0, [r7, #32]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _cmp_gt
    add sp, #4*2 ; pop locals 2
    beq .else_6_347      
.jmpz1643:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    ldr r7, [r6, #0]
    str r0, [r7, #32]
    @stackempty locals
.else_6_347:
.afterif_7_347:
    b .brk.12010      
.switch_1_347:
    ldr r0, [sp, args@1]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_possiblyNotImplemented__P3075
_proccall1644:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.brk.12010:
.ret.3362:
    @stackempty locals
    movs r0, #0
.final_8_347:
    add sp, #4*3 ; pop locals 3
jacdac_LoggerServer_handlePacket__P3362_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(721,9): jacdac.Server.toString
    ;
    .object jacdac_Server_toString__P3666 "jacdac/routing.ts(721,9): jacdac.Server.toString"
jacdac_Server_toString__P3666_pre:
    .section code
    .balign 4
jacdac_Server_toString__P3666_args:
    cmp r4, #1
    bge jacdac_Server_toString__P3666_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_Server_toString__P3666_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_Server_toString__P3666:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_Server__C3646_validate_39
    mov lr, r7
jacdac_Server_toString__P3666_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_Server_toString__P3666_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_1_348      
.jmpz1645:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_0_348      
.lazySkip_1_348:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    movs r0, #17
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P3061
_proccall1646:
    add sp, #4*2 ; pop locals 2
    b .lazy_0_348      
.object PUSH
.balign 4
_ldlit_350:
 .word _str62
_ldlit_351:
 .word jacdac_OutPipe__C3140_VT
_ldlit_352:
 .word _str39
.object POP
.lazy_0_348:
; jmp value (already in r0)
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_354 ; _str114      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_355 ; _str47      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #36]
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
.ret.3666:
    @stackempty locals
.final_2_348:
jacdac_Server_toString__P3666_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(31,5): jacdac.hexNum
    ;
    .object jacdac_hexNum__P3061 "jacdac/packet.ts(31,5): jacdac.hexNum"
jacdac_hexNum__P3061_pre:
    .section code
    .balign 4
    .section code
jacdac_hexNum__P3061:
jacdac_hexNum__P3061_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_hexNum__P3061_locals:
    ldr r0, _ldlit_356 ; _str18      
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, _ldlit_357 ; _str28      
    str r0, [sp, locals@1]
    @stackempty locals
    movs r0, #1
    str r0, [sp, locals@2]
    @stackempty locals
.fortop.12070:
    ldr r0, [sp, locals@2]
    ldr r1, [sp, args@1]
    bl _cmp_lt
    beq .brk.12070      
.jmpz1647:
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@1]
    movs r1, #3
    bl _numops_subs
    ldr r1, [sp, locals@2]
    bl _numops_subs
    push {r0} ; proc-arg
    movs r1, #9
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_lsrs
    add sp, #4*2 ; pop locals 2
    movs r1, #31
    bl _numops_ands
    push {r0} ; proc-arg
    bl _conv_23
    mov r7, sp
    str r7, [r6, #4]
    bl String_::charAt
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
.cont.12070:
    ldr r0, [sp, locals@2]
    movs r1, #3
    bl _numops_adds
    str r0, [sp, locals@2]
    @stackempty locals
    b .fortop.12070      
.brk.12070:
    ldr r0, [sp, locals@1]
.ret.3061:
    @stackempty locals
.final_0_349:
    add sp, #4*3 ; pop locals 3
jacdac_hexNum__P3061_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(272,9): jacdac.JDPacket.toString
    ;
    .object jacdac_JDPacket_toString__P3106 "jacdac/packet.ts(272,9): jacdac.JDPacket.toString"
jacdac_JDPacket_toString__P3106_pre:
    .section code
    .balign 4
jacdac_JDPacket_toString__P3106_args:
    cmp r4, #1
    bge jacdac_JDPacket_toString__P3106_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_toString__P3106_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_toString__P3106:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_toString__P3106_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    @stackmark locals
jacdac_JDPacket_toString__P3106_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .condexprz_0_350      
.jmpz1648:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    b .condexprfin_1_350      
.condexprz_0_350:
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
.condexprfin_1_350:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl String_::mkEmpty
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; tmpref @1
    push {r0} ; proc-arg
    bl _conv_12
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*3 ; pop locals 3
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_358 ; _str31      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_deviceIdentifier__P3076_nochk
_proccall1649:
    add sp, #4*1 ; pop locals 1
    push {r0} ; the one arg
    bl jacdac_shortDeviceId__P3723
_proccall1650:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_359 ; _str32      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceIndex__P3083_nochk
_proccall1651:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_360 ; _str33      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_serviceCommand__P3086_nochk
_proccall1652:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #9
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P3061
_proccall1653:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_361 ; _str34      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_JDPacket_crc__P3085_nochk
_proccall1654:
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #5
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P3061
_proccall1655:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_362 ; _str35      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #7
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    mov r3, r0
    movs r0, #3
    push {r0} ; proc-arg
    push {r3} ; the one arg
    bl jacdac_hexNum__P3061
_proccall1656:
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_363 ; _str36      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
    movs r1, #41
    bl _cmp_lt
    beq .else_2_350      
.jmpz1657:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_364 ; _str15      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
    b .afterif_3_350      
.else_2_350:
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    bl _conv_19
    movs r1, #0
    movs r2, #20
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::slice
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_19
    mov r7, sp
    str r7, [r6, #4]
    bl BufferMethods::toHex
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_15
    ldr r0, _ldlit_364 ; _str15      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_7
    ldr r1, _ldlit_365 ; _str10      
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    bl _conv_14
    mov r7, sp
    str r7, [r6, #4]
    bl String_::concat
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@0]
    @stackempty locals
.afterif_3_350:
    ldr r0, [sp, locals@0]
.ret.3106:
    @stackempty locals
.final_4_350:
    add sp, #4*1 ; pop locals 1
jacdac_JDPacket_toString__P3106_end:
    pop {pc}
.object PUSH
.balign 4
_ldlit_354:
 .word _str114
_ldlit_355:
 .word _str47
_ldlit_356:
 .word _str18
_ldlit_357:
 .word _str28
_ldlit_358:
 .word _str31
_ldlit_359:
 .word _str32
_ldlit_360:
 .word _str33
_ldlit_361:
 .word _str34
_ldlit_362:
 .word _str35
_ldlit_363:
 .word _str36
_ldlit_364:
 .word _str15
_ldlit_365:
 .word _str10
.object POP
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/packet.ts(132,9): jacdac.JDPacket.size
    ;
    .object jacdac_JDPacket_size__P3080 "jacdac/packet.ts(132,9): jacdac.JDPacket.size"
jacdac_JDPacket_size__P3080_pre:
    .section code
    .balign 4
jacdac_JDPacket_size__P3080_args:
    cmp r4, #1
    bge jacdac_JDPacket_size__P3080_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_JDPacket_size__P3080_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_JDPacket_size__P3080:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_JDPacket__C3062_validate_35
    mov lr, r7
jacdac_JDPacket_size__P3080_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_JDPacket_size__P3080_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #4]
    push {r0} ; proc-arg
    movs r1, #25
    bl _pxt_buffer_get
    add sp, #4*1 ; pop locals 1
.ret.3080:
    @stackempty locals
.final_0_351:
jacdac_JDPacket_size__P3080_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(70,9): jacdac.SensorClient.announceCallback
    ;
    .object jacdac_SensorClient_announceCallback__P3419 "jacdac/sensor/client.ts(70,9): jacdac.SensorClient.announceCallback"
jacdac_SensorClient_announceCallback__P3419_pre:
    .section code
    .balign 4
jacdac_SensorClient_announceCallback__P3419_args:
    cmp r4, #1
    bge jacdac_SensorClient_announceCallback__P3419_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_SensorClient_announceCallback__P3419_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SensorClient_announceCallback__P3419:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3416_validate_65
    mov lr, r7
jacdac_SensorClient_announceCallback__P3419_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_SensorClient_announceCallback__P3419_locals:
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    bl jacdac_SensorClient_checkSamples__P4228_nochk
_proccall1658:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.ret.3419:
    @stackempty locals
    movs r0, #0
.final_0_352:
jacdac_SensorClient_announceCallback__P3419_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/sensor/client.ts(48,9): jacdac.SensorClient.checkSamples
    ;
    .object jacdac_SensorClient_checkSamples__P4228 "jacdac/sensor/client.ts(48,9): jacdac.SensorClient.checkSamples"
jacdac_SensorClient_checkSamples__P4228_pre:
    .section code
    .balign 4
jacdac_SensorClient_checkSamples__P4228_args:
    cmp r4, #1
    bge jacdac_SensorClient_checkSamples__P4228_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_SensorClient_checkSamples__P4228_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_SensorClient_checkSamples__P4228:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_SensorClient__C3416_validate_65
    mov lr, r7
jacdac_SensorClient_checkSamples__P4228_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    movs r0, #0
    push {r0} ;loc
    push {r0} ;loc
    @stackmark locals
jacdac_SensorClient_checkSamples__P4228_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #84]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    mov r7, sp
    str r7, [r6, #4]
    bl Boolean_::bang
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::fromBool
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_353      
.jmpz1659:
    b .ret.4228      
.else_0_353:
.afterif_1_353:
    mov r7, sp
    str r7, [r6, #4]
    bl control::millis
    bl _numops_fromInt
    str r0, [sp, locals@0]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #68]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_values__P3683
_proccall1661:
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    movs r1, #1
    bl _pxt_array_get
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_3_353      
.jmpz1660:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_2_353      
.lazySkip_3_353:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    movs r0, #201
.lazy_2_353:
; jmp value (already in r0)
    push {r0} ; proc-arg
    movs r0, #41
    push {r0} ; proc-arg
    bl Math_max__P2159
_proccall1662:
    add sp, #4*2 ; pop locals 2
    str r0, [sp, locals@1]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #72]
    push {r0} ; proc-arg
    movs r1, #65
    mov r7, sp
    str r7, [r6, #4]
    bl numops::lt
    add sp, #4*1 ; pop locals 1
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_6_353      
.jmpz1663:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_5_353      
.lazySkip_6_353:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #80]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_subs
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #5
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_5_353:
; jmp value (already in r0)
    push {r0}; tmpstore @1
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBool
    cmp r0, #0
    beq .lazySkip_8_353      
.jmpz1664:
    ldr r0, [sp, #4*0] ; tmpref @1
    @dummystack 1
    add sp, #4*1 ; pop locals 1
    b .lazy_7_353      
.lazySkip_8_353:
    ldr r0, [sp, #0]      
    ldr r0, [sp, #4*0] ; estack
    add sp, #4*1 ; pop locals 1
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #76]
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    mov r7, sp
    str r7, [r6, #4]
    bl numops::gt
    add sp, #4*2 ; pop locals 2
.lazy_7_353:
; jmp value (already in r0)
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_4_353      
.jmpz1665:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::mk
    push {r0}; tmpstore @1
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::push
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    mov r3, r0
    ldr r0, [sp, #0]      
    push {r3} ; the one arg
    bl jacdac_RegisterClient_values__P3684
_proccall1666:
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    movs r1, #1
    lsls r1, r1, #8
    adds r1, #255
    str r1, [r0, #72]
    @stackempty locals
    ldr r0, [sp, args@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@0]
    push {r0} ; proc-arg
    ldr r0, [sp, locals@1]
    push {r0} ; proc-arg
    movs r1, #255
    mov r7, sp
    str r7, [r6, #4]
    bl numops::muls
    add sp, #4*1 ; pop locals 1
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    bl _numops_adds
    add sp, #4*2 ; pop locals 2
    push {r0} ; proc-arg
    ldr r0, [sp, #4*1] ; estack
    ldr r1, [sp, #4*0] ; estack
    str r1, [r0, #76]
    add sp, #4*2 ; pop locals 2
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r1, [sp, locals@0]
    str r1, [r0, #80]
    @stackempty locals
    ldr r0, [sp, args@0]
    ldr r0, [r0, #64]
    push {r0} ; the one arg
    bl jacdac_RegisterClient_sendSet__P3685
_proccall1667:
    add sp, #4*1 ; pop locals 1
    @stackempty locals
.else_4_353:
.afterif_9_353:
.ret.4228:
    @stackempty locals
    movs r0, #0
.final_10_353:
    add sp, #4*2 ; pop locals 2
jacdac_SensorClient_checkSamples__P4228_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    ;
; Function jacdac/routing.ts(973,9): jacdac.RegisterClient.sendSet
    ;
    .object jacdac_RegisterClient_sendSet__P3685 "jacdac/routing.ts(973,9): jacdac.RegisterClient.sendSet"
jacdac_RegisterClient_sendSet__P3685_pre:
    .section code
    .balign 4
jacdac_RegisterClient_sendSet__P3685_args:
    cmp r4, #1
    bge jacdac_RegisterClient_sendSet__P3685_nochk
    push {lr}
    bl _expand_args_1_2
    bl jacdac_RegisterClient_sendSet__P3685_nochk
    @dummystack 1
    add sp, #4*1
    pop {pc}
    .section code
jacdac_RegisterClient_sendSet__P3685:
    mov r7, lr
    ldr r0, [sp, #0]
    bl _inst_jacdac_RegisterClient__C3673_validate_6
    mov lr, r7
jacdac_RegisterClient_sendSet__P3685_nochk:
    @stackmark func
    @stackmark args
    push {lr}
.locals:
    @stackmark locals
jacdac_RegisterClient_sendSet__P3685_locals:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toBoolDecr
    cmp r0, #0
    beq .else_0_354      
.jmpz1668:
    ldr r0, [sp, args@0]
    ldr r0, [r0, #20]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #24]
    push {r0} ; proc-arg
    ldr r0, [sp, args@0]
    ldr r0, [r0, #8]
    push {r0} ; proc-arg
    pop {r1, r2, r3}
    push {r1}
    push {r2}
    push {r3}
    bl jacdac_Client_setRegBuffer__P3719
_proccall1669:
    add sp, #4*3 ; pop locals 3
    @stackempty locals
.else_0_354:
.afterif_1_354:
.ret.3685:
    @stackempty locals
    movs r0, #0
.final_2_354:
jacdac_RegisterClient_sendSet__P3685_end:
    pop {pc}
    @stackempty func
    @stackempty args
; endfun
    .object _pxt_helper_trampoline "helper: trampoline"
    .section code
_pxt_lambda_trampoline:
    push { r4, r5, r6, r7, lr}
    mov r4, r8
    mov r5, r9
    mov r6, r10
    mov r7, r11
    push {r4, r5, r6, r7} ; save high registers
    mov r4, r1
    mov r5, r2
    mov r6, r3
    mov r7, r0
    bl _inst_builtin4_validate_25
    mov r0, sp
    push {r4, r5, r6, r7} ; push args and the lambda
    mov r1, sp
    bl pxt::pushThreadContext
    mov r6, r0          ; save ctx or globals
    mov r5, r7          ; save lambda for closure
    mov r0, r5          ; also save lambda pointer in r0 - needed by pxt::bindMethod
    ldr r1, [r5, #8]    ; ld fnptr
    movs r4, #3         ; 3 args
    blx r1              ; execute the actual lambda
    mov r7, r0          ; save result
    @dummystack 4
    add sp, #4*4        ; remove arguments and lambda
    mov r0, r6   ; or pop the thread context
    bl pxt::popThreadContext
    mov r0, r7 ; restore result
    pop {r4, r5, r6, r7} ; restore high registers
    mov r8, r4
    mov r9, r5
    mov r10, r6
    mov r11, r7
    pop { r4, r5, r6, r7, pc}
    .object _pxt_helper_exn "helper: exn"
    .section code
; r0 - try frame
; r1 - handler PC
_pxt_save_exception_state:
    push {r0, lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::beginTry
    pop {r1, r4}
    str r1, [r0, #1*4] ; PC
    mov r1, sp
    str r1, [r0, #2*4] ; SP
    str r5, [r0, #3*4] ; lambda ptr
    bx r4
    .section code
; r0 - try frame
; r1 - thread context
_pxt_restore_exception_state:
    mov r6, r1
    ldr r1, [r0, #2*4] ; SP
    mov sp, r1
    ldr r5, [r0, #3*4] ; lambda ptr
    ldr r1, [r0, #1*4] ; PC
    movs r0, #1
    orrs r1, r0
    bx r1
    .object _pxt_helper_stringconv "helper: stringconv"
    .section code
_pxt_stringConv:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #1
    bne .notstring
    bx lr
.notstring:
    ldr r7, [r3, #4*8]
    cmp r7, #0
    beq .fail
    push {r0, lr}
    movs r4, #1
    blx r7
    str r0, [sp, #0]
    b .numops
.fail:
    push {r0, lr}
.numops:
    mov r7, sp
    str r7, [r6, #4]
    bl numops::toString
    pop {r1, pc}      
    .object _pxt_helper_get_buffer "helper: get buffer"
    .section code
_pxt_buffer_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    ldrb r0, [r4, #8]
    lsls r0, r0, #1
    adds r0, #1
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    lsls r0, r0, #1
    adds r0, #1
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #1 ; 0 or undefined
    bx lr
    .object _pxt_helper_get_array "helper: get array"
    .section code
_pxt_array_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    ldr r0, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::getAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    movs r0, #0 ; 0 or undefined
    bx lr
    .object _pxt_helper_set_buffer "helper: set buffer"
    .section code
_pxt_buffer_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #3
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldr r4, [r0, #4]
    cmp r1, r4
    bhs .oob
    adds r4, r0, r1
    strb r2, [r4, #8]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_set_array "helper: set array"
    .section code
_pxt_array_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #6
    bne .fail
    asrs r1, r1, #1
    bcc .notint
    ldrh r4, [r0, #8]
    cmp r1, r4
    bhs .oob
    lsls r1, r1, #2
    ldr r4, [r0, #4]
    str r2, [r4, r1]
    bx lr
.notint:
    lsls r1, r1, #1
    push {lr, r0, r2}      
    mov r0, r1
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::toInt
    mov r1, r0
    pop {r0, r2}
.doop:
    mov r7, sp
    str r7, [r6, #4]
    bl Array_::setAt
    pop {pc}
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.oob:
    push {lr}
    b .doop
    .object _pxt_helper_get "helper: get"
    .section code
_pxt_map_get:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*1 ; pop locals 1
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_set "helper: set"
    .section code
_pxt_map_set:
    lsls r4, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r4, [r3, #8]
    cmp r4, #8
    bne .notmap
    push {lr}
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSetByString
    pop {pc}
.notmap:
    mov r4, r3 ; save VT
    push {r0, r2, lr}
    mov r0, r1
    bl pxtrt::lookupMapKey
    mov r1, r0 ; put key index in r1
    ldr r0, [sp, #0] ; restore obj pointer
    mov r3, r4 ; restore vt
    bl .dowork
    add sp, #4*2 ; pop locals 2
    pop {pc}
.dowork:
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.objlit:
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .object _pxt_helper_bind "helper: bind"
    .section code
_pxt_bind_helper:
    push {r0, r2}
    movs r0, #2
    ldr r1, _ldlit_367 ; _pxt_bind_lit      
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::mkAction
    pop {r1, r2}
    str r1, [r0, #12]
    str r2, [r0, #16]
    bx r4 ; return
_pxt_bind_lit:
    .word pxt::RefAction_vtable
    .short 0, 0 ; no captured vars
    .word .bindCode@fn
.bindCode:
; r0-bind object, r4-#args
    cmp r4, #12
    bge .fail
    lsls r3, r4, #2
    ldr r2, _ldlit_368 ; _pxt_copy_list      
    ldr r1, [r2, r3]
    ldr r3, [r0, #12]
    ldr r2, [r0, #16]
    adds r4, r4, #1
    bx r1
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_pxt_copy_list:
    .word _pxt_bind_0@fn
    .word _pxt_bind_1@fn
    .word _pxt_bind_2@fn
    .word _pxt_bind_3@fn
    .word _pxt_bind_4@fn
    .word _pxt_bind_5@fn
    .word _pxt_bind_6@fn
    .word _pxt_bind_7@fn
    .word _pxt_bind_8@fn
    .word _pxt_bind_9@fn
    .word _pxt_bind_10@fn
    .word _pxt_bind_11@fn
_pxt_bind_0:
    sub sp, #4
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*1] ; store LR
    blx r2
    ldr r1, [sp, #4*1]
    add sp, #8
    bx r1
_pxt_bind_1:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*2] ; store LR
    blx r2
    ldr r1, [sp, #4*2]
    add sp, #8
    bx r1
_pxt_bind_2:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*3] ; store LR
    blx r2
    ldr r1, [sp, #4*3]
    add sp, #8
    bx r1
_pxt_bind_3:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*4] ; store LR
    blx r2
    ldr r1, [sp, #4*4]
    add sp, #8
    bx r1
_pxt_bind_4:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*5] ; store LR
    blx r2
    ldr r1, [sp, #4*5]
    add sp, #8
    bx r1
_pxt_bind_5:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*6] ; store LR
    blx r2
    ldr r1, [sp, #4*6]
    add sp, #8
    bx r1
_pxt_bind_6:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*7] ; store LR
    blx r2
    ldr r1, [sp, #4*7]
    add sp, #8
    bx r1
_pxt_bind_7:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*8] ; store LR
    blx r2
    ldr r1, [sp, #4*8]
    add sp, #8
    bx r1
_pxt_bind_8:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*9] ; store LR
    blx r2
    ldr r1, [sp, #4*9]
    add sp, #8
    bx r1
_pxt_bind_9:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*10] ; store LR
    blx r2
    ldr r1, [sp, #4*10]
    add sp, #8
    bx r1
_pxt_bind_10:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*11] ; store LR
    blx r2
    ldr r1, [sp, #4*11]
    add sp, #8
    bx r1
_pxt_bind_11:
    sub sp, #4
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*5]
    str r1, [sp, #4*4]
    ldr r1, [sp, #4*6]
    str r1, [sp, #4*5]
    ldr r1, [sp, #4*7]
    str r1, [sp, #4*6]
    ldr r1, [sp, #4*8]
    str r1, [sp, #4*7]
    ldr r1, [sp, #4*9]
    str r1, [sp, #4*8]
    ldr r1, [sp, #4*10]
    str r1, [sp, #4*9]
    ldr r1, [sp, #4*11]
    str r1, [sp, #4*10]
    push {r3} ; this-ptr
    mov r1, lr
    str r1, [sp, #4*12] ; store LR
    blx r2
    ldr r1, [sp, #4*12]
    add sp, #8
    bx r1
_code_end:
    .section code
    .object _code_helper__lambda_call0_0
_lambda_call0_0:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall3__1
_ifacecall3__1:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #3
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.object PUSH
.balign 4
_ldlit_367:
 .word _pxt_bind_lit
_ldlit_368:
 .word _pxt_copy_list
.object POP
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    movs r1, r0
    str r1, [sp, #4*2]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__expand_args_1_2
_expand_args_1_2:
    movs r0, #0
    movs r1, #0
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_fwdBase_FwdServoClient__C3860_validate_3
_inst_fwdBase_FwdServoClient__C3860_validate_3:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_modules_ServoClient__C3834_validate_4
_inst_modules_ServoClient__C3834_validate_4:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #21
    blt .fail
    cmp r2, #22
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_2_5
_expand_args_2_5:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #2*4]
    str r1, [sp, #2*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_jacdac_RegisterClient__C3673_validate_6
_inst_jacdac_RegisterClient__C3673_validate_6:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #23
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_7
_conv_7:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_8
_conv_8:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_builtin6_validate_9
_inst_builtin6_validate_9:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #6
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_10
_conv_10:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin6_validate_9
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__lambda_call2_11
_lambda_call2_11:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #2
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    str r5, [sp, #4*2]
    mov r1, lr
    str r1, [sp, #4*3]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*3] ; restore what was in LR
    ldr r5, [sp, #4*2] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_12
_conv_12:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_13
_conv_13:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_14
_conv_14:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_15
_conv_15:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*1] ; estack
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__lambda_call3_16
_lambda_call3_16:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_17
_conv_17:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_9
    ldr r1, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin3_validate_18
_inst_builtin3_validate_18:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #3
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_19
_conv_19:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin3_validate_18
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_TokenParser__C4156_validate_20
_inst_jacdac_TokenParser__C4156_validate_20:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #31
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_21
_conv_21:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_22
_conv_22:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*3] ; estack
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_23
_conv_23:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_control_PollEvent__C4026_validate_24
_inst_control_PollEvent__C4026_validate_24:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #32
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_builtin4_validate_25
_inst_builtin4_validate_25:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_26
_conv_26:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin4_validate_25
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_27
_conv_27:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__ifacecall1__28
_ifacecall1__28:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #1
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    movs r1, r0
    str r1, [sp, #4*0]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #0
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    str r5, [sp, #4*0]
    mov r1, lr
    str r1, [sp, #4*1]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*1] ; restore what was in LR
    ldr r5, [sp, #4*0] ; restore lambda ctx
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_29
_conv_29:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_30
_conv_30:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin6_validate_9
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_Client__C3696_validate_31
_inst_jacdac_Client__C3696_validate_31:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #18
    blt .fail
    cmp r2, #22
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__expand_args_4_32
_expand_args_4_32:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #4*4]
    str r1, [sp, #4*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_jacdac_Device__C3724_validate_33
_inst_jacdac_Device__C3724_validate_33:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #24
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_RegQuery__C4287_validate_34
_inst_jacdac_RegQuery__C4287_validate_34:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #33
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_JDPacket__C3062_validate_35
_inst_jacdac_JDPacket__C3062_validate_35:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #34
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_36
_conv_36:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_37
_conv_37:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_Bus__C3607_validate_38
_inst_jacdac_Bus__C3607_validate_38:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #17
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_Server__C3646_validate_39
_inst_jacdac_Server__C3646_validate_39:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    blt .fail
    cmp r2, #30
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__classCall_jacdac_Server__C3646_40
_classCall_jacdac_Server__C3646_40:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #25
    blt .fail
    cmp r2, #30
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_AckAwaiter__C4125_validate_41
_inst_jacdac_AckAwaiter__C4125_validate_41:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #43
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_42
_conv_42:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__classCall_jacdac_Client__C3696_this_43
_classCall_jacdac_Client__C3696_this_43:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_44
_conv_44:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__expand_args_3_45
_expand_args_3_45:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #3*4]
    str r1, [sp, #3*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__inst_jacdac_ClientPacketQueue__C4276_validate_46
_inst_jacdac_ClientPacketQueue__C4276_validate_46:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #35
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_47
_conv_47:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_ClientRoleQuery__C3688_validate_48
_inst_jacdac_ClientRoleQuery__C3688_validate_48:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #36
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_49
_conv_49:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_18
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__conv_50
_conv_50:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    mov r2, r0      
    ldr r0, [sp, #4*3] ; estack
    ldr r1, [sp, #4*2] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_51
_conv_51:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*4] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*4] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_52
_conv_52:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _pxt_stringConv
    str r0, [sp, #4*2] ; estack
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    mov r1, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_EventSource__C3774_validate_53
_inst_jacdac_EventSource__C3774_validate_53:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #16
    blt .fail
    cmp r2, #30
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall1_get_54
_ifacecall1_get_54:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    movs r0, #0 ; undefined
    bx lr
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    bne .bind
    movs r4, #1
    bx r2
.bind:
    mov r4, lr
    bl _pxt_bind_helper
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    bx r4
.field:
    ldr r0, [r0, r2] ; load field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__expand_args_5_55
_expand_args_5_55:
    movs r0, #0
    movs r1, #0
    push {r0}
    cmp r4, #4
    blt .zero4
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero4:
    push {r0}
    cmp r4, #3
    blt .zero3
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero3:
    push {r0}
    cmp r4, #2
    blt .zero2
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero2:
    push {r0}
    cmp r4, #1
    blt .zero1
    ldr r0, [sp, #5*4]
    str r1, [sp, #5*4] ; clear existing
.zero1:
    push {r0}
    bx lr
    .section code
    .object _code_helper__conv_56
_conv_56:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin3_validate_18
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_57
_conv_57:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_25
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_DelayedPacket__C4202_validate_58
_inst_jacdac_DelayedPacket__C4202_validate_58:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #37
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_59
_conv_59:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin6_validate_9
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r1, r0      
    pop {r0}
    ldr r2, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_EventListener__C3771_validate_60
_inst_jacdac_EventListener__C3771_validate_60:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #38
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__lambda_call1_61
_lambda_call1_61:
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall2__62
_ifacecall2__62:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #2
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    movs r1, r0
    str r1, [sp, #4*1]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #1
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    str r5, [sp, #4*1]
    mov r1, lr
    str r1, [sp, #4*2]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*2] ; restore what was in LR
    ldr r5, [sp, #4*1] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__classCall_fwdBase_FwdServoClient__C3860_63
_classCall_fwdBase_FwdServoClient__C3860_63:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #22
    bne .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_SimpleSensorClient__C3422_validate_64
_inst_jacdac_SimpleSensorClient__C3422_validate_64:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #20
    blt .fail
    cmp r2, #22
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_SensorClient__C3416_validate_65
_inst_jacdac_SensorClient__C3416_validate_65:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #19
    blt .fail
    cmp r2, #22
    bgt .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__ifacecall4__66
_ifacecall4__66:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check if it's getter
    ldrh r7, [r3, #2]
    cmp r7, #1
    beq .doublecall
    movs r4, #4
    bx r2
.doublecall:
; call getter
    movs r4, #1
    push {r0, lr}
    blx r2
    pop {r1, r2}
    mov lr, r2
    b .moveArgs
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapGet
    mov lr, r4
    b .moveArgs
.field:
    ldr r0, [r0, r2] ; load field
.moveArgs:
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*2]
    movs r1, r0
    str r1, [sp, #4*3]
; lambda call
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #4
    bne .fail
    movs r4, #3
    ldrh r1, [r0, #4]
    cmp r1, #0
    bne .pushR5
    ldr r1, [r0, #8]
    bx r1 ; keep lr from the caller
.pushR5:
    sub sp, #8
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*0]
    ldr r1, [sp, #4*3]
    str r1, [sp, #4*1]
    ldr r1, [sp, #4*4]
    str r1, [sp, #4*2]
    str r5, [sp, #4*3]
    mov r1, lr
    str r1, [sp, #4*4]
    mov r5, r0
    ldr r7, [r5, #8]
    blx r7 ; exec actual lambda
    ldr r4, [sp, #4*4] ; restore what was in LR
    ldr r5, [sp, #4*3] ; restore lambda ctx
    ldr r1, [sp, #4*0]
    str r1, [sp, #4*2]
    ldr r1, [sp, #4*1]
    str r1, [sp, #4*3]
    ldr r1, [sp, #4*2]
    str r1, [sp, #4*4]
    add sp, #8
    bx r4
; end lambda call
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__ifacecall2_set_67
_ifacecall2_set_67:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldr r2, [r3, #12] ; load mult
    movs r7, r2
    beq .objlit ; built-in types have mult=0
    muls r7, r1
    lsrs r7, r2
    lsls r7, r7, #1 ; r7 - hash offset
    ldr r3, [r3, #4] ; iface table
    adds r3, r3, r7
; r0-this, r1-method idx, r2-free, r3-hash entry, r4-num args, r7-free
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    beq .hit
    adds r3, #2
    ldrh r2, [r3, #0] ; r2-offset of descriptor
    ldrh r7, [r2, r3] ; r7-method idx
    cmp r7, r1
    bne .fail2      
.hit:
    adds r3, r3, r2 ; r3-descriptor
    ldr r2, [r3, #4]
    lsls r7, r2, #31
    beq .field
; check for next descriptor
    ldrh r7, [r3, #8]
    cmp r7, r1
    bne .fail2 ; no setter!
    ldr r2, [r3, #12]
    movs r4, #2
    bx r2
.objlit:
    ldrh r2, [r3, #8]
    cmp r2, #8
    bne .fail
    mov r4, lr
    ldr r2, [sp, #4] ; ld-val
    mov r7, sp
    str r7, [r6, #4]
    bl pxtrt::mapSet
    bx r4
.field:
    ldr r3, [sp, #4] ; ld-val
    str r3, [r0, r2] ; store field
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
.fail2:
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::missingProperty
    .section code
    .object _code_helper__conv_68
_conv_68:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*2] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*2] ; estack
    bl _inst_builtin4_validate_25
    mov r2, r0      
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69
_inst_jacdac__rolemgr_RoleManagerServer__C3482_validate_69:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #29
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac__rolemgr_RoleBinding__C4246_validate_70
_inst_jacdac__rolemgr_RoleBinding__C4246_validate_70:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #40
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71
_inst_jacdac__rolemgr_DeviceWrapper__C4244_validate_71:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #39
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac__rolemgr_ServerBindings__C4250_validate_72
_inst_jacdac__rolemgr_ServerBindings__C4250_validate_72:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #41
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_73
_conv_73:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    bl _inst_builtin3_validate_18
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    mov r2, r0      
    pop {r0}
    ldr r3, [sp, #4*1] ; estack
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__classCall_jacdac_Client__C3696_74
_classCall_jacdac_Client__C3696_74:
    ldr r0, [sp, #0] ; ld-this
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #18
    blt .fail
    cmp r2, #22
    bgt .fail
    ldr r1, [r3, r1] ; ld-method
    bx r1 ; keep lr from caller
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_LoggerServer__C3359_validate_75
_inst_jacdac_LoggerServer__C3359_validate_75:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #28
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_ProxyServer__C4293_validate_76
_inst_jacdac_ProxyServer__C4293_validate_76:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #27
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_BrainServer__C4296_validate_77
_inst_jacdac_BrainServer__C4296_validate_77:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #26
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__inst_jacdac_ControlServer__C3750_validate_78
_inst_jacdac_ControlServer__C3750_validate_78:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #30
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_79
_conv_79:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin4_validate_25
    mov r1, r0      
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__inst_builtin9_validate_80
_inst_builtin9_validate_80:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #9
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
    .section code
    .object _code_helper__conv_81
_conv_81:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*1] ; estack
    bl _inst_builtin9_validate_80
    pop {pc}
    @stackempty args
    .section code
    .object _code_helper__conv_82
_conv_82:
    @stackmark args
    push {lr}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint1
    lsls r0, r0, #1
    bl _numops_toInt
.isint1:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint2
    lsls r0, r0, #1
    bl _numops_toInt
.isint2:
    push {r0}
    ldr r0, [sp, #4*3] ; estack
    asrs r0, r0, #1
    bcs .isint3
    lsls r0, r0, #1
    bl _numops_toInt
.isint3:
    mov r2, r0      
    pop {r1}
    pop {r0, pc}      
    @stackempty args
    .section code
    .object _code_helper__inst_jacdac_OutPipe__C3140_validate_83
_inst_jacdac_OutPipe__C3140_validate_83:
    lsls r2, r0, #30
    bne .fail
    cmp r0, #0
    beq .fail
    ldr r3, [r0, #0]
; vtable in R3
    ldrh r2, [r3, #8]
    cmp r2, #42
    bne .fail
    bx lr
.fail:
    mov r1, lr
    mov r7, sp
    str r7, [r6, #4]
    bl pxt::failedCast
_numops_adds:
    @scope _numops_adds
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    adds r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::adds
                    add sp, #8
                    pop {pc}
_numops_subs:
    @scope _numops_subs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r2, r1, #1
    subs r2, r0, r2
    bvs .boxed
    movs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::subs
                    add sp, #8
                    pop {pc}
_numops_ands:
    @scope _numops_ands
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ands r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::ands
                    add sp, #8
                    pop {pc}
_numops_orrs:
    @scope _numops_orrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    orrs r0, r1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::orrs
                    add sp, #8
                    pop {pc}
_numops_eors:
    @scope _numops_eors
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    eors r0, r1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::eors
                    add sp, #8
                    pop {pc}
_numops_lsls:
    @scope _numops_lsls
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsls r2, r3
    lsrs r3, r2, #30
    beq .ok
    cmp r3, #3
    bne .boxed
.ok:
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsls
                    add sp, #8
                    pop {pc}
_numops_lsrs:
    @scope _numops_lsrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r2, r0, #1
    lsrs r2, r3
    lsrs r3, r2, #30
    bne .boxed
    lsls r0, r2, #1
    adds r0, r0, #1
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::lsrs
                    add sp, #8
                    pop {pc}
_numops_asrs:
    @scope _numops_asrs
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    ; r3 := (r1 >> 1) & 0x1f
    lsls r3, r1, #26
    lsrs r3, r3, #27
    asrs r0, r3
    movs r2, #1
    orrs r0, r2
    blx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                    bl numops::asrs
                    add sp, #8
                    pop {pc}
@scope _numops_toInt
_numops_toInt:
    asrs r0, r0, #1
    bcc .over
    blx lr
.over:
    lsls r0, r0, #1
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::toInt
pop {pc}
_numops_fromInt:
    lsls r2, r0, #1
    asrs r1, r2, #1
    cmp r0, r1
    bne .over2
    adds r0, r2, #1
    blx lr
.over2:
    push {lr}
mov r7, sp
    str r7, [r6, #4]
bl pxt::fromInt
pop {pc}
.section code
.object _pxt_helper_cmp_lt
_cmp_lt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    blt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::lt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_gt
_cmp_gt:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bgt .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::gt
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_le
_cmp_le:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    ble .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::le
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_ge
_cmp_ge:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bge .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::ge
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eq
_cmp_eq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_eqq
_cmp_eqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    beq .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::eqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neq
_cmp_neq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
.section code
.object _pxt_helper_cmp_neqq
_cmp_neqq:
    lsls r2, r0, #31
    beq .boxed
    lsls r2, r1, #31
    beq .boxed
    subs r0, r1
    bne .true
.false:
    movs r0, #0
    bx lr
.true:
    movs r0, #1
    bx lr
.boxed:
    push {lr, r0, r1}      
                    mov r7, sp
    str r7, [r6, #4]
                        bl numops::neqq
                        bl numops::toBoolDecr
                        cmp r0, #0
                    add sp, #8
                    pop {pc}
_helpers_end:
        .object jacdac_EventSource__C3774_VT
        .balign 4
jacdac_EventSource__C3774_VT:
        .short 8  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_EventSource__C3774_IfaceVT
        .short 16 ; class-id
        .short 0 ; reserved
        .word 698755870 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_EventSource__C3774_IfaceVT:
  .short 24, 14, 28, 34, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_Bus__C3607_VT
        .balign 4
jacdac_Bus__C3607_VT:
        .short 56  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Bus__C3607_IfaceVT
        .short 17 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_Bus__C3607_IfaceVT:
  .short 136, 358, 132, 130, 264, 166, 124, 250, 264, 118, 276, 162, 312, 110, 108, 106, 104, 174, 100, 98, 96, 94, 276, 282, 88, 86, 84, 82, 80, 78, 76, 74, 152, 238, 68, 162, 80, 166, 60, 58, 56, 54, 116, 50, 136, 46, 276, 98, 192, 38, 36, 34, 40, 30, 236, 146, 240, 46, 52, 194, 128, 14, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 209, 0 ; servers
  .word 8
  .short 76, 0 ; devices
  .word 12
  .short 19, 0 ; _myDevice
  .word 16
  .short 190, 0 ; restartCounter
  .word 20
  .short 188, 0 ; resetIn
  .word 24
  .short 51, 0 ; autoBindCnt
  .word 28
  .short 9, 0 ; _eventCounter
  .word 32
  .short 69, 0 ; controlServer
  .word 36
  .short 174, 0 ; proxyMode
  .word 40
  .short 242, 0 ; unattachedClients
  .word 44
  .short 45, 0 ; allClients
  .word 48
  .short 23, 0 ; _refreshing
  .word 52
  .short 194, 1 ; running
  .word jacdac_Bus_running__P3614_args@fn
  .short 231, 2 ; start
  .word jacdac_Bus_start__P3615_args@fn
  .short 43, 2 ; addServer
  .word jacdac_Bus_addServer__P3616_args@fn
  .short 99, 2 ; gcDevices
  .word jacdac_Bus_gcDevices__P4269_args@fn
  .short 200, 1 ; selfDevice
  .word jacdac_Bus_selfDevice__P3617_args@fn
  .short 152, 2 ; mkEventCmd
  .word jacdac_Bus_mkEventCmd__P3618_args@fn
  .short 62, 2 ; clearAttachCache
  .word jacdac_Bus_clearAttachCache__P3619_args@fn
  .short 128, 1 ; isClient
  .word jacdac_Bus_isClient__P3620_args@fn
  .short 177, 2 ; queueAnnounce
  .word jacdac_Bus_queueAnnounce__P3621_args@fn
  .short 72, 2 ; detachClient
  .word jacdac_Bus_detachClient__P3622_args@fn
  .short 49, 2 ; attachClient
  .word jacdac_Bus_attachClient__P3623_args@fn
  .short 232, 2 ; startClient
  .word jacdac_Bus_startClient__P3624_args@fn
  .short 181, 2 ; reattach
  .word jacdac_Bus_reattach__P3626_args@fn
  .short 173, 2 ; processPacket
  .word jacdac_Bus_processPacket__P3627_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_Client__C3696_VT
        .balign 4
jacdac_Client__C3696_VT:
        .short 60  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Client__C3696_IfaceVT
        .short 18 ; class-id
        .short 0 ; reserved
        .word -75564263 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3713_nochk@fn
        .word jacdac_Client_announceCallback__P3722_nochk@fn
        .balign 4
jacdac_Client__C3696_IfaceVT:
  .short 264, 262, 260, 258, 256, 470, 252, 458, 248, 246, 244, 242, 400, 238, 236, 402, 232, 230, 228, 226, 224, 470, 460, 218, 400, 246, 212, 210, 264, 206, 204, 202, 200, 350, 196, 450, 296, 190, 188, 186, 184, 182, 180, 178, 176, 174, 172, 170, 168, 166, 164, 178, 360, 158, 156, 154, 152, 150, 148, 146, 144, 142, 404, 138, 136, 134, 132, 130, 128, 222, 124, 122, 120, 190, 116, 114, 112, 238, 108, 226, 104, 214, 100, 98, 96, 94, 92, 90, 88, 86, 84, 218, 80, 78, 76, 74, 72, 158, 68, 66, 64, 62, 60, 58, 56, 134, 116, 50, 88, 46, 44, 266, 48, 38, 228, 82, 32, 30, 28, 258, 24, 22, 20, 194, 16, 14, 12, 34, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 7, 0 ; _device
  .word 8
  .short 91, 0 ; eventSource
  .word 12
  .short 57, 0 ; broadcast
  .word 16
  .short 216, 0 ; serviceIndex
  .word 20
  .short 236, 0 ; supressLog
  .word 24
  .short 233, 0 ; started
  .word 28
  .short 44, 0 ; advertisementData
  .word 32
  .short 237, 0 ; systemActive
  .word 36
  .short 24, 0 ; _registeredEvents
  .word 40
  .short 67, 0 ; config
  .word 44
  .short 184, 0 ; registers
  .word 48
  .short 26, 0 ; _role
  .word 52
  .short 211, 0 ; serviceClass
  .word 56
  .short 191, 1 ; role
  .word jacdac_Client_role__P3703_args@fn
  .short 192, 1 ; roleName
  .word jacdac_Client_roleName__P3704_args@fn
  .short 193, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3705_args@fn
  .short 73, 1 ; device
  .word jacdac_Client_device__P3706_args@fn
  .short 73, 0 ; set device
  .word jacdac_Client_device__P3707_args@fn
  .short 42, 2 ; addRegister
  .word jacdac_Client_addRegister__P4166_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3712_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3713_args@fn
  .short 2, 2 ; _attach
  .word jacdac_Client__attach__P3714_args@fn
  .short 103, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4167_args@fn
  .short 6, 2 ; _detach
  .word jacdac_Client__detach__P3715_args@fn
  .short 204, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3716_args@fn
  .short 224, 2 ; setReg
  .word jacdac_Client_setReg__P3718_args@fn
  .short 225, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3719_args@fn
  .short 178, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4168_args@fn
  .short 231, 2 ; start
  .word jacdac_Client_start__P3720_args@fn
  .short 47, 2 ; announceCallback
  .word jacdac_Client_announceCallback__P3722_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_SensorClient__C3416_VT
        .balign 4
jacdac_SensorClient__C3416_VT:
        .short 92  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_SensorClient__C3416_IfaceVT
        .short 19 ; class-id
        .short 0 ; reserved
        .word 476074264 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3713_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3419_nochk@fn
        .balign 4
jacdac_SensorClient__C3416_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 674, 496, 494, 492, 490, 488, 486, 484, 642, 480, 478, 492, 698, 472, 598, 468, 466, 464, 462, 460, 458, 456, 454, 452, 450, 448, 446, 444, 442, 480, 438, 436, 634, 432, 430, 428, 426, 424, 422, 420, 418, 416, 606, 532, 410, 672, 406, 404, 402, 400, 398, 396, 394, 392, 390, 388, 386, 384, 446, 380, 378, 584, 374, 372, 370, 368, 366, 364, 362, 360, 382, 356, 354, 352, 350, 348, 346, 344, 342, 340, 338, 336, 334, 332, 330, 328, 326, 324, 426, 536, 406, 316, 314, 312, 310, 580, 306, 304, 382, 300, 298, 408, 294, 292, 290, 288, 286, 284, 282, 280, 278, 276, 274, 272, 270, 268, 266, 264, 262, 260, 258, 256, 254, 252, 250, 592, 246, 244, 578, 240, 238, 236, 234, 232, 230, 228, 226, 224, 222, 220, 218, 216, 214, 532, 210, 496, 342, 204, 202, 200, 198, 196, 194, 192, 190, 188, 426, 184, 254, 460, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 294, 460, 146, 144, 294, 140, 138, 136, 134, 316, 130, 128, 126, 132, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 146, 392, 94, 92, 90, 416, 86, 84, 82, 336, 78, 76, 74, 128, 166, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 344, 70, 36, 202, 32, 30, 28, 26, 272, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 7, 0 ; _device
  .word 8
  .short 91, 0 ; eventSource
  .word 12
  .short 57, 0 ; broadcast
  .word 16
  .short 216, 0 ; serviceIndex
  .word 20
  .short 236, 0 ; supressLog
  .word 24
  .short 233, 0 ; started
  .word 28
  .short 44, 0 ; advertisementData
  .word 32
  .short 237, 0 ; systemActive
  .word 36
  .short 24, 0 ; _registeredEvents
  .word 40
  .short 67, 0 ; config
  .word 44
  .short 184, 0 ; registers
  .word 48
  .short 26, 0 ; _role
  .word 52
  .short 211, 0 ; serviceClass
  .word 56
  .short 22, 0 ; _reading
  .word 60
  .short 38, 0 ; _streamingSamples
  .word 64
  .short 37, 0 ; _streamingInterval
  .word 68
  .short 195, 0 ; samples
  .word 72
  .short 196, 0 ; samplesExpiration
  .word 76
  .short 142, 0 ; lastSample
  .word 80
  .short 136, 0 ; isStreaming
  .word 84
  .short 180, 0 ; readingTimeout
  .word 88
  .short 244, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P4227_args@fn
  .short 61, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P4228_args@fn
  .short 47, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3419_args@fn
  .short 191, 1 ; role
  .word jacdac_Client_role__P3703_args@fn
  .short 192, 1 ; roleName
  .word jacdac_Client_roleName__P3704_args@fn
  .short 193, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3705_args@fn
  .short 73, 1 ; device
  .word jacdac_Client_device__P3706_args@fn
  .short 73, 0 ; set device
  .word jacdac_Client_device__P3707_args@fn
  .short 42, 2 ; addRegister
  .word jacdac_Client_addRegister__P4166_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3712_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3713_args@fn
  .short 2, 2 ; _attach
  .word jacdac_Client__attach__P3714_args@fn
  .short 103, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4167_args@fn
  .short 6, 2 ; _detach
  .word jacdac_Client__detach__P3715_args@fn
  .short 204, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3716_args@fn
  .short 224, 2 ; setReg
  .word jacdac_Client_setReg__P3718_args@fn
  .short 225, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3719_args@fn
  .short 178, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4168_args@fn
  .short 231, 2 ; start
  .word jacdac_Client_start__P3720_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_SimpleSensorClient__C3422_VT
        .balign 4
jacdac_SimpleSensorClient__C3422_VT:
        .short 96  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_SimpleSensorClient__C3422_IfaceVT
        .short 20 ; class-id
        .short 0 ; reserved
        .word 476074264 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3713_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3419_nochk@fn
        .balign 4
jacdac_SimpleSensorClient__C3422_IfaceVT:
  .short 520, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 682, 496, 494, 492, 490, 488, 486, 484, 642, 480, 478, 492, 706, 472, 598, 468, 466, 464, 462, 460, 458, 456, 454, 452, 450, 448, 446, 444, 442, 480, 438, 436, 642, 432, 430, 428, 426, 424, 422, 420, 418, 416, 614, 532, 410, 680, 406, 404, 402, 400, 398, 396, 394, 392, 390, 388, 386, 384, 446, 380, 378, 592, 374, 372, 370, 368, 366, 364, 362, 360, 382, 356, 354, 352, 350, 348, 346, 344, 342, 340, 338, 336, 334, 332, 330, 328, 326, 324, 426, 544, 406, 316, 314, 312, 310, 588, 306, 304, 382, 300, 298, 408, 294, 292, 290, 288, 286, 284, 282, 280, 278, 276, 274, 272, 270, 268, 266, 264, 262, 260, 258, 256, 254, 252, 250, 600, 246, 244, 586, 240, 238, 236, 234, 232, 230, 228, 226, 224, 222, 220, 218, 216, 214, 540, 210, 504, 342, 204, 202, 200, 198, 196, 194, 192, 190, 188, 434, 184, 254, 468, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 294, 468, 146, 144, 294, 140, 138, 136, 134, 324, 130, 128, 126, 132, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 146, 400, 94, 92, 266, 424, 86, 84, 82, 344, 78, 76, 74, 128, 166, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 352, 70, 36, 202, 32, 30, 28, 26, 280, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 7, 0 ; _device
  .word 8
  .short 91, 0 ; eventSource
  .word 12
  .short 57, 0 ; broadcast
  .word 16
  .short 216, 0 ; serviceIndex
  .word 20
  .short 236, 0 ; supressLog
  .word 24
  .short 233, 0 ; started
  .word 28
  .short 44, 0 ; advertisementData
  .word 32
  .short 237, 0 ; systemActive
  .word 36
  .short 24, 0 ; _registeredEvents
  .word 40
  .short 67, 0 ; config
  .word 44
  .short 184, 0 ; registers
  .word 48
  .short 26, 0 ; _role
  .word 52
  .short 211, 0 ; serviceClass
  .word 56
  .short 22, 0 ; _reading
  .word 60
  .short 38, 0 ; _streamingSamples
  .word 64
  .short 37, 0 ; _streamingInterval
  .word 68
  .short 195, 0 ; samples
  .word 72
  .short 196, 0 ; samplesExpiration
  .word 76
  .short 142, 0 ; lastSample
  .word 80
  .short 136, 0 ; isStreaming
  .word 84
  .short 180, 0 ; readingTimeout
  .word 88
  .short 179, 0 ; readingDigitsPrecision
  .word 92
  .short 244, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P4227_args@fn
  .short 61, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P4228_args@fn
  .short 47, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3419_args@fn
  .short 191, 1 ; role
  .word jacdac_Client_role__P3703_args@fn
  .short 192, 1 ; roleName
  .word jacdac_Client_roleName__P3704_args@fn
  .short 193, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3705_args@fn
  .short 73, 1 ; device
  .word jacdac_Client_device__P3706_args@fn
  .short 73, 0 ; set device
  .word jacdac_Client_device__P3707_args@fn
  .short 42, 2 ; addRegister
  .word jacdac_Client_addRegister__P4166_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3712_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3713_args@fn
  .short 2, 2 ; _attach
  .word jacdac_Client__attach__P3714_args@fn
  .short 103, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4167_args@fn
  .short 6, 2 ; _detach
  .word jacdac_Client__detach__P3715_args@fn
  .short 204, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3716_args@fn
  .short 224, 2 ; setReg
  .word jacdac_Client_setReg__P3718_args@fn
  .short 225, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3719_args@fn
  .short 178, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4168_args@fn
  .short 231, 2 ; start
  .word jacdac_Client_start__P3720_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object modules_ServoClient__C3834_VT
        .balign 4
modules_ServoClient__C3834_VT:
        .short 136  ; size in bytes
        .byte 4, 249 ; magic
        .word modules_ServoClient__C3834_IfaceVT
        .short 21 ; class-id
        .short 0 ; reserved
        .word 538732824 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3713_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3419_nochk@fn
        .word modules_ServoClient_setAngle__P3837_nochk@fn
        .word modules_ServoClient_setEnabled__P3841_nochk@fn
        .balign 4
modules_ServoClient__C3834_IfaceVT:
  .short 712, 750, 588, 514, 512, 510, 508, 506, 504, 502, 500, 498, 496, 494, 492, 490, 648, 486, 484, 482, 568, 838, 476, 506, 920, 470, 468, 466, 464, 462, 460, 458, 640, 662, 700, 450, 936, 446, 468, 442, 816, 438, 436, 434, 432, 430, 428, 426, 424, 902, 420, 418, 416, 782, 412, 410, 864, 454, 404, 402, 400, 398, 396, 394, 808, 606, 484, 626, 776, 382, 380, 378, 376, 374, 372, 370, 368, 366, 364, 362, 360, 358, 356, 818, 352, 350, 348, 346, 344, 342, 340, 338, 336, 334, 332, 330, 584, 326, 324, 322, 320, 318, 316, 394, 312, 310, 324, 714, 304, 302, 300, 298, 296, 294, 292, 466, 288, 422, 284, 386, 280, 278, 276, 274, 272, 270, 268, 266, 264, 262, 460, 258, 312, 254, 252, 250, 248, 246, 244, 642, 240, 518, 236, 234, 232, 230, 228, 394, 224, 366, 660, 218, 216, 214, 252, 538, 208, 206, 204, 202, 200, 198, 196, 194, 320, 190, 524, 186, 184, 182, 180, 178, 176, 462, 172, 170, 488, 166, 164, 162, 160, 158, 156, 154, 424, 150, 212, 146, 144, 142, 140, 138, 568, 134, 244, 130, 248, 390, 124, 122, 120, 614, 116, 114, 112, 110, 108, 258, 416, 102, 100, 98, 96, 94, 92, 90, 392, 86, 84, 82, 80, 78, 76, 74, 80, 294, 68, 66, 64, 406, 60, 58, 56, 350, 52, 474, 48, 46, 44, 42, 40, 38, 36, 34, 32, 382, 28, 26, 24, 494, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 7, 0 ; _device
  .word 8
  .short 91, 0 ; eventSource
  .word 12
  .short 57, 0 ; broadcast
  .word 16
  .short 216, 0 ; serviceIndex
  .word 20
  .short 236, 0 ; supressLog
  .word 24
  .short 233, 0 ; started
  .word 28
  .short 44, 0 ; advertisementData
  .word 32
  .short 237, 0 ; systemActive
  .word 36
  .short 24, 0 ; _registeredEvents
  .word 40
  .short 67, 0 ; config
  .word 44
  .short 184, 0 ; registers
  .word 48
  .short 26, 0 ; _role
  .word 52
  .short 211, 0 ; serviceClass
  .word 56
  .short 22, 0 ; _reading
  .word 60
  .short 38, 0 ; _streamingSamples
  .word 64
  .short 37, 0 ; _streamingInterval
  .word 68
  .short 195, 0 ; samples
  .word 72
  .short 196, 0 ; samplesExpiration
  .word 76
  .short 142, 0 ; lastSample
  .word 80
  .short 136, 0 ; isStreaming
  .word 84
  .short 180, 0 ; readingTimeout
  .word 88
  .short 179, 0 ; readingDigitsPrecision
  .word 92
  .short 1, 0 ; _angle
  .word 96
  .short 8, 0 ; _enabled
  .word 100
  .short 20, 0 ; _offset
  .word 104
  .short 17, 0 ; _minAngle
  .word 108
  .short 18, 0 ; _minPulse
  .word 112
  .short 15, 0 ; _maxAngle
  .word 116
  .short 16, 0 ; _maxPulse
  .word 120
  .short 34, 0 ; _stallTorque
  .word 124
  .short 25, 0 ; _responseSpeed
  .word 128
  .short 3, 0 ; _continuousMode
  .word 132
  .short 46, 2 ; angle
  .word modules_ServoClient_angle__P3836_args@fn
  .short 221, 2 ; setAngle
  .word modules_ServoClient_setAngle__P3837_args@fn
  .short 124, 2 ; internalSetAngle
  .word modules_ServoClient_internalSetAngle__P4343_args@fn
  .short 125, 2 ; internalSetContinuous
  .word modules_ServoClient_internalSetContinuous__P4344_args@fn
  .short 87, 2 ; enabled
  .word modules_ServoClient_enabled__P3840_args@fn
  .short 222, 2 ; setEnabled
  .word modules_ServoClient_setEnabled__P3841_args@fn
  .short 150, 2 ; minAngle
  .word modules_ServoClient_minAngle__P3844_args@fn
  .short 149, 2 ; maxAngle
  .word modules_ServoClient_maxAngle__P3847_args@fn
  .short 244, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P4227_args@fn
  .short 61, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P4228_args@fn
  .short 47, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3419_args@fn
  .short 191, 1 ; role
  .word jacdac_Client_role__P3703_args@fn
  .short 192, 1 ; roleName
  .word jacdac_Client_roleName__P3704_args@fn
  .short 193, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3705_args@fn
  .short 73, 1 ; device
  .word jacdac_Client_device__P3706_args@fn
  .short 73, 0 ; set device
  .word jacdac_Client_device__P3707_args@fn
  .short 42, 2 ; addRegister
  .word jacdac_Client_addRegister__P4166_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3712_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3713_args@fn
  .short 2, 2 ; _attach
  .word jacdac_Client__attach__P3714_args@fn
  .short 103, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4167_args@fn
  .short 6, 2 ; _detach
  .word jacdac_Client__detach__P3715_args@fn
  .short 204, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3716_args@fn
  .short 224, 2 ; setReg
  .word jacdac_Client_setReg__P3718_args@fn
  .short 225, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3719_args@fn
  .short 178, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4168_args@fn
  .short 231, 2 ; start
  .word jacdac_Client_start__P3720_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object fwdBase_FwdServoClient__C3860_VT
        .balign 4
fwdBase_FwdServoClient__C3860_VT:
        .short 136  ; size in bytes
        .byte 4, 249 ; magic
        .word fwdBase_FwdServoClient__C3860_IfaceVT
        .short 22 ; class-id
        .short 0 ; reserved
        .word 538732824 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Client_handlePacket__P3713_nochk@fn
        .word jacdac_SensorClient_announceCallback__P3419_nochk@fn
        .word fwdBase_FwdServoClient_setAngle__P3865_nochk@fn
        .word fwdBase_FwdServoClient_setEnabled__P3863_nochk@fn
        .balign 4
fwdBase_FwdServoClient__C3860_IfaceVT:
  .short 712, 750, 588, 514, 512, 510, 508, 506, 504, 502, 500, 498, 496, 494, 492, 490, 648, 486, 484, 482, 568, 854, 476, 506, 936, 470, 468, 466, 464, 462, 460, 458, 640, 662, 700, 450, 952, 446, 468, 442, 832, 438, 436, 434, 432, 430, 428, 426, 424, 918, 420, 418, 416, 798, 412, 410, 880, 454, 404, 402, 400, 398, 396, 394, 824, 606, 484, 626, 792, 382, 380, 378, 376, 374, 372, 370, 368, 366, 364, 362, 360, 358, 356, 834, 352, 350, 348, 346, 344, 630, 340, 338, 336, 334, 332, 330, 584, 326, 324, 322, 320, 318, 316, 394, 312, 310, 324, 730, 304, 302, 300, 298, 296, 294, 292, 466, 288, 422, 284, 386, 280, 278, 276, 274, 272, 270, 268, 266, 264, 262, 460, 258, 312, 254, 252, 250, 248, 246, 244, 658, 240, 542, 236, 234, 232, 230, 228, 394, 224, 366, 676, 218, 216, 214, 252, 554, 208, 206, 204, 202, 200, 198, 196, 194, 320, 190, 540, 186, 184, 182, 180, 458, 176, 486, 172, 170, 504, 166, 164, 162, 160, 158, 156, 154, 424, 150, 212, 146, 144, 142, 140, 138, 584, 134, 244, 130, 248, 422, 124, 122, 120, 630, 116, 114, 112, 110, 108, 258, 432, 102, 100, 98, 96, 94, 92, 90, 352, 86, 84, 82, 80, 78, 76, 74, 80, 294, 68, 66, 64, 422, 60, 58, 56, 374, 52, 490, 48, 46, 44, 42, 40, 38, 36, 34, 32, 398, 28, 26, 24, 510, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 7, 0 ; _device
  .word 8
  .short 91, 0 ; eventSource
  .word 12
  .short 57, 0 ; broadcast
  .word 16
  .short 216, 0 ; serviceIndex
  .word 20
  .short 236, 0 ; supressLog
  .word 24
  .short 233, 0 ; started
  .word 28
  .short 44, 0 ; advertisementData
  .word 32
  .short 237, 0 ; systemActive
  .word 36
  .short 24, 0 ; _registeredEvents
  .word 40
  .short 67, 0 ; config
  .word 44
  .short 184, 0 ; registers
  .word 48
  .short 26, 0 ; _role
  .word 52
  .short 211, 0 ; serviceClass
  .word 56
  .short 22, 0 ; _reading
  .word 60
  .short 38, 0 ; _streamingSamples
  .word 64
  .short 37, 0 ; _streamingInterval
  .word 68
  .short 195, 0 ; samples
  .word 72
  .short 196, 0 ; samplesExpiration
  .word 76
  .short 142, 0 ; lastSample
  .word 80
  .short 136, 0 ; isStreaming
  .word 84
  .short 180, 0 ; readingTimeout
  .word 88
  .short 179, 0 ; readingDigitsPrecision
  .word 92
  .short 1, 0 ; _angle
  .word 96
  .short 8, 0 ; _enabled
  .word 100
  .short 20, 0 ; _offset
  .word 104
  .short 17, 0 ; _minAngle
  .word 108
  .short 18, 0 ; _minPulse
  .word 112
  .short 15, 0 ; _maxAngle
  .word 116
  .short 16, 0 ; _maxPulse
  .word 120
  .short 34, 0 ; _stallTorque
  .word 124
  .short 25, 0 ; _responseSpeed
  .word 128
  .short 3, 0 ; _continuousMode
  .word 132
  .short 222, 2 ; setEnabled
  .word fwdBase_FwdServoClient_setEnabled__P3863_args@fn
  .short 221, 2 ; setAngle
  .word fwdBase_FwdServoClient_setAngle__P3865_args@fn
  .short 101, 2 ; getSpeed
  .word fwdBase_FwdServoClient_getSpeed__P3867_args@fn
  .short 226, 2 ; setSpeed
  .word fwdBase_FwdServoClient_setSpeed__P3868_args@fn
  .short 46, 2 ; angle
  .word modules_ServoClient_angle__P3836_args@fn
  .short 124, 2 ; internalSetAngle
  .word modules_ServoClient_internalSetAngle__P4343_args@fn
  .short 125, 2 ; internalSetContinuous
  .word modules_ServoClient_internalSetContinuous__P4344_args@fn
  .short 87, 2 ; enabled
  .word modules_ServoClient_enabled__P3840_args@fn
  .short 150, 2 ; minAngle
  .word modules_ServoClient_minAngle__P3844_args@fn
  .short 149, 2 ; maxAngle
  .word modules_ServoClient_maxAngle__P3847_args@fn
  .short 244, 2 ; updateSamples
  .word jacdac_SensorClient_updateSamples__P4227_args@fn
  .short 61, 2 ; checkSamples
  .word jacdac_SensorClient_checkSamples__P4228_args@fn
  .short 47, 2 ; announceCallback
  .word jacdac_SensorClient_announceCallback__P3419_args@fn
  .short 191, 1 ; role
  .word jacdac_Client_role__P3703_args@fn
  .short 192, 1 ; roleName
  .word jacdac_Client_roleName__P3704_args@fn
  .short 193, 1 ; roleQuery
  .word jacdac_Client_roleQuery__P3705_args@fn
  .short 73, 1 ; device
  .word jacdac_Client_device__P3706_args@fn
  .short 73, 0 ; set device
  .word jacdac_Client_device__P3707_args@fn
  .short 42, 2 ; addRegister
  .word jacdac_Client_addRegister__P4166_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Client_handlePacketOuter__P3712_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Client_handlePacket__P3713_args@fn
  .short 2, 2 ; _attach
  .word jacdac_Client__attach__P3714_args@fn
  .short 103, 2 ; handleConnected
  .word jacdac_Client_handleConnected__P4167_args@fn
  .short 6, 2 ; _detach
  .word jacdac_Client__detach__P3715_args@fn
  .short 204, 2 ; sendCommand
  .word jacdac_Client_sendCommand__P3716_args@fn
  .short 224, 2 ; setReg
  .word jacdac_Client_setReg__P3718_args@fn
  .short 225, 2 ; setRegBuffer
  .word jacdac_Client_setRegBuffer__P3719_args@fn
  .short 178, 2 ; raiseEvent
  .word jacdac_Client_raiseEvent__P4168_args@fn
  .short 231, 2 ; start
  .word jacdac_Client_start__P3720_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_RegisterClient__C3673_VT
        .balign 4
jacdac_RegisterClient__C3673_VT:
        .short 32  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_RegisterClient__C3673_IfaceVT
        .short 23 ; class-id
        .short 0 ; reserved
        .word 1783883547 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_RegisterClient__C3673_IfaceVT:
  .short 136, 214, 68, 114, 152, 62, 84, 90, 56, 54, 52, 50, 48, 46, 172, 42, 40, 38, 140, 34, 32, 38, 84, 178, 120, 22, 36, 98, 152, 14, 12, 50, 80, 126, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 4, 0 ; _data
  .word 8
  .short 14, 0 ; _localTime
  .word 12
  .short 92, 0 ; flags
  .word 16
  .short 210, 0 ; service
  .word 20
  .short 65, 0 ; code
  .word 24
  .short 164, 0 ; packFormat
  .word 28
  .short 187, 2 ; reset
  .word jacdac_RegisterClient_reset__P3676_args@fn
  .short 118, 2 ; hasValues
  .word jacdac_RegisterClient_hasValues__P3678_args@fn
  .short 130, 1 ; isConst
  .word jacdac_RegisterClient_isConst__P3679_args@fn
  .short 132, 1 ; isOptional
  .word jacdac_RegisterClient_isOptional__P3680_args@fn
  .short 176, 2 ; query
  .word jacdac_RegisterClient_query__P3681_args@fn
  .short 168, 2 ; pauseUntilValues
  .word jacdac_RegisterClient_pauseUntilValues__P3682_args@fn
  .short 247, 1 ; values
  .word jacdac_RegisterClient_values__P3683_args@fn
  .short 247, 0 ; set values
  .word jacdac_RegisterClient_values__P3684_args@fn
  .short 207, 2 ; sendSet
  .word jacdac_RegisterClient_sendSet__P3685_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_RegisterClient_handlePacket__P3687_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_TokenParser__C4156_VT
        .balign 4
jacdac_TokenParser__C4156_VT:
        .short 40  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_TokenParser__C4156_IfaceVT
        .short 31 ; class-id
        .short 0 ; reserved
        .word 1101023514 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_TokenParser__C4156_IfaceVT:
  .short 136, 150, 132, 130, 128, 126, 148, 122, 120, 118, 116, 114, 112, 110, 108, 146, 104, 102, 100, 154, 96, 94, 140, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 54, 44, 42, 40, 38, 36, 106, 32, 94, 28, 26, 24, 22, 20, 18, 16, 14, 12, 42, 8, 6, 4, 2
  .short 58, 0 ; c0
  .word 4
  .short 229, 0 ; size
  .word 8
  .short 82, 0 ; div
  .word 12
  .short 94, 0 ; fp
  .word 16
  .short 156, 0 ; nfmt
  .word 20
  .short 157, 0 ; nfmt2
  .word 24
  .short 251, 0 ; word
  .word 28
  .short 126, 0 ; isArray
  .word 32
  .short 93, 0 ; fmt
  .word 36
  .short 167, 2 ; parse
  .word jacdac_TokenParser_parse__P4157_args@fn
  .word 0, 0 ; the end
        .object control_PollEvent__C4026_VT
        .balign 4
control_PollEvent__C4026_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word control_PollEvent__C4026_IfaceVT
        .short 32 ; class-id
        .short 0 ; reserved
        .word 1101023516 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
control_PollEvent__C4026_IfaceVT:
  .short 64, 38, 36, 50, 32, 30, 28, 26, 64, 22, 20, 18, 16, 22, 44, 10, 8, 6, 4, 2
  .short 85, 0 ; eid
  .word 4
  .short 249, 0 ; vid
  .word 8
  .short 231, 0 ; start
  .word 12
  .short 238, 0 ; timeOut
  .word 16
  .short 66, 0 ; condition
  .word 20
  .short 162, 0 ; once
  .word 24
  .word 0, 0 ; the end
        .object jacdac_Device__C3724_VT
        .balign 4
jacdac_Device__C3724_VT:
        .short 40  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Device__C3724_IfaceVT
        .short 24 ; class-id
        .short 0 ; reserved
        .word -75564263 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word jacdac_Device_toString__P3736_args@fn
        .balign 4
jacdac_Device__C3724_IfaceVT:
  .short 264, 262, 260, 258, 256, 254, 252, 250, 248, 246, 244, 242, 240, 238, 236, 234, 296, 230, 372, 306, 224, 414, 220, 354, 216, 214, 212, 210, 208, 206, 204, 202, 328, 198, 348, 394, 192, 190, 188, 186, 184, 182, 180, 178, 176, 174, 172, 170, 168, 166, 276, 162, 160, 190, 156, 274, 152, 150, 148, 146, 144, 150, 348, 138, 136, 134, 132, 178, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 184, 94, 92, 90, 88, 142, 84, 82, 80, 78, 76, 74, 72, 142, 68, 170, 64, 62, 60, 58, 56, 54, 52, 74, 48, 46, 44, 42, 40, 38, 52, 194, 216, 70, 28, 26, 200, 22, 188, 18, 16, 14, 108, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 143, 0 ; lastSeen
  .word 8
  .short 63, 0 ; clients
  .word 12
  .short 9, 0 ; _eventCounter
  .word 16
  .short 33, 0 ; _shortId
  .word 20
  .short 175, 0 ; queries
  .word 24
  .short 27, 0 ; _score
  .word 28
  .short 74, 0 ; deviceId
  .word 32
  .short 220, 0 ; services
  .word 36
  .short 127, 1 ; isBrain
  .word jacdac_Device_isBrain__P3729_args@fn
  .short 48, 1 ; announceflags
  .word jacdac_Device_announceflags__P3730_args@fn
  .short 190, 1 ; restartCounter
  .word jacdac_Device_restartCounter__P3731_args@fn
  .short 228, 1 ; shortId
  .word jacdac_Device_shortId__P3735_args@fn
  .short 240, 2 ; toString
  .word jacdac_Device_toString__P3736_args@fn
  .short 148, 2 ; matchesRoleAt
  .word jacdac_Device_matchesRoleAt__P3737_args@fn
  .short 146, 2 ; lookupQuery
  .word jacdac_Device_lookupQuery__P4290_args@fn
  .short 213, 1 ; serviceClassLength
  .word jacdac_Device_serviceClassLength__P3738_args@fn
  .short 217, 2 ; serviceIndexAtOffset
  .word jacdac_Device_serviceIndexAtOffset__P3739_args@fn
  .short 219, 2 ; serviceOffsetAt
  .word jacdac_Device_serviceOffsetAt__P4291_args@fn
  .short 212, 2 ; serviceClassAt
  .word jacdac_Device_serviceClassAt__P3740_args@fn
  .short 176, 2 ; query
  .word jacdac_Device_query__P3741_args@fn
  .short 173, 2 ; processPacket
  .word jacdac_Device_processPacket__P3745_args@fn
  .short 117, 2 ; hasService
  .word jacdac_Device_hasService__P3746_args@fn
  .short 5, 2 ; _destroy
  .word jacdac_Device__destroy__P3749_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_RegQuery__C4287_VT
        .balign 4
jacdac_RegQuery__C4287_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_RegQuery__C4287_IfaceVT
        .short 33 ; class-id
        .short 0 ; reserved
        .word 1650515229 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_RegQuery__C4287_IfaceVT:
  .short 48, 30, 36, 18, 56, 14, 12, 42, 8, 6, 4, 2
  .short 140, 0 ; lastQuery
  .word 4
  .short 141, 0 ; lastReport
  .word 8
  .short 245, 0 ; value
  .word 12
  .short 159, 0 ; notImplemented
  .word 16
  .short 182, 0 ; reg
  .word 20
  .short 215, 0 ; serviceIdx
  .word 24
  .word 0, 0 ; the end
        .object jacdac_JDPacket__C3062_VT
        .balign 4
jacdac_JDPacket__C3062_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_JDPacket__C3062_IfaceVT
        .short 34 ; class-id
        .short 0 ; reserved
        .word 698755865 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word jacdac_JDPacket_toString__P3106_args@fn
        .balign 4
jacdac_JDPacket__C3062_IfaceVT:
  .short 264, 262, 260, 258, 256, 550, 564, 250, 248, 246, 244, 242, 376, 238, 236, 234, 232, 230, 380, 226, 224, 222, 220, 218, 216, 310, 556, 210, 208, 206, 204, 202, 328, 198, 468, 194, 256, 190, 188, 186, 376, 382, 180, 178, 176, 174, 172, 170, 168, 334, 164, 162, 160, 158, 156, 154, 152, 406, 188, 146, 144, 350, 140, 138, 136, 134, 180, 130, 128, 126, 364, 442, 120, 118, 116, 114, 112, 110, 108, 138, 128, 326, 100, 106, 96, 94, 356, 90, 88, 86, 156, 410, 80, 78, 76, 74, 72, 70, 300, 122, 64, 62, 276, 58, 232, 54, 52, 50, 160, 46, 380, 42, 344, 54, 156, 34, 32, 110, 28, 26, 24, 22, 20, 306, 16, 102, 292, 10, 8, 6, 4, 2
  .short 11, 0 ; _header
  .word 4
  .short 4, 0 ; _data
  .word 8
  .short 239, 0 ; timestamp
  .word 12
  .short 10, 0 ; _handled
  .word 16
  .short 96, 2 ; fromBinary
  .word jacdac_JDPacket_fromBinary__P3067_args@fn
  .short 95, 2 ; from
  .word jacdac_JDPacket_from__P3068_args@fn
  .short 163, 2 ; onlyHeader
  .word jacdac_JDPacket_onlyHeader__P3069_args@fn
  .short 97, 2 ; fromFrameless
  .word jacdac_JDPacket_fromFrameless__P3070_args@fn
  .short 137, 2 ; jdpacked
  .word jacdac_JDPacket_jdpacked__P3071_args@fn
  .short 115, 1 ; handled
  .word jacdac_JDPacket_handled__P3073_args@fn
  .short 147, 2 ; markHandled
  .word jacdac_JDPacket_markHandled__P3074_args@fn
  .short 172, 2 ; possiblyNotImplemented
  .word jacdac_JDPacket_possiblyNotImplemented__P3075_args@fn
  .short 75, 1 ; deviceIdentifier
  .word jacdac_JDPacket_deviceIdentifier__P3076_args@fn
  .short 75, 0 ; set deviceIdentifier
  .word jacdac_JDPacket_deviceIdentifier__P3077_args@fn
  .short 165, 1 ; packetFlags
  .word jacdac_JDPacket_packetFlags__P3078_args@fn
  .short 153, 1 ; multicommandClass
  .word jacdac_JDPacket_multicommandClass__P3079_args@fn
  .short 229, 1 ; size
  .word jacdac_JDPacket_size__P3080_args@fn
  .short 185, 1 ; requiresAck
  .word jacdac_JDPacket_requiresAck__P3081_args@fn
  .short 185, 0 ; set requiresAck
  .word jacdac_JDPacket_requiresAck__P3082_args@fn
  .short 216, 1 ; serviceIndex
  .word jacdac_JDPacket_serviceIndex__P3083_args@fn
  .short 216, 0 ; set serviceIndex
  .word jacdac_JDPacket_serviceIndex__P3084_args@fn
  .short 70, 1 ; crc
  .word jacdac_JDPacket_crc__P3085_args@fn
  .short 214, 1 ; serviceCommand
  .word jacdac_JDPacket_serviceCommand__P3086_args@fn
  .short 214, 0 ; set serviceCommand
  .word jacdac_JDPacket_serviceCommand__P3087_args@fn
  .short 131, 1 ; isEvent
  .word jacdac_JDPacket_isEvent__P3088_args@fn
  .short 88, 1 ; eventCode
  .word jacdac_JDPacket_eventCode__P3089_args@fn
  .short 89, 1 ; eventCounter
  .word jacdac_JDPacket_eventCounter__P3090_args@fn
  .short 134, 1 ; isRegSet
  .word jacdac_JDPacket_isRegSet__P3091_args@fn
  .short 133, 1 ; isRegGet
  .word jacdac_JDPacket_isRegGet__P3092_args@fn
  .short 183, 1 ; regCode
  .word jacdac_JDPacket_regCode__P3093_args@fn
  .short 71, 1 ; data
  .word jacdac_JDPacket_data__P3094_args@fn
  .short 71, 0 ; set data
  .word jacdac_JDPacket_data__P3095_args@fn
  .short 138, 2 ; jdunpack
  .word jacdac_JDPacket_jdunpack__P3099_args@fn
  .short 250, 2 ; withFrameStripped
  .word jacdac_JDPacket_withFrameStripped__P3101_args@fn
  .short 100, 2 ; getNumber
  .word jacdac_JDPacket_getNumber__P3102_args@fn
  .short 129, 1 ; isCommand
  .word jacdac_JDPacket_isCommand__P3104_args@fn
  .short 135, 1 ; isReport
  .word jacdac_JDPacket_isReport__P3105_args@fn
  .short 240, 2 ; toString
  .word jacdac_JDPacket_toString__P3106_args@fn
  .short 30, 2 ; _sendCore
  .word jacdac_JDPacket__sendCore__P3108_args@fn
  .short 31, 2 ; _sendReport
  .word jacdac_JDPacket__sendReport__P3109_args@fn
  .short 28, 2 ; _sendCmd
  .word jacdac_JDPacket__sendCmd__P3110_args@fn
  .short 29, 2 ; _sendCmdId
  .word jacdac_JDPacket__sendCmdId__P3111_args@fn
  .short 202, 2 ; sendAsMultiCommand
  .word jacdac_JDPacket_sendAsMultiCommand__P3112_args@fn
  .short 32, 2 ; _sendWithAck
  .word jacdac_JDPacket__sendWithAck__P3113_args@fn
  .word 0, 0 ; the end
        .object jacdac_Server__C3646_VT
        .balign 4
jacdac_Server__C3646_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_Server__C3646_IfaceVT
        .short 25 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word jacdac_Server_toString__P3666_args@fn
        .word jacdac_Server_handlePacketOuter__P3661_nochk@fn
        .word jacdac_Server_handlePacket__P3662_nochk@fn
        .word jacdac_Server_log__P4187_nochk@fn
        .balign 4
jacdac_Server__C3646_IfaceVT:
  .short 248, 182, 380, 458, 128, 158, 404, 122, 120, 318, 116, 138, 184, 206, 420, 146, 112, 398, 268, 98, 304, 94, 324, 346, 88, 86, 84, 82, 264, 78, 340, 74, 88, 286, 148, 258, 120, 62, 188, 282, 176, 54, 188, 338, 320, 110, 380, 42, 192, 38, 36, 34, 32, 30, 204, 346, 24, 22, 20, 258, 104, 318, 116, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 121, 0 ; instanceName
  .word 8
  .short 59, 0 ; calibrate
  .word 12
  .short 246, 0 ; valuePackFormat
  .word 16
  .short 123, 0 ; intensityPackFormat
  .word 20
  .short 68, 0 ; constants
  .word 24
  .short 236, 0 ; supressLog
  .word 28
  .short 194, 0 ; running
  .word 32
  .short 216, 0 ; serviceIndex
  .word 36
  .short 234, 0 ; stateUpdated
  .word 40
  .short 35, 0 ; _statusCode
  .word 44
  .short 36, 0 ; _statusVendorCode
  .word 48
  .short 39, 0 ; _value
  .word 52
  .short 12, 0 ; _intensity
  .word 56
  .short 248, 0 ; variant
  .word 60
  .short 211, 0 ; serviceClass
  .word 64
  .short 235, 1 ; statusCode
  .word jacdac_Server_statusCode__P3651_args@fn
  .short 122, 1 ; intensity
  .word jacdac_Server_intensity__P3655_args@fn
  .short 122, 0 ; set intensity
  .word jacdac_Server_intensity__P3656_args@fn
  .short 245, 1 ; value
  .word jacdac_Server_value__P3657_args@fn
  .short 245, 0 ; set value
  .word jacdac_Server_value__P3658_args@fn
  .short 227, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3659_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3661_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3662_args@fn
  .short 206, 2 ; sendReport
  .word jacdac_Server_sendReport__P4173_args@fn
  .short 205, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3664_args@fn
  .short 203, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3665_args@fn
  .short 112, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4174_args@fn
  .short 105, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4175_args@fn
  .short 114, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4176_args@fn
  .short 113, 2 ; handleValue
  .word jacdac_Server_handleValue__P4177_args@fn
  .short 106, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4178_args@fn
  .short 102, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4179_args@fn
  .short 83, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4180_args@fn
  .short 110, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4181_args@fn
  .short 111, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4182_args@fn
  .short 240, 2 ; toString
  .word jacdac_Server_toString__P3666_args@fn
  .short 109, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4183_args@fn
  .short 231, 2 ; start
  .word jacdac_Server_start__P3667_args@fn
  .short 145, 2 ; log
  .word jacdac_Server_log__P4187_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_ClientPacketQueue__C4276_VT
        .balign 4
jacdac_ClientPacketQueue__C4276_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ClientPacketQueue__C4276_IfaceVT
        .short 35 ; class-id
        .short 0 ; reserved
        .word 1192397597 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_ClientPacketQueue__C4276_IfaceVT:
  .short 32, 22, 20, 34, 16, 46, 36, 10, 8, 6, 4, 2
  .short 170, 0 ; pkts
  .word 4
  .short 166, 0 ; parent
  .word 8
  .short 243, 2 ; updateQueue
  .word jacdac_ClientPacketQueue_updateQueue__P4277_args@fn
  .short 201, 2 ; send
  .word jacdac_ClientPacketQueue_send__P4279_args@fn
  .short 186, 2 ; resend
  .word jacdac_ClientPacketQueue_resend__P4280_args@fn
  .word 0, 0 ; the end
        .object jacdac_ClientRoleQuery__C3688_VT
        .balign 4
jacdac_ClientRoleQuery__C3688_VT:
        .short 20  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ClientRoleQuery__C3688_IfaceVT
        .short 36 ; class-id
        .short 0 ; reserved
        .word 1192397598 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_ClientRoleQuery__C3688_IfaceVT:
  .short 16, 22, 36, 26, 8, 6, 4, 2
  .short 191, 0 ; role
  .word 4
  .short 73, 0 ; device
  .word 8
  .short 216, 0 ; serviceIndex
  .word 12
  .short 218, 0 ; serviceOffset
  .word 16
  .word 0, 0 ; the end
        .object jacdac_DelayedPacket__C4202_VT
        .balign 4
jacdac_DelayedPacket__C4202_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_DelayedPacket__C4202_IfaceVT
        .short 37 ; class-id
        .short 0 ; reserved
        .word -287244001 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_DelayedPacket__C4202_IfaceVT:
  .short 12, 18, 8, 6, 4, 2
  .short 239, 0 ; timestamp
  .word 4
  .short 169, 0 ; pkt
  .word 8
  .word 0, 0 ; the end
        .object jacdac_EventListener__C3771_VT
        .balign 4
jacdac_EventListener__C3771_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_EventListener__C3771_IfaceVT
        .short 38 ; class-id
        .short 0 ; reserved
        .word -287244001 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_EventListener__C3771_IfaceVT:
  .short 20, 10, 8, 6, 4, 2
  .short 139, 0 ; key
  .word 4
  .short 116, 0 ; handler
  .word 8
  .word 0, 0 ; the end
        .object jacdac_BrainServer__C4296_VT
        .balign 4
jacdac_BrainServer__C4296_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_BrainServer__C4296_IfaceVT
        .short 26 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3661_nochk@fn
        .word jacdac_Server_handlePacket__P3662_nochk@fn
        .word jacdac_Server_log__P4187_nochk@fn
        .balign 4
jacdac_BrainServer__C4296_IfaceVT:
  .short 248, 182, 380, 458, 128, 158, 404, 122, 120, 318, 116, 138, 184, 206, 420, 146, 112, 398, 268, 98, 304, 94, 324, 346, 88, 86, 84, 82, 264, 78, 340, 74, 88, 286, 148, 258, 120, 62, 188, 282, 176, 54, 188, 338, 320, 110, 380, 42, 192, 38, 36, 34, 32, 30, 204, 346, 24, 22, 20, 258, 104, 318, 116, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 121, 0 ; instanceName
  .word 8
  .short 59, 0 ; calibrate
  .word 12
  .short 246, 0 ; valuePackFormat
  .word 16
  .short 123, 0 ; intensityPackFormat
  .word 20
  .short 68, 0 ; constants
  .word 24
  .short 236, 0 ; supressLog
  .word 28
  .short 194, 0 ; running
  .word 32
  .short 216, 0 ; serviceIndex
  .word 36
  .short 234, 0 ; stateUpdated
  .word 40
  .short 35, 0 ; _statusCode
  .word 44
  .short 36, 0 ; _statusVendorCode
  .word 48
  .short 39, 0 ; _value
  .word 52
  .short 12, 0 ; _intensity
  .word 56
  .short 248, 0 ; variant
  .word 60
  .short 211, 0 ; serviceClass
  .word 64
  .short 235, 1 ; statusCode
  .word jacdac_Server_statusCode__P3651_args@fn
  .short 122, 1 ; intensity
  .word jacdac_Server_intensity__P3655_args@fn
  .short 122, 0 ; set intensity
  .word jacdac_Server_intensity__P3656_args@fn
  .short 245, 1 ; value
  .word jacdac_Server_value__P3657_args@fn
  .short 245, 0 ; set value
  .word jacdac_Server_value__P3658_args@fn
  .short 227, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3659_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3661_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3662_args@fn
  .short 206, 2 ; sendReport
  .word jacdac_Server_sendReport__P4173_args@fn
  .short 205, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3664_args@fn
  .short 203, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3665_args@fn
  .short 112, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4174_args@fn
  .short 105, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4175_args@fn
  .short 114, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4176_args@fn
  .short 113, 2 ; handleValue
  .word jacdac_Server_handleValue__P4177_args@fn
  .short 106, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4178_args@fn
  .short 102, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4179_args@fn
  .short 83, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4180_args@fn
  .short 110, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4181_args@fn
  .short 111, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4182_args@fn
  .short 240, 2 ; toString
  .word jacdac_Server_toString__P3666_args@fn
  .short 109, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4183_args@fn
  .short 231, 2 ; start
  .word jacdac_Server_start__P3667_args@fn
  .short 145, 2 ; log
  .word jacdac_Server_log__P4187_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_ProxyServer__C4293_VT
        .balign 4
jacdac_ProxyServer__C4293_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ProxyServer__C4293_IfaceVT
        .short 27 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3661_nochk@fn
        .word jacdac_Server_handlePacket__P3662_nochk@fn
        .word jacdac_Server_log__P4187_nochk@fn
        .balign 4
jacdac_ProxyServer__C4293_IfaceVT:
  .short 248, 182, 380, 458, 128, 158, 404, 122, 120, 318, 116, 138, 184, 206, 420, 146, 112, 398, 268, 98, 304, 94, 324, 346, 88, 86, 84, 82, 264, 78, 340, 74, 88, 286, 148, 258, 120, 62, 188, 282, 176, 54, 188, 338, 320, 110, 380, 42, 192, 38, 36, 34, 32, 30, 204, 346, 24, 22, 20, 258, 104, 318, 116, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 121, 0 ; instanceName
  .word 8
  .short 59, 0 ; calibrate
  .word 12
  .short 246, 0 ; valuePackFormat
  .word 16
  .short 123, 0 ; intensityPackFormat
  .word 20
  .short 68, 0 ; constants
  .word 24
  .short 236, 0 ; supressLog
  .word 28
  .short 194, 0 ; running
  .word 32
  .short 216, 0 ; serviceIndex
  .word 36
  .short 234, 0 ; stateUpdated
  .word 40
  .short 35, 0 ; _statusCode
  .word 44
  .short 36, 0 ; _statusVendorCode
  .word 48
  .short 39, 0 ; _value
  .word 52
  .short 12, 0 ; _intensity
  .word 56
  .short 248, 0 ; variant
  .word 60
  .short 211, 0 ; serviceClass
  .word 64
  .short 235, 1 ; statusCode
  .word jacdac_Server_statusCode__P3651_args@fn
  .short 122, 1 ; intensity
  .word jacdac_Server_intensity__P3655_args@fn
  .short 122, 0 ; set intensity
  .word jacdac_Server_intensity__P3656_args@fn
  .short 245, 1 ; value
  .word jacdac_Server_value__P3657_args@fn
  .short 245, 0 ; set value
  .word jacdac_Server_value__P3658_args@fn
  .short 227, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3659_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3661_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3662_args@fn
  .short 206, 2 ; sendReport
  .word jacdac_Server_sendReport__P4173_args@fn
  .short 205, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3664_args@fn
  .short 203, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3665_args@fn
  .short 112, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4174_args@fn
  .short 105, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4175_args@fn
  .short 114, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4176_args@fn
  .short 113, 2 ; handleValue
  .word jacdac_Server_handleValue__P4177_args@fn
  .short 106, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4178_args@fn
  .short 102, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4179_args@fn
  .short 83, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4180_args@fn
  .short 110, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4181_args@fn
  .short 111, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4182_args@fn
  .short 240, 2 ; toString
  .word jacdac_Server_toString__P3666_args@fn
  .short 109, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4183_args@fn
  .short 231, 2 ; start
  .word jacdac_Server_start__P3667_args@fn
  .short 145, 2 ; log
  .word jacdac_Server_log__P4187_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_LoggerServer__C3359_VT
        .balign 4
jacdac_LoggerServer__C3359_VT:
        .short 76  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_LoggerServer__C3359_IfaceVT
        .short 28 ; class-id
        .short 0 ; reserved
        .word 1783883546 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3661_nochk@fn
        .word jacdac_LoggerServer_handlePacket__P3362_nochk@fn
        .word jacdac_LoggerServer_log__P3364_nochk@fn
        .balign 4
jacdac_LoggerServer__C3359_IfaceVT:
  .short 248, 182, 412, 482, 128, 158, 436, 122, 120, 350, 116, 138, 184, 206, 260, 146, 112, 430, 308, 98, 336, 94, 356, 378, 88, 214, 84, 82, 224, 78, 372, 74, 88, 318, 148, 290, 120, 62, 228, 218, 176, 310, 228, 370, 352, 110, 180, 402, 232, 38, 36, 34, 32, 30, 244, 370, 24, 22, 20, 290, 104, 350, 116, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 121, 0 ; instanceName
  .word 8
  .short 59, 0 ; calibrate
  .word 12
  .short 246, 0 ; valuePackFormat
  .word 16
  .short 123, 0 ; intensityPackFormat
  .word 20
  .short 68, 0 ; constants
  .word 24
  .short 236, 0 ; supressLog
  .word 28
  .short 194, 0 ; running
  .word 32
  .short 216, 0 ; serviceIndex
  .word 36
  .short 234, 0 ; stateUpdated
  .word 40
  .short 35, 0 ; _statusCode
  .word 44
  .short 36, 0 ; _statusVendorCode
  .word 48
  .short 39, 0 ; _value
  .word 52
  .short 12, 0 ; _intensity
  .word 56
  .short 248, 0 ; variant
  .word 60
  .short 211, 0 ; serviceClass
  .word 64
  .short 13, 0 ; _lastListenerTime
  .word 68
  .short 151, 0 ; minPriority
  .word 72
  .short 107, 2 ; handlePacket
  .word jacdac_LoggerServer_handlePacket__P3362_args@fn
  .short 145, 2 ; log
  .word jacdac_LoggerServer_log__P3364_args@fn
  .short 40, 2 ; add
  .word jacdac_LoggerServer_add__P3367_args@fn
  .short 235, 1 ; statusCode
  .word jacdac_Server_statusCode__P3651_args@fn
  .short 122, 1 ; intensity
  .word jacdac_Server_intensity__P3655_args@fn
  .short 122, 0 ; set intensity
  .word jacdac_Server_intensity__P3656_args@fn
  .short 245, 1 ; value
  .word jacdac_Server_value__P3657_args@fn
  .short 245, 0 ; set value
  .word jacdac_Server_value__P3658_args@fn
  .short 227, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3659_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3661_args@fn
  .short 206, 2 ; sendReport
  .word jacdac_Server_sendReport__P4173_args@fn
  .short 205, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3664_args@fn
  .short 203, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3665_args@fn
  .short 112, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4174_args@fn
  .short 105, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4175_args@fn
  .short 114, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4176_args@fn
  .short 113, 2 ; handleValue
  .word jacdac_Server_handleValue__P4177_args@fn
  .short 106, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4178_args@fn
  .short 102, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4179_args@fn
  .short 83, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4180_args@fn
  .short 110, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4181_args@fn
  .short 111, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4182_args@fn
  .short 240, 2 ; toString
  .word jacdac_Server_toString__P3666_args@fn
  .short 109, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4183_args@fn
  .short 231, 2 ; start
  .word jacdac_Server_start__P3667_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac__rolemgr_RoleManagerServer__C3482_VT
        .balign 4
jacdac__rolemgr_RoleManagerServer__C3482_VT:
        .short 76  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_RoleManagerServer__C3482_IfaceVT
        .short 29 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_Server_handlePacketOuter__P3661_nochk@fn
        .word jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_nochk@fn
        .word jacdac_Server_log__P4187_nochk@fn
        .balign 4
jacdac__rolemgr_RoleManagerServer__C3482_IfaceVT:
  .short 376, 414, 308, 546, 624, 254, 252, 250, 248, 246, 244, 274, 240, 558, 236, 234, 232, 230, 468, 226, 224, 222, 244, 218, 288, 310, 212, 210, 560, 206, 204, 242, 208, 198, 532, 194, 408, 190, 188, 186, 432, 182, 180, 178, 448, 174, 468, 170, 168, 166, 164, 162, 160, 158, 156, 154, 296, 150, 148, 146, 448, 142, 140, 138, 152, 134, 388, 130, 208, 126, 124, 354, 120, 174, 116, 114, 272, 286, 372, 106, 104, 222, 100, 98, 96, 278, 92, 418, 400, 86, 84, 146, 208, 454, 76, 74, 72, 270, 204, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 270, 44, 402, 40, 38, 36, 34, 32, 198, 28, 306, 368, 110, 20, 18, 16, 118, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 121, 0 ; instanceName
  .word 8
  .short 59, 0 ; calibrate
  .word 12
  .short 246, 0 ; valuePackFormat
  .word 16
  .short 123, 0 ; intensityPackFormat
  .word 20
  .short 68, 0 ; constants
  .word 24
  .short 236, 0 ; supressLog
  .word 28
  .short 194, 0 ; running
  .word 32
  .short 216, 0 ; serviceIndex
  .word 36
  .short 234, 0 ; stateUpdated
  .word 40
  .short 35, 0 ; _statusCode
  .word 44
  .short 36, 0 ; _statusVendorCode
  .word 48
  .short 39, 0 ; _value
  .word 52
  .short 12, 0 ; _intensity
  .word 56
  .short 248, 0 ; variant
  .word 60
  .short 211, 0 ; serviceClass
  .word 64
  .short 21, 0 ; _oldBindingsHash
  .word 68
  .short 50, 0 ; autoBind
  .word 72
  .short 107, 2 ; handlePacket
  .word jacdac__rolemgr_RoleManagerServer_handlePacket__P3485_args@fn
  .short 53, 2 ; bindingHash
  .word jacdac__rolemgr_RoleManagerServer_bindingHash__P4256_args@fn
  .short 52, 2 ; bindRoles
  .word jacdac__rolemgr_RoleManagerServer_bindRoles__P3486_args@fn
  .short 60, 2 ; checkChanges
  .word jacdac__rolemgr_RoleManagerServer_checkChanges__P4257_args@fn
  .short 235, 1 ; statusCode
  .word jacdac_Server_statusCode__P3651_args@fn
  .short 122, 1 ; intensity
  .word jacdac_Server_intensity__P3655_args@fn
  .short 122, 0 ; set intensity
  .word jacdac_Server_intensity__P3656_args@fn
  .short 245, 1 ; value
  .word jacdac_Server_value__P3657_args@fn
  .short 245, 0 ; set value
  .word jacdac_Server_value__P3658_args@fn
  .short 227, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3659_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_Server_handlePacketOuter__P3661_args@fn
  .short 206, 2 ; sendReport
  .word jacdac_Server_sendReport__P4173_args@fn
  .short 205, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3664_args@fn
  .short 203, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3665_args@fn
  .short 112, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4174_args@fn
  .short 105, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4175_args@fn
  .short 114, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4176_args@fn
  .short 113, 2 ; handleValue
  .word jacdac_Server_handleValue__P4177_args@fn
  .short 106, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4178_args@fn
  .short 102, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4179_args@fn
  .short 83, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4180_args@fn
  .short 110, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4181_args@fn
  .short 111, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4182_args@fn
  .short 240, 2 ; toString
  .word jacdac_Server_toString__P3666_args@fn
  .short 109, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4183_args@fn
  .short 231, 2 ; start
  .word jacdac_Server_start__P3667_args@fn
  .short 145, 2 ; log
  .word jacdac_Server_log__P4187_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac__rolemgr_DeviceWrapper__C4244_VT
        .balign 4
jacdac__rolemgr_DeviceWrapper__C4244_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_DeviceWrapper__C4244_IfaceVT
        .short 39 ; class-id
        .short 0 ; reserved
        .word -287244002 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac__rolemgr_DeviceWrapper__C4244_IfaceVT:
  .short 32, 14, 12, 18, 8, 6, 4, 2
  .short 54, 0 ; bindings
  .word 4
  .short 197, 0 ; score
  .word 8
  .short 73, 0 ; device
  .word 12
  .word 0, 0 ; the end
        .object jacdac__rolemgr_RoleBinding__C4246_VT
        .balign 4
jacdac__rolemgr_RoleBinding__C4246_VT:
        .short 24  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_RoleBinding__C4246_IfaceVT
        .short 40 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac__rolemgr_RoleBinding__C4246_IfaceVT:
  .short 24, 30, 60, 18, 48, 38, 12, 26, 56, 6, 4, 2
  .short 55, 0 ; boundToDev
  .word 4
  .short 56, 0 ; boundToServiceIdx
  .word 8
  .short 191, 0 ; role
  .word 12
  .short 211, 0 ; serviceClass
  .word 16
  .short 193, 0 ; roleQuery
  .word 20
  .short 119, 2 ; host
  .word jacdac__rolemgr_RoleBinding_host__P4247_args@fn
  .short 199, 2 ; select
  .word jacdac__rolemgr_RoleBinding_select__P4248_args@fn
  .word 0, 0 ; the end
        .object jacdac__rolemgr_ServerBindings__C4250_VT
        .balign 4
jacdac__rolemgr_ServerBindings__C4250_VT:
        .short 12  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac__rolemgr_ServerBindings__C4250_IfaceVT
        .short 41 ; class-id
        .short 0 ; reserved
        .word 1703617822 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac__rolemgr_ServerBindings__C4250_IfaceVT:
  .short 24, 14, 36, 26, 8, 6, 4, 2
  .short 54, 0 ; bindings
  .word 4
  .short 119, 0 ; host
  .word 8
  .short 98, 1 ; fullyBound
  .word jacdac__rolemgr_ServerBindings_fullyBound__P4251_args@fn
  .short 198, 2 ; scoreFor
  .word jacdac__rolemgr_ServerBindings_scoreFor__P4252_args@fn
  .word 0, 0 ; the end
        .object jacdac_ControlServer__C3750_VT
        .balign 4
jacdac_ControlServer__C3750_VT:
        .short 68  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_ControlServer__C3750_IfaceVT
        .short 30 ; class-id
        .short 0 ; reserved
        .word 1783883545 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .word jacdac_ControlServer_handlePacketOuter__P3753_nochk@fn
        .word jacdac_Server_handlePacket__P3662_nochk@fn
        .word jacdac_Server_log__P4187_nochk@fn
        .balign 4
jacdac_ControlServer__C3750_IfaceVT:
  .short 376, 262, 308, 522, 600, 254, 252, 250, 248, 246, 244, 274, 240, 534, 236, 234, 232, 230, 444, 226, 224, 222, 244, 218, 288, 310, 348, 210, 536, 206, 204, 242, 208, 198, 508, 194, 384, 190, 188, 186, 408, 182, 180, 178, 424, 174, 444, 170, 168, 166, 292, 162, 160, 158, 156, 154, 352, 150, 148, 146, 424, 142, 140, 138, 152, 134, 364, 130, 208, 126, 124, 330, 120, 174, 116, 114, 112, 262, 348, 106, 104, 222, 100, 98, 96, 254, 92, 394, 376, 86, 84, 146, 432, 78, 76, 74, 72, 246, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 190, 44, 378, 40, 38, 36, 34, 32, 30, 28, 282, 344, 110, 20, 18, 16, 118, 12, 10, 8, 6, 4, 2
  .short 144, 0 ; listeners
  .word 4
  .short 121, 0 ; instanceName
  .word 8
  .short 59, 0 ; calibrate
  .word 12
  .short 246, 0 ; valuePackFormat
  .word 16
  .short 123, 0 ; intensityPackFormat
  .word 20
  .short 68, 0 ; constants
  .word 24
  .short 236, 0 ; supressLog
  .word 28
  .short 194, 0 ; running
  .word 32
  .short 216, 0 ; serviceIndex
  .word 36
  .short 234, 0 ; stateUpdated
  .word 40
  .short 35, 0 ; _statusCode
  .word 44
  .short 36, 0 ; _statusVendorCode
  .word 48
  .short 39, 0 ; _value
  .word 52
  .short 12, 0 ; _intensity
  .word 56
  .short 248, 0 ; variant
  .word 60
  .short 211, 0 ; serviceClass
  .word 64
  .short 208, 2 ; sendUptime
  .word jacdac_ControlServer_sendUptime__P3752_args@fn
  .short 104, 2 ; handleFloodPing
  .word jacdac_ControlServer_handleFloodPing__P4300_args@fn
  .short 108, 2 ; handlePacketOuter
  .word jacdac_ControlServer_handlePacketOuter__P3753_args@fn
  .short 235, 1 ; statusCode
  .word jacdac_Server_statusCode__P3651_args@fn
  .short 122, 1 ; intensity
  .word jacdac_Server_intensity__P3655_args@fn
  .short 122, 0 ; set intensity
  .word jacdac_Server_intensity__P3656_args@fn
  .short 245, 1 ; value
  .word jacdac_Server_value__P3657_args@fn
  .short 245, 0 ; set value
  .word jacdac_Server_value__P3658_args@fn
  .short 227, 2 ; setStatusCode
  .word jacdac_Server_setStatusCode__P3659_args@fn
  .short 107, 2 ; handlePacket
  .word jacdac_Server_handlePacket__P3662_args@fn
  .short 206, 2 ; sendReport
  .word jacdac_Server_sendReport__P4173_args@fn
  .short 205, 2 ; sendEvent
  .word jacdac_Server_sendEvent__P3664_args@fn
  .short 203, 2 ; sendChangeEvent
  .word jacdac_Server_sendChangeEvent__P3665_args@fn
  .short 112, 2 ; handleStatusCode
  .word jacdac_Server_handleStatusCode__P4174_args@fn
  .short 105, 2 ; handleInstanceName
  .word jacdac_Server_handleInstanceName__P4175_args@fn
  .short 114, 2 ; handleVariant
  .word jacdac_Server_handleVariant__P4176_args@fn
  .short 113, 2 ; handleValue
  .word jacdac_Server_handleValue__P4177_args@fn
  .short 106, 2 ; handleIntensity
  .word jacdac_Server_handleIntensity__P4178_args@fn
  .short 102, 2 ; handleCalibrateCommand
  .word jacdac_Server_handleCalibrateCommand__P4179_args@fn
  .short 83, 2 ; doCalibrate
  .word jacdac_Server_doCalibrate__P4180_args@fn
  .short 110, 2 ; handleRegFormat
  .word jacdac_Server_handleRegFormat__P4181_args@fn
  .short 111, 2 ; handleRegValue
  .word jacdac_Server_handleRegValue__P4182_args@fn
  .short 240, 2 ; toString
  .word jacdac_Server_toString__P3666_args@fn
  .short 109, 2 ; handleRegBool
  .word jacdac_Server_handleRegBool__P4183_args@fn
  .short 231, 2 ; start
  .word jacdac_Server_start__P3667_args@fn
  .short 145, 2 ; log
  .word jacdac_Server_log__P4187_args@fn
  .short 161, 2 ; on
  .word jacdac_EventSource_on__P3776_args@fn
  .short 41, 2 ; addListenerInternal
  .word jacdac_EventSource_addListenerInternal__P4164_args@fn
  .short 86, 2 ; emit
  .word jacdac_EventSource_emit__P3778_args@fn
  .word 0, 0 ; the end
        .object jacdac_OutPipe__C3140_VT
        .balign 4
jacdac_OutPipe__C3140_VT:
        .short 16  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_OutPipe__C3140_IfaceVT
        .short 42 ; class-id
        .short 0 ; reserved
        .word 1197357339 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_OutPipe__C3140_IfaceVT:
  .short 72, 70, 68, 66, 64, 62, 60, 58, 104, 54, 52, 50, 48, 46, 44, 66, 40, 94, 36, 34, 40, 46, 60, 26, 24, 62, 84, 18, 16, 14, 12, 10, 8, 6, 4, 2
  .short 154, 0 ; nextCnt
  .word 4
  .short 74, 0 ; deviceId
  .word 8
  .short 171, 0 ; port
  .word 12
  .short 95, 2 ; from
  .word jacdac_OutPipe_from__P4199_args@fn
  .short 189, 2 ; respondForEach
  .word jacdac_OutPipe_respondForEach__P3142_args@fn
  .short 254, 2 ; writeEx
  .word jacdac_OutPipe_writeEx__P4200_args@fn
  .short 252, 2 ; write
  .word jacdac_OutPipe_write__P3144_args@fn
  .short 253, 2 ; writeAndClose
  .word jacdac_OutPipe_writeAndClose__P3145_args@fn
  .short 64, 2 ; close
  .word jacdac_OutPipe_close__P3146_args@fn
  .word 0, 0 ; the end
        .object jacdac_AckAwaiter__C4125_VT
        .balign 4
jacdac_AckAwaiter__C4125_VT:
        .short 28  ; size in bytes
        .byte 4, 249 ; magic
        .word jacdac_AckAwaiter__C4125_IfaceVT
        .short 43 ; class-id
        .short 0 ; reserved
        .word 1703617821 ; hash-mult
        .word pxt::RefRecord_destroy@fn
        .word pxt::RefRecord_print@fn
        .word pxt::RefRecord_scan@fn
        .word pxt::RefRecord_gcsize@fn
        .word 0
        .balign 4
jacdac_AckAwaiter__C4125_IfaceVT:
  .short 56, 62, 20, 18, 24, 38, 28, 10, 8, 6, 4, 2
  .short 155, 0 ; nextRetry
  .word 4
  .short 160, 0 ; numTries
  .word 8
  .short 70, 0 ; crc
  .word 12
  .short 90, 0 ; eventId
  .word 16
  .short 169, 0 ; pkt
  .word 20
  .short 230, 0 ; srcId
  .word 24
  .word 0, 0 ; the end
.balign 4
.object _pxt_iface_member_names
_pxt_iface_member_names:
    .word 255
    .word _str1670  ; 0 .
    .word _str1671  ; 1 ._angle
    .word _str1672  ; 2 ._attach
    .word _str1673  ; 3 ._continuousMode
    .word _str1674  ; 4 ._data
    .word _str1675  ; 5 ._destroy
    .word _str1676  ; 6 ._detach
    .word _str1677  ; 7 ._device
    .word _str1678  ; 8 ._enabled
    .word _str1679  ; 9 ._eventCounter
    .word _str1680  ; 10 ._handled
    .word _str1681  ; 11 ._header
    .word _str1682  ; 12 ._intensity
    .word _str1683  ; 13 ._lastListenerTime
    .word _str1684  ; 14 ._localTime
    .word _str1685  ; 15 ._maxAngle
    .word _str1686  ; 16 ._maxPulse
    .word _str1687  ; 17 ._minAngle
    .word _str1688  ; 18 ._minPulse
    .word _str1689  ; 19 ._myDevice
    .word _str1690  ; 20 ._offset
    .word _str1691  ; 21 ._oldBindingsHash
    .word _str1692  ; 22 ._reading
    .word _str1693  ; 23 ._refreshing
    .word _str1694  ; 24 ._registeredEvents
    .word _str1695  ; 25 ._responseSpeed
    .word _str1696  ; 26 ._role
    .word _str1697  ; 27 ._score
    .word _str1698  ; 28 ._sendCmd
    .word _str1699  ; 29 ._sendCmdId
    .word _str1700  ; 30 ._sendCore
    .word _str1701  ; 31 ._sendReport
    .word _str1702  ; 32 ._sendWithAck
    .word _str1703  ; 33 ._shortId
    .word _str1704  ; 34 ._stallTorque
    .word _str1705  ; 35 ._statusCode
    .word _str1706  ; 36 ._statusVendorCode
    .word _str1707  ; 37 ._streamingInterval
    .word _str1708  ; 38 ._streamingSamples
    .word _str1709  ; 39 ._value
    .word _str1710  ; 40 .add
    .word _str1711  ; 41 .addListenerInternal
    .word _str1712  ; 42 .addRegister
    .word _str1713  ; 43 .addServer
    .word _str1714  ; 44 .advertisementData
    .word _str1715  ; 45 .allClients
    .word _str1716  ; 46 .angle
    .word _str1717  ; 47 .announceCallback
    .word _str1718  ; 48 .announceflags
    .word _str1719  ; 49 .attachClient
    .word _str1720  ; 50 .autoBind
    .word _str1721  ; 51 .autoBindCnt
    .word _str1722  ; 52 .bindRoles
    .word _str1723  ; 53 .bindingHash
    .word _str1724  ; 54 .bindings
    .word _str1725  ; 55 .boundToDev
    .word _str1726  ; 56 .boundToServiceIdx
    .word _str1727  ; 57 .broadcast
    .word _str1728  ; 58 .c0
    .word _str1729  ; 59 .calibrate
    .word _str1730  ; 60 .checkChanges
    .word _str1731  ; 61 .checkSamples
    .word _str1732  ; 62 .clearAttachCache
    .word _str1733  ; 63 .clients
    .word _str1734  ; 64 .close
    .word _str1735  ; 65 .code
    .word _str1736  ; 66 .condition
    .word _str1737  ; 67 .config
    .word _str1738  ; 68 .constants
    .word _str1739  ; 69 .controlServer
    .word _str1740  ; 70 .crc
    .word _str1741  ; 71 .data
    .word _str1742  ; 72 .detachClient
    .word _str1743  ; 73 .device
    .word _str1744  ; 74 .deviceId
    .word _str1745  ; 75 .deviceIdentifier
    .word _str1746  ; 76 .devices
    .word _str1747  ; 77 .digitalRead
    .word _str1748  ; 78 .digitalWrite
    .word _str1749  ; 79 .disableBrain
    .word _str1750  ; 80 .disableLogger
    .word _str1751  ; 81 .disableRoleManager
    .word _str1752  ; 82 .div
    .word _str1753  ; 83 .doCalibrate
    .word _str1754  ; 84 .drive
    .word _str1755  ; 85 .eid
    .word _str1756  ; 86 .emit
    .word _str1757  ; 87 .enabled
    .word _str1758  ; 88 .eventCode
    .word _str1759  ; 89 .eventCounter
    .word _str1760  ; 90 .eventId
    .word _str1761  ; 91 .eventSource
    .word _str1762  ; 92 .flags
    .word _str1763  ; 93 .fmt
    .word _str1764  ; 94 .fp
    .word _str1765  ; 95 .from
    .word _str1766  ; 96 .fromBinary
    .word _str1767  ; 97 .fromFrameless
    .word _str1768  ; 98 .fullyBound
    .word _str1769  ; 99 .gcDevices
    .word _str1770  ; 100 .getNumber
    .word _str1771  ; 101 .getSpeed
    .word _str1772  ; 102 .handleCalibrateCommand
    .word _str1773  ; 103 .handleConnected
    .word _str1774  ; 104 .handleFloodPing
    .word _str1775  ; 105 .handleInstanceName
    .word _str1776  ; 106 .handleIntensity
    .word _str1777  ; 107 .handlePacket
    .word _str1778  ; 108 .handlePacketOuter
    .word _str1779  ; 109 .handleRegBool
    .word _str1780  ; 110 .handleRegFormat
    .word _str1781  ; 111 .handleRegValue
    .word _str1782  ; 112 .handleStatusCode
    .word _str1783  ; 113 .handleValue
    .word _str1784  ; 114 .handleVariant
    .word _str1785  ; 115 .handled
    .word _str1786  ; 116 .handler
    .word _str1787  ; 117 .hasService
    .word _str1788  ; 118 .hasValues
    .word _str1789  ; 119 .host
    .word _str1790  ; 120 .initMotors
    .word _str1791  ; 121 .instanceName
    .word _str1792  ; 122 .intensity
    .word _str1793  ; 123 .intensityPackFormat
    .word _str1794  ; 124 .internalSetAngle
    .word _str1795  ; 125 .internalSetContinuous
    .word _str1796  ; 126 .isArray
    .word _str1797  ; 127 .isBrain
    .word _str1798  ; 128 .isClient
    .word _str1799  ; 129 .isCommand
    .word _str1800  ; 130 .isConst
    .word _str1801  ; 131 .isEvent
    .word _str1802  ; 132 .isOptional
    .word _str1803  ; 133 .isRegGet
    .word _str1804  ; 134 .isRegSet
    .word _str1805  ; 135 .isReport
    .word _str1806  ; 136 .isStreaming
    .word _str1807  ; 137 .jdpacked
    .word _str1808  ; 138 .jdunpack
    .word _str1809  ; 139 .key
    .word _str1810  ; 140 .lastQuery
    .word _str1811  ; 141 .lastReport
    .word _str1812  ; 142 .lastSample
    .word _str1813  ; 143 .lastSeen
    .word _str1814  ; 144 .listeners
    .word _str1815  ; 145 .log
    .word _str1816  ; 146 .lookupQuery
    .word _str1817  ; 147 .markHandled
    .word _str1818  ; 148 .matchesRoleAt
    .word _str1819  ; 149 .maxAngle
    .word _str1820  ; 150 .minAngle
    .word _str1821  ; 151 .minPriority
    .word _str1822  ; 152 .mkEventCmd
    .word _str1823  ; 153 .multicommandClass
    .word _str1824  ; 154 .nextCnt
    .word _str1825  ; 155 .nextRetry
    .word _str1826  ; 156 .nfmt
    .word _str1827  ; 157 .nfmt2
    .word _str1828  ; 158 .noWait
    .word _str1829  ; 159 .notImplemented
    .word _str1830  ; 160 .numTries
    .word _str1831  ; 161 .on
    .word _str1832  ; 162 .once
    .word _str1833  ; 163 .onlyHeader
    .word _str1834  ; 164 .packFormat
    .word _str1835  ; 165 .packetFlags
    .word _str1836  ; 166 .parent
    .word _str1837  ; 167 .parse
    .word _str1838  ; 168 .pauseUntilValues
    .word _str1839  ; 169 .pkt
    .word _str1840  ; 170 .pkts
    .word _str1841  ; 171 .port
    .word _str1842  ; 172 .possiblyNotImplemented
    .word _str1843  ; 173 .processPacket
    .word _str1844  ; 174 .proxyMode
    .word _str1845  ; 175 .queries
    .word _str1846  ; 176 .query
    .word _str1847  ; 177 .queueAnnounce
    .word _str1848  ; 178 .raiseEvent
    .word _str1849  ; 179 .readingDigitsPrecision
    .word _str1850  ; 180 .readingTimeout
    .word _str1851  ; 181 .reattach
    .word _str1852  ; 182 .reg
    .word _str1853  ; 183 .regCode
    .word _str1854  ; 184 .registers
    .word _str1855  ; 185 .requiresAck
    .word _str1856  ; 186 .resend
    .word _str1857  ; 187 .reset
    .word _str1858  ; 188 .resetIn
    .word _str1859  ; 189 .respondForEach
    .word _str1860  ; 190 .restartCounter
    .word _str1861  ; 191 .role
    .word _str1862  ; 192 .roleName
    .word _str1863  ; 193 .roleQuery
    .word _str1864  ; 194 .running
    .word _str1865  ; 195 .samples
    .word _str1866  ; 196 .samplesExpiration
    .word _str1867  ; 197 .score
    .word _str1868  ; 198 .scoreFor
    .word _str1869  ; 199 .select
    .word _str1870  ; 200 .selfDevice
    .word _str1871  ; 201 .send
    .word _str1872  ; 202 .sendAsMultiCommand
    .word _str1873  ; 203 .sendChangeEvent
    .word _str1874  ; 204 .sendCommand
    .word _str1875  ; 205 .sendEvent
    .word _str1876  ; 206 .sendReport
    .word _str1877  ; 207 .sendSet
    .word _str1878  ; 208 .sendUptime
    .word _str1879  ; 209 .servers
    .word _str1880  ; 210 .service
    .word _str1881  ; 211 .serviceClass
    .word _str1882  ; 212 .serviceClassAt
    .word _str1883  ; 213 .serviceClassLength
    .word _str1884  ; 214 .serviceCommand
    .word _str1885  ; 215 .serviceIdx
    .word _str1886  ; 216 .serviceIndex
    .word _str1887  ; 217 .serviceIndexAtOffset
    .word _str1888  ; 218 .serviceOffset
    .word _str1889  ; 219 .serviceOffsetAt
    .word _str1890  ; 220 .services
    .word _str1891  ; 221 .setAngle
    .word _str1892  ; 222 .setEnabled
    .word _str1893  ; 223 .setPull
    .word _str1894  ; 224 .setReg
    .word _str1895  ; 225 .setRegBuffer
    .word _str1896  ; 226 .setSpeed
    .word _str1897  ; 227 .setStatusCode
    .word _str1898  ; 228 .shortId
    .word _str1899  ; 229 .size
    .word _str1900  ; 230 .srcId
    .word _str115  ; 231 .start
    .word _str1901  ; 232 .startClient
    .word _str147  ; 233 .started
    .word _str1902  ; 234 .stateUpdated
    .word _str1903  ; 235 .statusCode
    .word _str1904  ; 236 .supressLog
    .word _str1905  ; 237 .systemActive
    .word _str1906  ; 238 .timeOut
    .word _str1907  ; 239 .timestamp
    .word _str1908  ; 240 .toString
    .word _str1909  ; 241 .turnInPlace
    .word _str1910  ; 242 .unattachedClients
    .word _str1911  ; 243 .updateQueue
    .word _str1912  ; 244 .updateSamples
    .word _str1913  ; 245 .value
    .word _str1914  ; 246 .valuePackFormat
    .word _str1915  ; 247 .values
    .word _str1916  ; 248 .variant
    .word _str1917  ; 249 .vid
    .word _str1918  ; 250 .withFrameStripped
    .word _str1919  ; 251 .word
    .word _str1920  ; 252 .write
    .word _str1921  ; 253 .writeAndClose
    .word _str1922  ; 254 .writeEx
    .word 0
_vtables_end:
.balign 4
.object _pxt_config_data
_pxt_config_data:
    .word 95, 8192  ; SETTINGS_SIZE_DEFL=8192
    .word 0
.balign 4
_img26:
 .short 0xffff
        .short 30, 5
        .byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            .balign 4
            .object _str1670
_str1670:
 .word pxt::string_inline_ascii_vt
    .short 0
    .string ""
            .balign 4
            .object _str1671
_str1671:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_angle"
            .balign 4
            .object _str1672
_str1672:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_attach"
            .balign 4
            .object _str1673
_str1673:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "_continuousMode"
            .balign 4
            .object _str1674
_str1674:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_data"
            .balign 4
            .object _str1675
_str1675:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_destroy"
            .balign 4
            .object _str1676
_str1676:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_detach"
            .balign 4
            .object _str1677
_str1677:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_device"
            .balign 4
            .object _str1678
_str1678:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_enabled"
            .balign 4
            .object _str1679
_str1679:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "_eventCounter"
            .balign 4
            .object _str1680
_str1680:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_handled"
            .balign 4
            .object _str1681
_str1681:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_header"
            .balign 4
            .object _str1682
_str1682:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_intensity"
            .balign 4
            .object _str1683
_str1683:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_lastListenerTime"
            .balign 4
            .object _str1684
_str1684:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_localTime"
            .balign 4
            .object _str1685
_str1685:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxAngle"
            .balign 4
            .object _str1686
_str1686:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_maxPulse"
            .balign 4
            .object _str1687
_str1687:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_minAngle"
            .balign 4
            .object _str1688
_str1688:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_minPulse"
            .balign 4
            .object _str1689
_str1689:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_myDevice"
            .balign 4
            .object _str1690
_str1690:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "_offset"
            .balign 4
            .object _str1691
_str1691:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "_oldBindingsHash"
            .balign 4
            .object _str1692
_str1692:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_reading"
            .balign 4
            .object _str1693
_str1693:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_refreshing"
            .balign 4
            .object _str1694
_str1694:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_registeredEvents"
            .balign 4
            .object _str1695
_str1695:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "_responseSpeed"
            .balign 4
            .object _str1696
_str1696:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "_role"
            .balign 4
            .object _str1697
_str1697:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_score"
            .balign 4
            .object _str1698
_str1698:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_sendCmd"
            .balign 4
            .object _str1699
_str1699:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "_sendCmdId"
            .balign 4
            .object _str1700
_str1700:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "_sendCore"
            .balign 4
            .object _str1701
_str1701:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_sendReport"
            .balign 4
            .object _str1702
_str1702:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_sendWithAck"
            .balign 4
            .object _str1703
_str1703:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "_shortId"
            .balign 4
            .object _str1704
_str1704:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "_stallTorque"
            .balign 4
            .object _str1705
_str1705:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "_statusCode"
            .balign 4
            .object _str1706
_str1706:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_statusVendorCode"
            .balign 4
            .object _str1707
_str1707:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "_streamingInterval"
            .balign 4
            .object _str1708
_str1708:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "_streamingSamples"
            .balign 4
            .object _str1709
_str1709:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "_value"
            .balign 4
            .object _str1710
_str1710:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "add"
            .balign 4
            .object _str1711
_str1711:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "addListenerInternal"
            .balign 4
            .object _str1712
_str1712:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "addRegister"
            .balign 4
            .object _str1713
_str1713:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "addServer"
            .balign 4
            .object _str1714
_str1714:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "advertisementData"
            .balign 4
            .object _str1715
_str1715:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "allClients"
            .balign 4
            .object _str1716
_str1716:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "angle"
            .balign 4
            .object _str1717
_str1717:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "announceCallback"
            .balign 4
            .object _str1718
_str1718:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "announceflags"
            .balign 4
            .object _str1719
_str1719:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "attachClient"
            .balign 4
            .object _str1720
_str1720:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "autoBind"
            .balign 4
            .object _str1721
_str1721:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "autoBindCnt"
            .balign 4
            .object _str1722
_str1722:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "bindRoles"
            .balign 4
            .object _str1723
_str1723:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "bindingHash"
            .balign 4
            .object _str1724
_str1724:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "bindings"
            .balign 4
            .object _str1725
_str1725:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "boundToDev"
            .balign 4
            .object _str1726
_str1726:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "boundToServiceIdx"
            .balign 4
            .object _str1727
_str1727:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "broadcast"
            .balign 4
            .object _str1728
_str1728:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "c0"
            .balign 4
            .object _str1729
_str1729:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "calibrate"
            .balign 4
            .object _str1730
_str1730:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "checkChanges"
            .balign 4
            .object _str1731
_str1731:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "checkSamples"
            .balign 4
            .object _str1732
_str1732:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "clearAttachCache"
            .balign 4
            .object _str1733
_str1733:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "clients"
            .balign 4
            .object _str1734
_str1734:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "close"
            .balign 4
            .object _str1735
_str1735:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "code"
            .balign 4
            .object _str1736
_str1736:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "condition"
            .balign 4
            .object _str1737
_str1737:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "config"
            .balign 4
            .object _str1738
_str1738:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "constants"
            .balign 4
            .object _str1739
_str1739:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "controlServer"
            .balign 4
            .object _str1740
_str1740:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "crc"
            .balign 4
            .object _str1741
_str1741:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "data"
            .balign 4
            .object _str1742
_str1742:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "detachClient"
            .balign 4
            .object _str1743
_str1743:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "device"
            .balign 4
            .object _str1744
_str1744:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "deviceId"
            .balign 4
            .object _str1745
_str1745:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "deviceIdentifier"
            .balign 4
            .object _str1746
_str1746:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "devices"
            .balign 4
            .object _str1747
_str1747:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "digitalRead"
            .balign 4
            .object _str1748
_str1748:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "digitalWrite"
            .balign 4
            .object _str1749
_str1749:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "disableBrain"
            .balign 4
            .object _str1750
_str1750:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "disableLogger"
            .balign 4
            .object _str1751
_str1751:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "disableRoleManager"
            .balign 4
            .object _str1752
_str1752:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "div"
            .balign 4
            .object _str1753
_str1753:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "doCalibrate"
            .balign 4
            .object _str1754
_str1754:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "drive"
            .balign 4
            .object _str1755
_str1755:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "eid"
            .balign 4
            .object _str1756
_str1756:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "emit"
            .balign 4
            .object _str1757
_str1757:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "enabled"
            .balign 4
            .object _str1758
_str1758:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "eventCode"
            .balign 4
            .object _str1759
_str1759:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "eventCounter"
            .balign 4
            .object _str1760
_str1760:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "eventId"
            .balign 4
            .object _str1761
_str1761:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "eventSource"
            .balign 4
            .object _str1762
_str1762:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flags"
            .balign 4
            .object _str1763
_str1763:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "fmt"
            .balign 4
            .object _str1764
_str1764:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "fp"
            .balign 4
            .object _str1765
_str1765:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "from"
            .balign 4
            .object _str1766
_str1766:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fromBinary"
            .balign 4
            .object _str1767
_str1767:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "fromFrameless"
            .balign 4
            .object _str1768
_str1768:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "fullyBound"
            .balign 4
            .object _str1769
_str1769:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "gcDevices"
            .balign 4
            .object _str1770
_str1770:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "getNumber"
            .balign 4
            .object _str1771
_str1771:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "getSpeed"
            .balign 4
            .object _str1772
_str1772:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "handleCalibrateCommand"
            .balign 4
            .object _str1773
_str1773:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleConnected"
            .balign 4
            .object _str1774
_str1774:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleFloodPing"
            .balign 4
            .object _str1775
_str1775:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "handleInstanceName"
            .balign 4
            .object _str1776
_str1776:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleIntensity"
            .balign 4
            .object _str1777
_str1777:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "handlePacket"
            .balign 4
            .object _str1778
_str1778:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "handlePacketOuter"
            .balign 4
            .object _str1779
_str1779:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "handleRegBool"
            .balign 4
            .object _str1780
_str1780:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "handleRegFormat"
            .balign 4
            .object _str1781
_str1781:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "handleRegValue"
            .balign 4
            .object _str1782
_str1782:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "handleStatusCode"
            .balign 4
            .object _str1783
_str1783:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "handleValue"
            .balign 4
            .object _str1784
_str1784:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "handleVariant"
            .balign 4
            .object _str1785
_str1785:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handled"
            .balign 4
            .object _str1786
_str1786:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "handler"
            .balign 4
            .object _str1787
_str1787:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "hasService"
            .balign 4
            .object _str1788
_str1788:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "hasValues"
            .balign 4
            .object _str1789
_str1789:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "host"
            .balign 4
            .object _str1790
_str1790:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "initMotors"
            .balign 4
            .object _str1791
_str1791:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "instanceName"
            .balign 4
            .object _str1792
_str1792:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "intensity"
            .balign 4
            .object _str1793
_str1793:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "intensityPackFormat"
            .balign 4
            .object _str1794
_str1794:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "internalSetAngle"
            .balign 4
            .object _str1795
_str1795:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "internalSetContinuous"
            .balign 4
            .object _str1796
_str1796:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isArray"
            .balign 4
            .object _str1797
_str1797:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isBrain"
            .balign 4
            .object _str1798
_str1798:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isClient"
            .balign 4
            .object _str1799
_str1799:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "isCommand"
            .balign 4
            .object _str1800
_str1800:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isConst"
            .balign 4
            .object _str1801
_str1801:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "isEvent"
            .balign 4
            .object _str1802
_str1802:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "isOptional"
            .balign 4
            .object _str1803
_str1803:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isRegGet"
            .balign 4
            .object _str1804
_str1804:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isRegSet"
            .balign 4
            .object _str1805
_str1805:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "isReport"
            .balign 4
            .object _str1806
_str1806:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "isStreaming"
            .balign 4
            .object _str1807
_str1807:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "jdpacked"
            .balign 4
            .object _str1808
_str1808:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "jdunpack"
            .balign 4
            .object _str1809
_str1809:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "key"
            .balign 4
            .object _str1810
_str1810:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "lastQuery"
            .balign 4
            .object _str1811
_str1811:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "lastReport"
            .balign 4
            .object _str1812
_str1812:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "lastSample"
            .balign 4
            .object _str1813
_str1813:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "lastSeen"
            .balign 4
            .object _str1814
_str1814:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "listeners"
            .balign 4
            .object _str1815
_str1815:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "log"
            .balign 4
            .object _str1816
_str1816:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "lookupQuery"
            .balign 4
            .object _str1817
_str1817:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "markHandled"
            .balign 4
            .object _str1818
_str1818:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "matchesRoleAt"
            .balign 4
            .object _str1819
_str1819:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "maxAngle"
            .balign 4
            .object _str1820
_str1820:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "minAngle"
            .balign 4
            .object _str1821
_str1821:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "minPriority"
            .balign 4
            .object _str1822
_str1822:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "mkEventCmd"
            .balign 4
            .object _str1823
_str1823:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "multicommandClass"
            .balign 4
            .object _str1824
_str1824:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "nextCnt"
            .balign 4
            .object _str1825
_str1825:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "nextRetry"
            .balign 4
            .object _str1826
_str1826:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "nfmt"
            .balign 4
            .object _str1827
_str1827:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "nfmt2"
            .balign 4
            .object _str1828
_str1828:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "noWait"
            .balign 4
            .object _str1829
_str1829:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "notImplemented"
            .balign 4
            .object _str1830
_str1830:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "numTries"
            .balign 4
            .object _str1831
_str1831:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "on"
            .balign 4
            .object _str1832
_str1832:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "once"
            .balign 4
            .object _str1833
_str1833:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "onlyHeader"
            .balign 4
            .object _str1834
_str1834:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "packFormat"
            .balign 4
            .object _str1835
_str1835:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "packetFlags"
            .balign 4
            .object _str1836
_str1836:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "parent"
            .balign 4
            .object _str1837
_str1837:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "parse"
            .balign 4
            .object _str1838
_str1838:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "pauseUntilValues"
            .balign 4
            .object _str1839
_str1839:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "pkt"
            .balign 4
            .object _str1840
_str1840:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "pkts"
            .balign 4
            .object _str1841
_str1841:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "port"
            .balign 4
            .object _str1842
_str1842:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "possiblyNotImplemented"
            .balign 4
            .object _str1843
_str1843:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "processPacket"
            .balign 4
            .object _str1844
_str1844:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "proxyMode"
            .balign 4
            .object _str1845
_str1845:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "queries"
            .balign 4
            .object _str1846
_str1846:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "query"
            .balign 4
            .object _str1847
_str1847:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "queueAnnounce"
            .balign 4
            .object _str1848
_str1848:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "raiseEvent"
            .balign 4
            .object _str1849
_str1849:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "readingDigitsPrecision"
            .balign 4
            .object _str1850
_str1850:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "readingTimeout"
            .balign 4
            .object _str1851
_str1851:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "reattach"
            .balign 4
            .object _str1852
_str1852:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "reg"
            .balign 4
            .object _str1853
_str1853:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "regCode"
            .balign 4
            .object _str1854
_str1854:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "registers"
            .balign 4
            .object _str1855
_str1855:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "requiresAck"
            .balign 4
            .object _str1856
_str1856:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "resend"
            .balign 4
            .object _str1857
_str1857:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "reset"
            .balign 4
            .object _str1858
_str1858:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "resetIn"
            .balign 4
            .object _str1859
_str1859:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "respondForEach"
            .balign 4
            .object _str1860
_str1860:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "restartCounter"
            .balign 4
            .object _str1861
_str1861:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "role"
            .balign 4
            .object _str1862
_str1862:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "roleName"
            .balign 4
            .object _str1863
_str1863:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "roleQuery"
            .balign 4
            .object _str1864
_str1864:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "running"
            .balign 4
            .object _str1865
_str1865:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "samples"
            .balign 4
            .object _str1866
_str1866:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "samplesExpiration"
            .balign 4
            .object _str1867
_str1867:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "score"
            .balign 4
            .object _str1868
_str1868:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "scoreFor"
            .balign 4
            .object _str1869
_str1869:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "select"
            .balign 4
            .object _str1870
_str1870:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "selfDevice"
            .balign 4
            .object _str1871
_str1871:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "send"
            .balign 4
            .object _str1872
_str1872:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "sendAsMultiCommand"
            .balign 4
            .object _str1873
_str1873:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "sendChangeEvent"
            .balign 4
            .object _str1874
_str1874:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "sendCommand"
            .balign 4
            .object _str1875
_str1875:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "sendEvent"
            .balign 4
            .object _str1876
_str1876:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sendReport"
            .balign 4
            .object _str1877
_str1877:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "sendSet"
            .balign 4
            .object _str1878
_str1878:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "sendUptime"
            .balign 4
            .object _str1879
_str1879:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "servers"
            .balign 4
            .object _str1880
_str1880:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "service"
            .balign 4
            .object _str1881
_str1881:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "serviceClass"
            .balign 4
            .object _str1882
_str1882:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "serviceClassAt"
            .balign 4
            .object _str1883
_str1883:
 .word pxt::string_inline_ascii_vt
    .short 18
    .string "serviceClassLength"
            .balign 4
            .object _str1884
_str1884:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "serviceCommand"
            .balign 4
            .object _str1885
_str1885:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "serviceIdx"
            .balign 4
            .object _str1886
_str1886:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "serviceIndex"
            .balign 4
            .object _str1887
_str1887:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "serviceIndexAtOffset"
            .balign 4
            .object _str1888
_str1888:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "serviceOffset"
            .balign 4
            .object _str1889
_str1889:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "serviceOffsetAt"
            .balign 4
            .object _str1890
_str1890:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "services"
            .balign 4
            .object _str1891
_str1891:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setAngle"
            .balign 4
            .object _str1892
_str1892:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "setEnabled"
            .balign 4
            .object _str1893
_str1893:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "setPull"
            .balign 4
            .object _str1894
_str1894:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "setReg"
            .balign 4
            .object _str1895
_str1895:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "setRegBuffer"
            .balign 4
            .object _str1896
_str1896:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "setSpeed"
            .balign 4
            .object _str1897
_str1897:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "setStatusCode"
            .balign 4
            .object _str1898
_str1898:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "shortId"
            .balign 4
            .object _str1899
_str1899:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "size"
            .balign 4
            .object _str1900
_str1900:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "srcId"
            .balign 4
            .object _str115
_str115:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "start"
            .balign 4
            .object _str1901
_str1901:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "startClient"
            .balign 4
            .object _str147
_str147:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "started"
            .balign 4
            .object _str1902
_str1902:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "stateUpdated"
            .balign 4
            .object _str1903
_str1903:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "statusCode"
            .balign 4
            .object _str1904
_str1904:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "supressLog"
            .balign 4
            .object _str1905
_str1905:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "systemActive"
            .balign 4
            .object _str1906
_str1906:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "timeOut"
            .balign 4
            .object _str1907
_str1907:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "timestamp"
            .balign 4
            .object _str1908
_str1908:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "toString"
            .balign 4
            .object _str1909
_str1909:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "turnInPlace"
            .balign 4
            .object _str1910
_str1910:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "unattachedClients"
            .balign 4
            .object _str1911
_str1911:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "updateQueue"
            .balign 4
            .object _str1912
_str1912:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "updateSamples"
            .balign 4
            .object _str1913
_str1913:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "value"
            .balign 4
            .object _str1914
_str1914:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "valuePackFormat"
            .balign 4
            .object _str1915
_str1915:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "values"
            .balign 4
            .object _str1916
_str1916:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "variant"
            .balign 4
            .object _str1917
_str1917:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "vid"
            .balign 4
            .object _str1918
_str1918:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "withFrameStripped"
            .balign 4
            .object _str1919
_str1919:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "word"
            .balign 4
            .object _str1920
_str1920:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "write"
            .balign 4
            .object _str1921
_str1921:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "writeAndClose"
            .balign 4
            .object _str1922
_str1922:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "writeEx"
            .balign 4
            .object _str2
_str2:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "0"
            .balign 4
            .object _str0
_str0:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "-"
            .balign 4
            .object _str1
_str1:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "+"
            .balign 4
            .object _str3
_str3:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "x"
            .balign 4
            .object _str4
_str4:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "X"
            .balign 4
            .object _str5
_str5:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ","
            .balign 4
            .object _str6
_str6:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "?"
            .balign 4
            .object _str7
_str7:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\n"
            .balign 4
            .object _str8
_str8:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "string"
            .balign 4
            .object _str9
_str9:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "number"
            .balign 4
            .object _str10
_str10:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "..."
            .balign 4
            .object _str11
_str11:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "[object Object]"
            .balign 4
            .object _str12
_str12:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "[Object]"
            .balign 4
            .object _str13
_str13:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "{"
            .balign 4
            .object _str14
_str14:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "\n    "
            .balign 4
            .object _str15
_str15:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string ": "
            .balign 4
            .object _str16
_str16:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "\n    ..."
            .balign 4
            .object _str17
_str17:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "\n}"
            .balign 4
            .object _str18
_str18:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "0123456789abcdef"
            .balign 4
            .object _str19
_str19:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "Invalid hex"
            .balign 4
            .object _str20
_str20:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "Oops"
            .balign 4
            .object _str21
_str21:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "#run"
            .balign 4
            .object _str22
_str22:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "#scope"
            .balign 4
            .object _str24
_str24:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "sim"
            .balign 4
            .object _str25
_str25:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "2.0"
            .balign 4
            .object _str27
_str27:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "jacdac: dongle started"
            .balign 4
            .object _str28
_str28:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "0x"
            .balign 4
            .object _str29
_str29:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "serviceIndex not set"
            .balign 4
            .object _str30
_str30:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "packet data too big"
            .balign 4
            .object _str31
_str31:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string " "
            .balign 4
            .object _str32
_str32:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "["
            .balign 4
            .object _str33
_str33:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "]: "
            .balign 4
            .object _str34
_str34:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string " crc="
            .balign 4
            .object _str35
_str35:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string ", flags="
            .balign 4
            .object _str36
_str36:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string ", sz="
            .balign 4
            .object _str37
_str37:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "packet size mismatch"
            .balign 4
            .object _str39
_str39:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "u8"
            .balign 4
            .object _str40
_str40:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "u16"
            .balign 4
            .object _str41
_str41:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "u32"
            .balign 4
            .object _str42
_str42:
 .word pxt::string_inline_ascii_vt
    .short 2
    .string "i8"
            .balign 4
            .object _str43
_str43:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "i16"
            .balign 4
            .object _str44
_str44:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "i32"
            .balign 4
            .object _str45
_str45:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "f32"
            .balign 4
            .object _str46
_str46:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "f64"
            .balign 4
            .object _str47
_str47:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "."
            .balign 4
            .object _str48
_str48:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "u64"
            .balign 4
            .object _str49
_str49:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "i64"
            .balign 4
            .object _str50
_str50:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "invalid format: "
            .balign 4
            .object _str52
_str52:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "whoops"
            .balign 4
            .object _str53
_str53:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "expecting number, got "
            .balign 4
            .object _str54
_str54:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "\x00"
            .balign 4
            .object _str55
_str55:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "unexpected string"
            .balign 4
            .object _str56
_str56:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "object"
            .balign 4
            .object _str57
_str57:
 .word pxt::string_inline_ascii_vt
    .short 17
    .string "unexpected buffer"
            .balign 4
            .object _str58
_str58:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "expecting string or buffer"
            .balign 4
            .object _str59
_str59:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "format too short"
            .balign 4
            .object _str62
_str62:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "b[8] u16"
            .balign 4
            .object _str63
_str63:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "out pipe error: no ack"
            .balign 4
            .object _str64
_str64:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "u16 u16"
            .balign 4
            .object _str65
_str65:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "s"
            .balign 4
            .object _str66
_str66:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "#jdr:"
            .balign 4
            .object _str67
_str67:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ":"
            .balign 4
            .object _str68
_str68:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "role: set "
            .balign 4
            .object _str69
_str69:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string " -> "
            .balign 4
            .object _str70
_str70:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "role: clear binding "
            .balign 4
            .object _str71
_str71:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "/"
            .balign 4
            .object _str72
_str72:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "bind srvo: "
            .balign 4
            .object _str73
_str73:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "bind order: "
            .balign 4
            .object _str74
_str74:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "b[8] u32 u8 s"
            .balign 4
            .object _str75
_str75:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "self"
            .balign 4
            .object _str76
_str76:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "autobind: devs:"
            .balign 4
            .object _str77
_str77:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string ", clients:"
            .balign 4
            .object _str78
_str78:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string ", unbound:"
            .balign 4
            .object _str79
_str79:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "found "
            .balign 4
            .object _str80
_str80:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string " servers"
            .balign 4
            .object _str81
_str81:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "binding "
            .balign 4
            .object _str82
_str82:
 .word pxt::string_inline_ascii_vt
    .short 23
    .string "roles: bindings changed"
            .balign 4
            .object _str83
_str83:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "change"
            .balign 4
            .object _str84
_str84:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "connect"
            .balign 4
            .object _str85
_str85:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "disconnect"
            .balign 4
            .object _str86
_str86:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "deviceConnect"
            .balign 4
            .object _str87
_str87:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "deviceDisconnect"
            .balign 4
            .object _str88
_str88:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "deviceChange"
            .balign 4
            .object _str89
_str89:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "deviceAnnounce"
            .balign 4
            .object _str90
_str90:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "selfAnnounce"
            .balign 4
            .object _str91
_str91:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "packetProcess"
            .balign 4
            .object _str92
_str92:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "reportReceive"
            .balign 4
            .object _str93
_str93:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "reportUpdate"
            .balign 4
            .object _str94
_str94:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "restart"
            .balign 4
            .object _str95
_str95:
 .word pxt::string_inline_ascii_vt
    .short 13
    .string "packetReceive"
            .balign 4
            .object _str96
_str96:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "packetEvent"
            .balign 4
            .object _str97
_str97:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string "statusEvent"
            .balign 4
            .object _str98
_str98:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "identify"
            .balign 4
            .object _str99
_str99:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "invalid evcode"
            .balign 4
            .object _str100
_str100:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "roles: attaching to "
            .balign 4
            .object _str101
_str101:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "; cl="
            .balign 4
            .object _str102
_str102:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "rebound "
            .balign 4
            .object _str103
_str103:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "all clients attached"
            .balign 4
            .object _str104
_str104:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "reattach: "
            .balign 4
            .object _str105
_str105:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "success"
            .balign 4
            .object _str106
_str106:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "device "
            .balign 4
            .object _str107
_str107:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " resetted ("
            .balign 4
            .object _str108
_str108:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string " > "
            .balign 4
            .object _str109
_str109:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ")"
            .balign 4
            .object _str110
_str110:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string " new proxy"
            .balign 4
            .object _str111
_str111:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "jd: "
            .balign 4
            .object _str112
_str112:
 .word pxt::string_inline_ascii_vt
    .short 26
    .string "invalid intensity register"
            .balign 4
            .object _str113
_str113:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "invalid value register"
            .balign 4
            .object _str114
_str114:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "server:"
            .balign 4
            .object _str116
_str116:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "]"
            .balign 4
            .object _str117
_str117:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string ">"
            .balign 4
            .object _str118
_str118:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "&"
            .balign 4
            .object _str119
_str119:
 .word pxt::string_inline_ascii_vt
    .short 1
    .string "="
            .balign 4
            .object _str120
_str120:
 .word pxt::string_inline_ascii_vt
    .short 3
    .string "dev"
            .balign 4
            .object _str121
_str121:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "srvi"
            .balign 4
            .object _str122
_str122:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "srvo"
            .balign 4
            .object _str123
_str123:
 .word pxt::string_inline_ascii_vt
    .short 7
    .string "no role"
            .balign 4
            .object _str124
_str124:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "invalid attach"
            .balign 4
            .object _str125
_str125:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "role: +\xa0"
            .balign 4
            .object _str126
_str126:
 .word pxt::string_inline_ascii_vt
    .short 9
    .string "roles: - "
            .balign 4
            .object _str127
_str127:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "invalid detach"
            .balign 4
            .object _str128
_str128:
 .word pxt::string_inline_ascii_vt
    .short 12
    .string "role: match "
            .balign 4
            .object _str129
_str129:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (precise:)"
            .balign 4
            .object _str130
_str130:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (dev+srvi)"
            .balign 4
            .object _str131
_str131:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (dev+srvo)"
            .balign 4
            .object _str132
_str132:
 .word pxt::string_inline_ascii_vt
    .short 11
    .string " (dev+!srv)"
            .balign 4
            .object _str133
_str133:
 .word pxt::string_inline_ascii_vt
    .short 8
    .string "destroy "
            .balign 4
            .object _str134
_str134:
 .word pxt::string_inline_ascii_vt
    .short 10
    .string "u32 u32 u8"
            .balign 4
            .object _str135
_str135:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "reset requested"
            .balign 4
            .object _str136
_str136:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "flood"
            .balign 4
            .object _str137
_str137:
 .word pxt::string_inline_ascii_vt
    .short 24
    .string "enabling power fault pin"
            .balign 4
            .object _str138
_str138:
 .word pxt::string_inline_ascii_vt
    .short 39
    .string "jacdac power overload; restarting power"
            .balign 4
            .object _str139
_str139:
 .word pxt::string_inline_ascii_vt
    .short 21
    .string "enabling identity LED"
            .balign 4
            .object _str140
_str140:
 .word pxt::string_inline_ascii_vt
    .short 14
    .string "__jacdac_proxy"
            .balign 4
            .object _str141
_str141:
 .word pxt::string_inline_ascii_vt
    .short 19
    .string "__jacdac_proxy_late"
            .balign 4
            .object _str142
_str142:
 .word pxt::string_inline_ascii_vt
    .short 22
    .string "jacdac: start dongle ("
            .balign 4
            .object _str143
_str143:
 .word pxt::string_inline_ascii_vt
    .short 4
    .string "late"
            .balign 4
            .object _str144
_str144:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "early"
            .balign 4
            .object _str145
_str145:
 .word pxt::string_inline_ascii_vt
    .short 23
    .string "jacdac: reset in dongle"
            .balign 4
            .object _str146
_str146:
 .word pxt::string_inline_ascii_vt
    .short 15
    .string "jacdac starting"
            .balign 4
            .object _str148
_str148:
 .word pxt::string_inline_ascii_vt
    .short 35
    .string "waiting for devices to enumerate..."
            .balign 4
            .object _str149
_str149:
 .word pxt::string_inline_ascii_vt
    .short 5
    .string "error"
            .balign 4
            .object _str150
_str150:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "i16.16"
            .balign 4
            .object _str151
_str151:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "u16.16"
            .balign 4
            .object _str152
_str152:
 .word pxt::string_inline_ascii_vt
    .short 6
    .string "cont=1"
            .balign 4
            .object _str153
_str153:
 .word pxt::string_inline_ascii_vt
    .short 16
    .string "leftServo?srvo=0"
            .balign 4
            .object _str154
_str154:
 .word pxt::string_inline_ascii_vt
    .short 20
    .string "fwd-servo-continuous"
.object _dbl23
.balign 4
_dbl23:
 .word pxt::number_vt
        .hex 0000c0ffffffdf41
.object _dbl38
.balign 4
_dbl38:
 .word pxt::number_vt
        .hex 000040555555e541
.object _dbl51
.balign 4
_dbl51:
 .word pxt::number_vt
        .hex 000000000000f041
.object _dbl60
.balign 4
_dbl60:
 .word pxt::number_vt
        .hex 0000e0ffffffef41
.object _dbl61
.balign 4
_dbl61:
 .word pxt::number_vt
        .hex 000000000000e0c1
.balign 4
.section code
.object _perf_counters
_pxt_perf_counters:
    .word 0
_literals_end:
